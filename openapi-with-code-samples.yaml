openapi: "3.0.3"
info:
  title: "Dub.co API"
  description: "Dub is link management infrastructure for companies to create marketing campaigns, link sharing features, and referral programs."
  version: "0.0.1"
  contact:
    name: "Dub.co Support"
    email: "support@dub.co"
    url: "https://dub.co/api"
  license:
    name: "AGPL-3.0 license"
    url: "https://github.com/dubinc/dub/blob/main/LICENSE.md"
servers:
  - url: "https://api.dub.co"
    description: "Production API"
paths:
  "/links":
    post:
      operationId: "createLink"
      x-speakeasy-name-override: "create"
      x-speakeasy-usage-example: true
      summary: "Create a new link"
      x-codeSamples: [{"lang": "typescript", "label": "createLink", "source": "import { Dub } from \"dub\";\n\nconst dub = new Dub({\n  token: \"DUB_API_KEY\",\n});\n\nasync function run() {\n  const result = await dub.links.create();\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"}, {"lang": "go", "label": "createLink", "source": "package main\n\nimport(\n\t\"context\"\n\tdubgo \"github.com/dubinc/dub-go\"\n\t\"github.com/dubinc/dub-go/models/operations\"\n\t\"log\"\n)\n\nfunc main() {\n    ctx := context.Background()\n    \n    s := dubgo.New(\n        dubgo.WithSecurity(\"DUB_API_KEY\"),\n    )\n\n    res, err := s.Links.Create(ctx, &operations.CreateLinkRequestBody{\n        URL: \"https://google.com\",\n        ExternalID: dubgo.String(\"123456\"),\n        TagIds: dubgo.Pointer(operations.CreateTagIdsArrayOfStr(\n            []string{\n                \"clux0rgak00011...\",\n            },\n        )),\n    })\n    if err != nil {\n        log.Fatal(err)\n    }\n    if res != nil {\n        // handle response\n    }\n}"}, {"lang": "ruby", "label": "createLink", "source": "require 'dub'\n\n\ns = ::OpenApiSDK::Dub.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    token: \"DUB_API_KEY\",\n  )\n)\n\n\nreq = ::OpenApiSDK::Operations::CreateLinkRequestBody.new(\n  url: \"https://google.com\",\n  external_id: \"123456\",\n  tag_ids: [\n    \"clux0rgak00011...\",\n  ],\n)\n    \nres = s.links.create(req)\n\nif ! res.link_schema.nil?\n  # handle response\nend"}, {"lang": "php", "label": "createLink", "source": "declare(strict_types=1);\n\nrequire 'vendor/autoload.php';\n\nuse Dub;\nuse Dub\\Models\\Operations;\n\n$sdk = Dub\\Dub::builder()\n    ->setSecurity(\n        'DUB_API_KEY'\n    )\n    ->build();\n\n$request = new Operations\\CreateLinkRequestBody(\n    url: 'https://google.com',\n    externalId: '123456',\n    tagIds: [\n        'clux0rgak00011...',\n    ],\n);\n\n$response = $sdk->links->create(\n    request: $request\n);\n\nif ($response->linkSchema !== null) {\n    // handle response\n}"}, {lang: python, label: createLink, source: "from dub import Dub\n\nwith Dub(\n    token=\"DUB_API_KEY\",\n) as dub:\n\n    res = dub.links.create(request={\n        \"url\": \"https://google.com\",\n        \"external_id\": \"123456\",\n        \"tag_ids\": [\n            \"clux0rgak00011...\",\n        ],\n    })\n\n    assert res is not None\n\n    # Handle response\n    print(res)"}, {"lang": "java", "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"url\\\":\\\"https://google.com\\\",\\\"domain\\\":\\\"string\\\",\\\"key\\\":\\\"string\\\",\\\"externalId\\\":\\\"123456\\\",\\\"tenantId\\\":\\\"string\\\",\\\"prefix\\\":\\\"string\\\",\\\"trackConversion\\\":true,\\\"archived\\\":true,\\\"tagIds\\\":\\\"string\\\",\\\"tagNames\\\":\\\"string\\\",\\\"comments\\\":\\\"string\\\",\\\"expiresAt\\\":\\\"string\\\",\\\"expiredUrl\\\":\\\"string\\\",\\\"password\\\":\\\"string\\\",\\\"proxy\\\":true,\\\"title\\\":\\\"string\\\",\\\"description\\\":\\\"string\\\",\\\"image\\\":\\\"string\\\",\\\"video\\\":\\\"string\\\",\\\"rewrite\\\":true,\\\"ios\\\":\\\"string\\\",\\\"android\\\":\\\"string\\\",\\\"geo\\\":{\\\"AF\\\":\\\"string\\\",\\\"AL\\\":\\\"string\\\",\\\"DZ\\\":\\\"string\\\",\\\"AS\\\":\\\"string\\\",\\\"AD\\\":\\\"string\\\",\\\"AO\\\":\\\"string\\\",\\\"AI\\\":\\\"string\\\",\\\"AQ\\\":\\\"string\\\",\\\"AG\\\":\\\"string\\\",\\\"AR\\\":\\\"string\\\",\\\"AM\\\":\\\"string\\\",\\\"AW\\\":\\\"string\\\",\\\"AU\\\":\\\"string\\\",\\\"AT\\\":\\\"string\\\",\\\"AZ\\\":\\\"string\\\",\\\"BS\\\":\\\"string\\\",\\\"BH\\\":\\\"string\\\",\\\"BD\\\":\\\"string\\\",\\\"BB\\\":\\\"string\\\",\\\"BY\\\":\\\"string\\\",\\\"BE\\\":\\\"string\\\",\\\"BZ\\\":\\\"string\\\",\\\"BJ\\\":\\\"string\\\",\\\"BM\\\":\\\"string\\\",\\\"BT\\\":\\\"string\\\",\\\"BO\\\":\\\"string\\\",\\\"BA\\\":\\\"string\\\",\\\"BW\\\":\\\"string\\\",\\\"BV\\\":\\\"string\\\",\\\"BR\\\":\\\"string\\\",\\\"IO\\\":\\\"string\\\",\\\"BN\\\":\\\"string\\\",\\\"BG\\\":\\\"string\\\",\\\"BF\\\":\\\"string\\\",\\\"BI\\\":\\\"string\\\",\\\"KH\\\":\\\"string\\\",\\\"CM\\\":\\\"string\\\",\\\"CA\\\":\\\"string\\\",\\\"CV\\\":\\\"string\\\",\\\"KY\\\":\\\"string\\\",\\\"CF\\\":\\\"string\\\",\\\"TD\\\":\\\"string\\\",\\\"CL\\\":\\\"string\\\",\\\"CN\\\":\\\"string\\\",\\\"CX\\\":\\\"string\\\",\\\"CC\\\":\\\"string\\\",\\\"CO\\\":\\\"string\\\",\\\"KM\\\":\\\"string\\\",\\\"CG\\\":\\\"string\\\",\\\"CD\\\":\\\"string\\\",\\\"CK\\\":\\\"string\\\",\\\"CR\\\":\\\"string\\\",\\\"CI\\\":\\\"string\\\",\\\"HR\\\":\\\"string\\\",\\\"CU\\\":\\\"string\\\",\\\"CY\\\":\\\"string\\\",\\\"CZ\\\":\\\"string\\\",\\\"DK\\\":\\\"string\\\",\\\"DJ\\\":\\\"string\\\",\\\"DM\\\":\\\"string\\\",\\\"DO\\\":\\\"string\\\",\\\"EC\\\":\\\"string\\\",\\\"EG\\\":\\\"string\\\",\\\"SV\\\":\\\"string\\\",\\\"GQ\\\":\\\"string\\\",\\\"ER\\\":\\\"string\\\",\\\"EE\\\":\\\"string\\\",\\\"ET\\\":\\\"string\\\",\\\"FK\\\":\\\"string\\\",\\\"FO\\\":\\\"string\\\",\\\"FJ\\\":\\\"string\\\",\\\"FI\\\":\\\"string\\\",\\\"FR\\\":\\\"string\\\",\\\"GF\\\":\\\"string\\\",\\\"PF\\\":\\\"string\\\",\\\"TF\\\":\\\"string\\\",\\\"GA\\\":\\\"string\\\",\\\"GM\\\":\\\"string\\\",\\\"GE\\\":\\\"string\\\",\\\"DE\\\":\\\"string\\\",\\\"GH\\\":\\\"string\\\",\\\"GI\\\":\\\"string\\\",\\\"GR\\\":\\\"string\\\",\\\"GL\\\":\\\"string\\\",\\\"GD\\\":\\\"string\\\",\\\"GP\\\":\\\"string\\\",\\\"GU\\\":\\\"string\\\",\\\"GT\\\":\\\"string\\\",\\\"GN\\\":\\\"string\\\",\\\"GW\\\":\\\"string\\\",\\\"GY\\\":\\\"string\\\",\\\"HT\\\":\\\"string\\\",\\\"HM\\\":\\\"string\\\",\\\"VA\\\":\\\"string\\\",\\\"HN\\\":\\\"string\\\",\\\"HK\\\":\\\"string\\\",\\\"HU\\\":\\\"string\\\",\\\"IS\\\":\\\"string\\\",\\\"IN\\\":\\\"string\\\",\\\"ID\\\":\\\"string\\\",\\\"IR\\\":\\\"string\\\",\\\"IQ\\\":\\\"string\\\",\\\"IE\\\":\\\"string\\\",\\\"IL\\\":\\\"string\\\",\\\"IT\\\":\\\"string\\\",\\\"JM\\\":\\\"string\\\",\\\"JP\\\":\\\"string\\\",\\\"JO\\\":\\\"string\\\",\\\"KZ\\\":\\\"string\\\",\\\"KE\\\":\\\"string\\\",\\\"KI\\\":\\\"string\\\",\\\"KP\\\":\\\"string\\\",\\\"KR\\\":\\\"string\\\",\\\"KW\\\":\\\"string\\\",\\\"KG\\\":\\\"string\\\",\\\"LA\\\":\\\"string\\\",\\\"LV\\\":\\\"string\\\",\\\"LB\\\":\\\"string\\\",\\\"LS\\\":\\\"string\\\",\\\"LR\\\":\\\"string\\\",\\\"LY\\\":\\\"string\\\",\\\"LI\\\":\\\"string\\\",\\\"LT\\\":\\\"string\\\",\\\"LU\\\":\\\"string\\\",\\\"MO\\\":\\\"string\\\",\\\"MG\\\":\\\"string\\\",\\\"MW\\\":\\\"string\\\",\\\"MY\\\":\\\"string\\\",\\\"MV\\\":\\\"string\\\",\\\"ML\\\":\\\"string\\\",\\\"MT\\\":\\\"string\\\",\\\"MH\\\":\\\"string\\\",\\\"MQ\\\":\\\"string\\\",\\\"MR\\\":\\\"string\\\",\\\"MU\\\":\\\"string\\\",\\\"YT\\\":\\\"string\\\",\\\"MX\\\":\\\"string\\\",\\\"FM\\\":\\\"string\\\",\\\"MD\\\":\\\"string\\\",\\\"MC\\\":\\\"string\\\",\\\"MN\\\":\\\"string\\\",\\\"MS\\\":\\\"string\\\",\\\"MA\\\":\\\"string\\\",\\\"MZ\\\":\\\"string\\\",\\\"MM\\\":\\\"string\\\",\\\"NA\\\":\\\"string\\\",\\\"NR\\\":\\\"string\\\",\\\"NP\\\":\\\"string\\\",\\\"NL\\\":\\\"string\\\",\\\"NC\\\":\\\"string\\\",\\\"NZ\\\":\\\"string\\\",\\\"NI\\\":\\\"string\\\",\\\"NE\\\":\\\"string\\\",\\\"NG\\\":\\\"string\\\",\\\"NU\\\":\\\"string\\\",\\\"NF\\\":\\\"string\\\",\\\"MK\\\":\\\"string\\\",\\\"MP\\\":\\\"string\\\",\\\"NO\\\":\\\"string\\\",\\\"OM\\\":\\\"string\\\",\\\"PK\\\":\\\"string\\\",\\\"PW\\\":\\\"string\\\",\\\"PS\\\":\\\"string\\\",\\\"PA\\\":\\\"string\\\",\\\"PG\\\":\\\"string\\\",\\\"PY\\\":\\\"string\\\",\\\"PE\\\":\\\"string\\\",\\\"PH\\\":\\\"string\\\",\\\"PN\\\":\\\"string\\\",\\\"PL\\\":\\\"string\\\",\\\"PT\\\":\\\"string\\\",\\\"PR\\\":\\\"string\\\",\\\"QA\\\":\\\"string\\\",\\\"RE\\\":\\\"string\\\",\\\"RO\\\":\\\"string\\\",\\\"RU\\\":\\\"string\\\",\\\"RW\\\":\\\"string\\\",\\\"SH\\\":\\\"string\\\",\\\"KN\\\":\\\"string\\\",\\\"LC\\\":\\\"string\\\",\\\"PM\\\":\\\"string\\\",\\\"VC\\\":\\\"string\\\",\\\"WS\\\":\\\"string\\\",\\\"SM\\\":\\\"string\\\",\\\"ST\\\":\\\"string\\\",\\\"SA\\\":\\\"string\\\",\\\"SN\\\":\\\"string\\\",\\\"SC\\\":\\\"string\\\",\\\"SL\\\":\\\"string\\\",\\\"SG\\\":\\\"string\\\",\\\"SK\\\":\\\"string\\\",\\\"SI\\\":\\\"string\\\",\\\"SB\\\":\\\"string\\\",\\\"SO\\\":\\\"string\\\",\\\"ZA\\\":\\\"string\\\",\\\"GS\\\":\\\"string\\\",\\\"ES\\\":\\\"string\\\",\\\"LK\\\":\\\"string\\\",\\\"SD\\\":\\\"string\\\",\\\"SR\\\":\\\"string\\\",\\\"SJ\\\":\\\"string\\\",\\\"SZ\\\":\\\"string\\\",\\\"SE\\\":\\\"string\\\",\\\"CH\\\":\\\"string\\\",\\\"SY\\\":\\\"string\\\",\\\"TW\\\":\\\"string\\\",\\\"TJ\\\":\\\"string\\\",\\\"TZ\\\":\\\"string\\\",\\\"TH\\\":\\\"string\\\",\\\"TL\\\":\\\"string\\\",\\\"TG\\\":\\\"string\\\",\\\"TK\\\":\\\"string\\\",\\\"TO\\\":\\\"string\\\",\\\"TT\\\":\\\"string\\\",\\\"TN\\\":\\\"string\\\",\\\"TR\\\":\\\"string\\\",\\\"TM\\\":\\\"string\\\",\\\"TC\\\":\\\"string\\\",\\\"TV\\\":\\\"string\\\",\\\"UG\\\":\\\"string\\\",\\\"UA\\\":\\\"string\\\",\\\"AE\\\":\\\"string\\\",\\\"GB\\\":\\\"string\\\",\\\"US\\\":\\\"string\\\",\\\"UM\\\":\\\"string\\\",\\\"UY\\\":\\\"string\\\",\\\"UZ\\\":\\\"string\\\",\\\"VU\\\":\\\"string\\\",\\\"VE\\\":\\\"string\\\",\\\"VN\\\":\\\"string\\\",\\\"VG\\\":\\\"string\\\",\\\"VI\\\":\\\"string\\\",\\\"WF\\\":\\\"string\\\",\\\"EH\\\":\\\"string\\\",\\\"YE\\\":\\\"string\\\",\\\"ZM\\\":\\\"string\\\",\\\"ZW\\\":\\\"string\\\",\\\"AX\\\":\\\"string\\\",\\\"BQ\\\":\\\"string\\\",\\\"CW\\\":\\\"string\\\",\\\"GG\\\":\\\"string\\\",\\\"IM\\\":\\\"string\\\",\\\"JE\\\":\\\"string\\\",\\\"ME\\\":\\\"string\\\",\\\"BL\\\":\\\"string\\\",\\\"MF\\\":\\\"string\\\",\\\"RS\\\":\\\"string\\\",\\\"SX\\\":\\\"string\\\",\\\"SS\\\":\\\"string\\\",\\\"XK\\\":\\\"string\\\"},\\\"doIndex\\\":true,\\\"utm_source\\\":\\\"string\\\",\\\"utm_medium\\\":\\\"string\\\",\\\"utm_campaign\\\":\\\"string\\\",\\\"utm_term\\\":\\\"string\\\",\\\"utm_content\\\":\\\"string\\\",\\\"ref\\\":\\\"string\\\",\\\"programId\\\":\\\"string\\\",\\\"webhookIds\\\":[\\\"string\\\"]}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.dub.co/links\")\n  .post(body)\n  .addHeader(\"accept\", \"application/json\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"authorization\", \"Bearer MY_TOKEN\")\n  .build();\n\nResponse response = client.newCall(request).execute();"}]
      description: "Create a new link for the authenticated workspace."
      tags:
        - "Links"
      security:
        - token: []
      requestBody:
        content:
          "application/json":
            schema:
              type: "object"
              properties:
                "url":
                  type: "string"
                  description: "The destination URL of the short link."
                  example: "https://google.com"
                "domain":
                  type: "string"
                  maxLength: 190
                  description: "The domain of the short link. If not provided, the primary domain for the workspace will be used (or `dub.sh` if the workspace has no domains)."
                "key":
                  type: "string"
                  maxLength: 190
                  description: "The short link slug. If not provided, a random 7-character slug will be generated."
                "externalId":
                  type: "string"
                  nullable: true
                  minLength: 1
                  maxLength: 255
                  description: "The ID of the link in your database. If set, it can be used to identify the link in future API requests (must be prefixed with 'ext_' when passed as a query parameter). This key is unique across your workspace."
                  example: "123456"
                "tenantId":
                  type: "string"
                  nullable: true
                  maxLength: 255
                  description: "The ID of the tenant that created the link inside your system. If set, it can be used to fetch all links for a tenant."
                "prefix":
                  type: "string"
                  description: "The prefix of the short link slug for randomly-generated keys (e.g. if prefix is `/c/`, generated keys will be in the `/c/:key` format). Will be ignored if `key` is provided."
                "trackConversion":
                  type: "boolean"
                  description: "Whether to track conversions for the short link. Defaults to `false` if not provided."
                "archived":
                  type: "boolean"
                  description: "Whether the short link is archived. Defaults to `false` if not provided."
                "publicStats":
                  type: "boolean"
                  description: "Deprecated: Use `dashboard` instead. Whether the short link's stats are publicly accessible. Defaults to `false` if not provided."
                  deprecated: true
                "tagId":
                  type: "string"
                  nullable: true
                  description: "The unique ID of the tag assigned to the short link. This field is deprecated – use `tagIds` instead."
                  deprecated: true
                "tagIds":
                  anyOf:
                    - type: "string"
                    - type: "array"
                      items:
                        type: "string"
                  description: "The unique IDs of the tags assigned to the short link."
                  example: ["clux0rgak00011..."]
                "tagNames":
                  anyOf:
                    - type: "string"
                    - type: "array"
                      items:
                        type: "string"
                  description: "The unique name of the tags assigned to the short link (case insensitive)."
                "comments":
                  type: "string"
                  nullable: true
                  description: "The comments for the short link."
                "expiresAt":
                  type: "string"
                  nullable: true
                  description: "The date and time when the short link will expire at."
                "expiredUrl":
                  type: "string"
                  nullable: true
                  description: "The URL to redirect to when the short link has expired."
                "password":
                  type: "string"
                  nullable: true
                  description: "The password required to access the destination URL of the short link."
                "proxy":
                  type: "boolean"
                  description: "Whether the short link uses Custom Social Media Cards feature. Defaults to `false` if not provided."
                "title":
                  type: "string"
                  nullable: true
                  description: "The custom link preview title (og:title). Will be used for Custom Social Media Cards if `proxy` is true. Learn more: https://d.to/og"
                "description":
                  type: "string"
                  nullable: true
                  description: "The custom link preview description (og:description). Will be used for Custom Social Media Cards if `proxy` is true. Learn more: https://d.to/og"
                "image":
                  type: "string"
                  nullable: true
                  description: "The custom link preview image (og:image). Will be used for Custom Social Media Cards if `proxy` is true. Learn more: https://d.to/og"
                "video":
                  type: "string"
                  nullable: true
                  description: "The custom link preview video (og:video). Will be used for Custom Social Media Cards if `proxy` is true. Learn more: https://d.to/og"
                "rewrite":
                  type: "boolean"
                  description: "Whether the short link uses link cloaking. Defaults to `false` if not provided."
                "ios":
                  type: "string"
                  nullable: true
                  description: "The iOS destination URL for the short link for iOS device targeting."
                "android":
                  type: "string"
                  nullable: true
                  description: "The Android destination URL for the short link for Android device targeting."
                "geo": {"$ref": "#/components/schemas/linkGeoTargeting"}
                "doIndex":
                  type: "boolean"
                  description: "Allow search engines to index your short link. Defaults to `false` if not provided. Learn more: https://d.to/noindex"
                "utm_source":
                  type: "string"
                  nullable: true
                  description: "The UTM source of the short link. If set, this will populate or override the UTM source in the destination URL."
                "utm_medium":
                  type: "string"
                  nullable: true
                  description: "The UTM medium of the short link. If set, this will populate or override the UTM medium in the destination URL."
                "utm_campaign":
                  type: "string"
                  nullable: true
                  description: "The UTM campaign of the short link. If set, this will populate or override the UTM campaign in the destination URL."
                "utm_term":
                  type: "string"
                  nullable: true
                  description: "The UTM term of the short link. If set, this will populate or override the UTM term in the destination URL."
                "utm_content":
                  type: "string"
                  nullable: true
                  description: "The UTM content of the short link. If set, this will populate or override the UTM content in the destination URL."
                "ref":
                  type: "string"
                  nullable: true
                  description: "The referral tag of the short link. If set, this will populate or override the `ref` query parameter in the destination URL."
                "programId":
                  type: "string"
                  nullable: true
                  description: "The ID of the program the short link is associated with."
                "webhookIds":
                  type: "array"
                  nullable: true
                  items:
                    type: "string"
                  description: "An array of webhook IDs to trigger when the link is clicked. These webhooks will receive click event data."
              required:
                - "url"
      responses:
        "200":
          description: "The created link"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/LinkSchema"}
        "400": {"$ref": "#/components/responses/400"}
        "401": {"$ref": "#/components/responses/401"}
        "403": {"$ref": "#/components/responses/403"}
        "404": {"$ref": "#/components/responses/404"}
        "409": {"$ref": "#/components/responses/409"}
        "410": {"$ref": "#/components/responses/410"}
        "422": {"$ref": "#/components/responses/422"}
        "429": {"$ref": "#/components/responses/429"}
        "500": {"$ref": "#/components/responses/500"}
    get:
      operationId: "getLinks"
      x-speakeasy-name-override: "list"
      x-speakeasy-pagination: {"type": "offsetLimit", "inputs": [{"name": "page", "in": "parameters", "type": "page"}, {"name": "pageSize", "in": "parameters", "type": "limit"}], "outputs": {"results": "$"}}
      x-codeSamples: [{"lang": "typescript", "label": "getLinks", "source": "import { Dub } from \"dub\";\n\nconst dub = new Dub({\n  token: \"DUB_API_KEY\",\n});\n\nasync function run() {\n  const result = await dub.links.list();\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"}, {"lang": "go", "label": "getLinks", "source": "package main\n\nimport(\n\t\"context\"\n\tdubgo \"github.com/dubinc/dub-go\"\n\t\"github.com/dubinc/dub-go/models/operations\"\n\t\"log\"\n)\n\nfunc main() {\n    ctx := context.Background()\n    \n    s := dubgo.New(\n        dubgo.WithSecurity(\"DUB_API_KEY\"),\n    )\n\n    res, err := s.Links.List(ctx, operations.GetLinksRequest{\n        ShowArchived: dubgo.Bool(true),\n        WithTags: dubgo.Bool(true),\n        SortBy: operations.SortByCreatedAt.ToPointer(),\n        SortOrder: operations.SortOrderDesc.ToPointer(),\n        Page: dubgo.Float64(1),\n        PageSize: dubgo.Float64(50),\n    })\n    if err != nil {\n        log.Fatal(err)\n    }\n    if res != nil {\n        for {\n            // handle items\n\n            res, err = res.Next()\n\n            if err != nil {\n                // handle error\n            }\n\n            if res == nil {\n                break\n            }\n        }\n    }\n}"}, {"lang": "ruby", "label": "getLinks", "source": "require 'dub'\n\n\ns = ::OpenApiSDK::Dub.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    token: \"DUB_API_KEY\",\n  )\n)\n\n\nreq = ::OpenApiSDK::Operations::GetLinksRequest.new(\n  page: 1.0,\n  page_size: 50.0,\n)\n    \nres = s.links.list(req)\n\nif ! res.link_schemas.nil?\n  # handle response\nend"}, {"lang": "php", "label": "getLinks", "source": "declare(strict_types=1);\n\nrequire 'vendor/autoload.php';\n\nuse Dub;\nuse Dub\\Models\\Operations;\n\n$sdk = Dub\\Dub::builder()\n    ->setSecurity(\n        'DUB_API_KEY'\n    )\n    ->build();\n\n$request = new Operations\\GetLinksRequest(\n    page: 1,\n    pageSize: 50,\n);\n\n$responses = $sdk->links->list(\n    request: $request\n);\n\n\nforeach ($responses as $response) {\n    if ($response->statusCode === 200) {\n        // handle response\n    }\n}"}, {lang: python, label: getLinks, source: "from dub import Dub\nfrom dub.models import operations\n\nwith Dub(\n    token=\"DUB_API_KEY\",\n) as dub:\n\n    res = dub.links.list(request={\n        \"show_archived\": True,\n        \"with_tags\": True,\n        \"sort_by\": operations.SortBy.CREATED_AT,\n        \"sort_order\": operations.SortOrder.DESC,\n        \"page\": 1,\n        \"page_size\": 50,\n    })\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"}, {"lang": "java", "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.dub.co/links\")\n  .get()\n  .addHeader(\"accept\", \"application/json\")\n  .addHeader(\"authorization\", \"Bearer MY_TOKEN\")\n  .build();\n\nResponse response = client.newCall(request).execute();"}]
      summary: "Retrieve a list of links"
      description: "Retrieve a paginated list of links for the authenticated workspace."
      tags:
        - "Links"
      security:
        - token: []
      parameters:
        - in: "query"
          name: "domain"
          description: "The domain to filter the links by. E.g. `ac.me`. If not provided, all links for the workspace will be returned."
          schema:
            type: "string"
            description: "The domain to filter the links by. E.g. `ac.me`. If not provided, all links for the workspace will be returned."
        - in: "query"
          name: "tagId"
          description: "Deprecated. Use `tagIds` instead. The tag ID to filter the links by."
          schema:
            type: "string"
            description: "Deprecated. Use `tagIds` instead. The tag ID to filter the links by."
            deprecated: true
        - in: "query"
          name: "tagIds"
          description: "The tag IDs to filter the links by."
          schema:
            anyOf:
              - type: "string"
              - type: "array"
                items:
                  type: "string"
            description: "The tag IDs to filter the links by."
        - in: "query"
          name: "tagNames"
          description: "The unique name of the tags assigned to the short link (case insensitive)."
          schema:
            anyOf:
              - type: "string"
              - type: "array"
                items:
                  type: "string"
            description: "The unique name of the tags assigned to the short link (case insensitive)."
        - in: "query"
          name: "search"
          description: "The search term to filter the links by. The search term will be matched against the short link slug and the destination url."
          schema:
            type: "string"
            description: "The search term to filter the links by. The search term will be matched against the short link slug and the destination url."
        - in: "query"
          name: "userId"
          description: "The user ID to filter the links by."
          schema:
            type: "string"
            description: "The user ID to filter the links by."
        - in: "query"
          name: "tenantId"
          description: "The ID of the tenant that created the link inside your system. If set, will only return links for the specified tenant."
          schema:
            type: "string"
            description: "The ID of the tenant that created the link inside your system. If set, will only return links for the specified tenant."
        - in: "query"
          name: "showArchived"
          description: "Whether to include archived links in the response. Defaults to `false` if not provided."
          schema:
            type: "boolean"
            default: "false"
            description: "Whether to include archived links in the response. Defaults to `false` if not provided."
        - in: "query"
          name: "withTags"
          description: "DEPRECATED. Filter for links that have at least one tag assigned to them."
          schema:
            type: "boolean"
            default: "false"
            description: "DEPRECATED. Filter for links that have at least one tag assigned to them."
            deprecated: true
        - in: "query"
          name: "sortBy"
          description: "The field to sort the links by. The default is `createdAt`."
          schema:
            type: "string"
            enum:
              - "createdAt"
              - "clicks"
              - "saleAmount"
              - "lastClicked"
            default: "createdAt"
            description: "The field to sort the links by. The default is `createdAt`."
        - in: "query"
          name: "sortOrder"
          description: "The sort order. The default is `desc`."
          schema:
            type: "string"
            enum:
              - "asc"
              - "desc"
            default: "desc"
            description: "The sort order. The default is `desc`."
        - in: "query"
          name: "sort"
          description: "DEPRECATED. Use `sortBy` instead."
          schema:
            type: "string"
            enum:
              - "createdAt"
              - "clicks"
              - "saleAmount"
              - "lastClicked"
            default: "createdAt"
            description: "DEPRECATED. Use `sortBy` instead."
            deprecated: true
        - in: "query"
          name: "page"
          description: "The page number for pagination."
          schema:
            type: "number"
            minimum: 0
            exclusiveMinimum: true
            default: 1
            description: "The page number for pagination."
            example: 1
        - in: "query"
          name: "pageSize"
          description: "The number of items per page."
          schema:
            type: "number"
            minimum: 0
            exclusiveMinimum: true
            maximum: 100
            default: 100
            description: "The number of items per page."
            example: 50
      responses:
        "200":
          description: "A list of links"
          content:
            "application/json":
              schema:
                type: "array"
                items: {"$ref": "#/components/schemas/LinkSchema"}
        "400": {"$ref": "#/components/responses/400"}
        "401": {"$ref": "#/components/responses/401"}
        "403": {"$ref": "#/components/responses/403"}
        "404": {"$ref": "#/components/responses/404"}
        "409": {"$ref": "#/components/responses/409"}
        "410": {"$ref": "#/components/responses/410"}
        "422": {"$ref": "#/components/responses/422"}
        "429": {"$ref": "#/components/responses/429"}
        "500": {"$ref": "#/components/responses/500"}
  "/links/count":
    get:
      operationId: "getLinksCount"
      x-speakeasy-name-override: "count"
      summary: "Retrieve links count"
      x-codeSamples: [{"lang": "typescript", "label": "getLinksCount", "source": "import { Dub } from \"dub\";\n\nconst dub = new Dub({\n  token: \"DUB_API_KEY\",\n});\n\nasync function run() {\n  const result = await dub.links.count();\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"}, {"lang": "go", "label": "getLinksCount", "source": "package main\n\nimport(\n\t\"context\"\n\tdubgo \"github.com/dubinc/dub-go\"\n\t\"github.com/dubinc/dub-go/models/operations\"\n\t\"log\"\n)\n\nfunc main() {\n    ctx := context.Background()\n    \n    s := dubgo.New(\n        dubgo.WithSecurity(\"DUB_API_KEY\"),\n    )\n\n    res, err := s.Links.Count(ctx, operations.GetLinksCountRequest{\n        ShowArchived: dubgo.Bool(true),\n        WithTags: dubgo.Bool(true),\n    })\n    if err != nil {\n        log.Fatal(err)\n    }\n    if res != nil {\n        // handle response\n    }\n}"}, {"lang": "ruby", "label": "getLinksCount", "source": "require 'dub'\n\n\ns = ::OpenApiSDK::Dub.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    token: \"DUB_API_KEY\",\n  )\n)\n\n\nreq = ::OpenApiSDK::Operations::GetLinksCountRequest.new()\n    \nres = s.links.count(req)\n\nif ! res.number.nil?\n  # handle response\nend"}, {"lang": "php", "label": "getLinksCount", "source": "declare(strict_types=1);\n\nrequire 'vendor/autoload.php';\n\nuse Dub;\nuse Dub\\Models\\Operations;\n\n$sdk = Dub\\Dub::builder()\n    ->setSecurity(\n        'DUB_API_KEY'\n    )\n    ->build();\n\n$request = new Operations\\GetLinksCountRequest();\n\n$response = $sdk->links->count(\n    request: $request\n);\n\nif ($response->number !== null) {\n    // handle response\n}"}, {lang: python, label: getLinksCount, source: "from dub import Dub\n\nwith Dub(\n    token=\"DUB_API_KEY\",\n) as dub:\n\n    res = dub.links.count(request={\n        \"show_archived\": True,\n        \"with_tags\": True,\n    })\n\n    assert res is not None\n\n    # Handle response\n    print(res)"}, {"lang": "java", "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.dub.co/links/count\")\n  .get()\n  .addHeader(\"accept\", \"application/json\")\n  .addHeader(\"authorization\", \"Bearer MY_TOKEN\")\n  .build();\n\nResponse response = client.newCall(request).execute();"}]
      description: "Retrieve the number of links for the authenticated workspace."
      tags:
        - "Links"
      security:
        - token: []
      parameters:
        - in: "query"
          name: "domain"
          description: "The domain to filter the links by. E.g. `ac.me`. If not provided, all links for the workspace will be returned."
          schema:
            type: "string"
            description: "The domain to filter the links by. E.g. `ac.me`. If not provided, all links for the workspace will be returned."
        - in: "query"
          name: "tagId"
          description: "Deprecated. Use `tagIds` instead. The tag ID to filter the links by."
          schema:
            type: "string"
            description: "Deprecated. Use `tagIds` instead. The tag ID to filter the links by."
            deprecated: true
        - in: "query"
          name: "tagIds"
          description: "The tag IDs to filter the links by."
          schema:
            anyOf:
              - type: "string"
              - type: "array"
                items:
                  type: "string"
            description: "The tag IDs to filter the links by."
        - in: "query"
          name: "tagNames"
          description: "The unique name of the tags assigned to the short link (case insensitive)."
          schema:
            anyOf:
              - type: "string"
              - type: "array"
                items:
                  type: "string"
            description: "The unique name of the tags assigned to the short link (case insensitive)."
        - in: "query"
          name: "search"
          description: "The search term to filter the links by. The search term will be matched against the short link slug and the destination url."
          schema:
            type: "string"
            description: "The search term to filter the links by. The search term will be matched against the short link slug and the destination url."
        - in: "query"
          name: "userId"
          description: "The user ID to filter the links by."
          schema:
            type: "string"
            description: "The user ID to filter the links by."
        - in: "query"
          name: "tenantId"
          description: "The ID of the tenant that created the link inside your system. If set, will only return links for the specified tenant."
          schema:
            type: "string"
            description: "The ID of the tenant that created the link inside your system. If set, will only return links for the specified tenant."
        - in: "query"
          name: "showArchived"
          description: "Whether to include archived links in the response. Defaults to `false` if not provided."
          schema:
            type: "boolean"
            default: "false"
            description: "Whether to include archived links in the response. Defaults to `false` if not provided."
        - in: "query"
          name: "withTags"
          description: "DEPRECATED. Filter for links that have at least one tag assigned to them."
          schema:
            type: "boolean"
            default: "false"
            description: "DEPRECATED. Filter for links that have at least one tag assigned to them."
            deprecated: true
        - in: "query"
          name: "groupBy"
          description: "The field to group the links by."
          schema:
            anyOf:
              - type: "string"
                enum:
                  - "domain"
              - type: "string"
                enum:
                  - "tagId"
              - type: "string"
                enum:
                  - "userId"
            description: "The field to group the links by."
      responses:
        "200":
          description: "A list of links"
          content:
            "application/json":
              schema:
                type: "number"
                description: "The number of links matching the query."
        "400": {"$ref": "#/components/responses/400"}
        "401": {"$ref": "#/components/responses/401"}
        "403": {"$ref": "#/components/responses/403"}
        "404": {"$ref": "#/components/responses/404"}
        "409": {"$ref": "#/components/responses/409"}
        "410": {"$ref": "#/components/responses/410"}
        "422": {"$ref": "#/components/responses/422"}
        "429": {"$ref": "#/components/responses/429"}
        "500": {"$ref": "#/components/responses/500"}
  "/links/info":
    get:
      operationId: "getLinkInfo"
      x-speakeasy-name-override: "get"
      summary: "Retrieve a link"
      x-codeSamples: [{"lang": "typescript", "label": "getLinkInfo", "source": "import { Dub } from \"dub\";\n\nconst dub = new Dub({\n  token: \"DUB_API_KEY\",\n});\n\nasync function run() {\n  const result = await dub.links.get();\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"}, {"lang": "go", "label": "getLinkInfo", "source": "package main\n\nimport(\n\t\"context\"\n\tdubgo \"github.com/dubinc/dub-go\"\n\t\"github.com/dubinc/dub-go/models/operations\"\n\t\"log\"\n)\n\nfunc main() {\n    ctx := context.Background()\n    \n    s := dubgo.New(\n        dubgo.WithSecurity(\"DUB_API_KEY\"),\n    )\n\n    res, err := s.Links.Get(ctx, operations.GetLinkInfoRequest{\n        LinkID: dubgo.String(\"clux0rgak00011...\"),\n        ExternalID: dubgo.String(\"123456\"),\n    })\n    if err != nil {\n        log.Fatal(err)\n    }\n    if res != nil {\n        // handle response\n    }\n}"}, {"lang": "ruby", "label": "getLinkInfo", "source": "require 'dub'\n\n\ns = ::OpenApiSDK::Dub.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    token: \"DUB_API_KEY\",\n  )\n)\n\n\nreq = ::OpenApiSDK::Operations::GetLinkInfoRequest.new(\n  link_id: \"clux0rgak00011...\",\n  external_id: \"123456\",\n)\n    \nres = s.links.get(req)\n\nif ! res.link_schema.nil?\n  # handle response\nend"}, {"lang": "php", "label": "getLinkInfo", "source": "declare(strict_types=1);\n\nrequire 'vendor/autoload.php';\n\nuse Dub;\n\n$sdk = Dub\\Dub::builder()\n    ->setSecurity(\n        'DUB_API_KEY'\n    )\n    ->build();\n\n\n\n$response = $sdk->links->get(\n    domain: 'rural-mathematics.name',\n    key: '<key>',\n    linkId: 'clux0rgak00011...',\n    externalId: '123456'\n\n);\n\nif ($response->linkSchema !== null) {\n    // handle response\n}"}, {lang: python, label: getLinkInfo, source: "from dub import Dub\n\nwith Dub(\n    token=\"DUB_API_KEY\",\n) as dub:\n\n    res = dub.links.get(request={\n        \"link_id\": \"clux0rgak00011...\",\n        \"external_id\": \"123456\",\n    })\n\n    assert res is not None\n\n    # Handle response\n    print(res)"}, {"lang": "java", "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.dub.co/links/info\")\n  .get()\n  .addHeader(\"accept\", \"application/json\")\n  .addHeader(\"authorization\", \"Bearer MY_TOKEN\")\n  .build();\n\nResponse response = client.newCall(request).execute();"}]
      description: "Retrieve the info for a link."
      tags:
        - "Links"
      security:
        - token: []
      parameters:
        - in: "query"
          name: "domain"
          schema:
            type: "string"
            minLength: 1
            description: "The domain of the link to retrieve. E.g. for `d.to/github`, the domain is `d.to`."
        - in: "query"
          name: "key"
          description: "The key of the link to retrieve. E.g. for `d.to/github`, the key is `github`."
          schema:
            type: "string"
            minLength: 1
            description: "The key of the link to retrieve. E.g. for `d.to/github`, the key is `github`."
        - in: "query"
          name: "linkId"
          description: "The unique ID of the short link."
          schema:
            type: "string"
            description: "The unique ID of the short link."
            example: "clux0rgak00011..."
        - in: "query"
          name: "externalId"
          description: "This is the ID of the link in the your database."
          schema:
            type: "string"
            description: "This is the ID of the link in the your database."
            example: "123456"
      responses:
        "200":
          description: "The retrieved link"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/LinkSchema"}
        "400": {"$ref": "#/components/responses/400"}
        "401": {"$ref": "#/components/responses/401"}
        "403": {"$ref": "#/components/responses/403"}
        "404": {"$ref": "#/components/responses/404"}
        "409": {"$ref": "#/components/responses/409"}
        "410": {"$ref": "#/components/responses/410"}
        "422": {"$ref": "#/components/responses/422"}
        "429": {"$ref": "#/components/responses/429"}
        "500": {"$ref": "#/components/responses/500"}
  "/links/{linkId}":
    patch:
      operationId: "updateLink"
      x-speakeasy-name-override: "update"
      x-speakeasy-max-method-params: 2
      summary: "Update a link"
      x-codeSamples: [{"lang": "typescript", "label": "updateLink", "source": "import { Dub } from \"dub\";\n\nconst dub = new Dub({\n  token: \"DUB_API_KEY\",\n});\n\nasync function run() {\n  const result = await dub.links.update(\"<id>\");\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"}, {"lang": "go", "label": "updateLink", "source": "package main\n\nimport(\n\t\"context\"\n\tdubgo \"github.com/dubinc/dub-go\"\n\t\"github.com/dubinc/dub-go/models/operations\"\n\t\"log\"\n)\n\nfunc main() {\n    ctx := context.Background()\n    \n    s := dubgo.New(\n        dubgo.WithSecurity(\"DUB_API_KEY\"),\n    )\n\n    res, err := s.Links.Update(ctx, \"<id>\", &operations.UpdateLinkRequestBody{\n        URL: dubgo.String(\"https://google.com\"),\n        ExternalID: dubgo.String(\"123456\"),\n        TagIds: dubgo.Pointer(operations.CreateUpdateLinkTagIdsArrayOfStr(\n            []string{\n                \"clux0rgak00011...\",\n            },\n        )),\n    })\n    if err != nil {\n        log.Fatal(err)\n    }\n    if res != nil {\n        // handle response\n    }\n}"}, {"lang": "ruby", "label": "updateLink", "source": "require 'dub'\n\n\ns = ::OpenApiSDK::Dub.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    token: \"DUB_API_KEY\",\n  )\n)\n\n    \nres = s.links.update(link_id=\"<id>\", request_body=::OpenApiSDK::Operations::UpdateLinkRequestBody.new(\n  url: \"https://google.com\",\n  external_id: \"123456\",\n  tag_ids: [\n    \"clux0rgak00011...\",\n  ],\n))\n\nif ! res.link_schema.nil?\n  # handle response\nend"}, {"lang": "php", "label": "updateLink", "source": "declare(strict_types=1);\n\nrequire 'vendor/autoload.php';\n\nuse Dub;\nuse Dub\\Models\\Operations;\n\n$sdk = Dub\\Dub::builder()\n    ->setSecurity(\n        'DUB_API_KEY'\n    )\n    ->build();\n\n$requestBody = new Operations\\UpdateLinkRequestBody(\n    url: 'https://google.com',\n    externalId: '123456',\n    tagIds: [\n        'clux0rgak00011...',\n    ],\n);\n\n$response = $sdk->links->update(\n    linkId: '<id>',\n    requestBody: $requestBody\n\n);\n\nif ($response->linkSchema !== null) {\n    // handle response\n}"}, {lang: python, label: updateLink, source: "from dub import Dub\n\nwith Dub(\n    token=\"DUB_API_KEY\",\n) as dub:\n\n    res = dub.links.update(link_id=\"<id>\", request_body={\n        \"url\": \"https://google.com\",\n        \"external_id\": \"123456\",\n        \"tag_ids\": [\n            \"clux0rgak00011...\",\n        ],\n    })\n\n    assert res is not None\n\n    # Handle response\n    print(res)"}, {"lang": "java", "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"url\\\":\\\"https://google.com\\\",\\\"domain\\\":\\\"string\\\",\\\"key\\\":\\\"string\\\",\\\"externalId\\\":\\\"123456\\\",\\\"tenantId\\\":\\\"string\\\",\\\"prefix\\\":\\\"string\\\",\\\"trackConversion\\\":true,\\\"archived\\\":true,\\\"tagIds\\\":\\\"string\\\",\\\"tagNames\\\":\\\"string\\\",\\\"comments\\\":\\\"string\\\",\\\"expiresAt\\\":\\\"string\\\",\\\"expiredUrl\\\":\\\"string\\\",\\\"password\\\":\\\"string\\\",\\\"proxy\\\":true,\\\"title\\\":\\\"string\\\",\\\"description\\\":\\\"string\\\",\\\"image\\\":\\\"string\\\",\\\"video\\\":\\\"string\\\",\\\"rewrite\\\":true,\\\"ios\\\":\\\"string\\\",\\\"android\\\":\\\"string\\\",\\\"geo\\\":{\\\"AF\\\":\\\"string\\\",\\\"AL\\\":\\\"string\\\",\\\"DZ\\\":\\\"string\\\",\\\"AS\\\":\\\"string\\\",\\\"AD\\\":\\\"string\\\",\\\"AO\\\":\\\"string\\\",\\\"AI\\\":\\\"string\\\",\\\"AQ\\\":\\\"string\\\",\\\"AG\\\":\\\"string\\\",\\\"AR\\\":\\\"string\\\",\\\"AM\\\":\\\"string\\\",\\\"AW\\\":\\\"string\\\",\\\"AU\\\":\\\"string\\\",\\\"AT\\\":\\\"string\\\",\\\"AZ\\\":\\\"string\\\",\\\"BS\\\":\\\"string\\\",\\\"BH\\\":\\\"string\\\",\\\"BD\\\":\\\"string\\\",\\\"BB\\\":\\\"string\\\",\\\"BY\\\":\\\"string\\\",\\\"BE\\\":\\\"string\\\",\\\"BZ\\\":\\\"string\\\",\\\"BJ\\\":\\\"string\\\",\\\"BM\\\":\\\"string\\\",\\\"BT\\\":\\\"string\\\",\\\"BO\\\":\\\"string\\\",\\\"BA\\\":\\\"string\\\",\\\"BW\\\":\\\"string\\\",\\\"BV\\\":\\\"string\\\",\\\"BR\\\":\\\"string\\\",\\\"IO\\\":\\\"string\\\",\\\"BN\\\":\\\"string\\\",\\\"BG\\\":\\\"string\\\",\\\"BF\\\":\\\"string\\\",\\\"BI\\\":\\\"string\\\",\\\"KH\\\":\\\"string\\\",\\\"CM\\\":\\\"string\\\",\\\"CA\\\":\\\"string\\\",\\\"CV\\\":\\\"string\\\",\\\"KY\\\":\\\"string\\\",\\\"CF\\\":\\\"string\\\",\\\"TD\\\":\\\"string\\\",\\\"CL\\\":\\\"string\\\",\\\"CN\\\":\\\"string\\\",\\\"CX\\\":\\\"string\\\",\\\"CC\\\":\\\"string\\\",\\\"CO\\\":\\\"string\\\",\\\"KM\\\":\\\"string\\\",\\\"CG\\\":\\\"string\\\",\\\"CD\\\":\\\"string\\\",\\\"CK\\\":\\\"string\\\",\\\"CR\\\":\\\"string\\\",\\\"CI\\\":\\\"string\\\",\\\"HR\\\":\\\"string\\\",\\\"CU\\\":\\\"string\\\",\\\"CY\\\":\\\"string\\\",\\\"CZ\\\":\\\"string\\\",\\\"DK\\\":\\\"string\\\",\\\"DJ\\\":\\\"string\\\",\\\"DM\\\":\\\"string\\\",\\\"DO\\\":\\\"string\\\",\\\"EC\\\":\\\"string\\\",\\\"EG\\\":\\\"string\\\",\\\"SV\\\":\\\"string\\\",\\\"GQ\\\":\\\"string\\\",\\\"ER\\\":\\\"string\\\",\\\"EE\\\":\\\"string\\\",\\\"ET\\\":\\\"string\\\",\\\"FK\\\":\\\"string\\\",\\\"FO\\\":\\\"string\\\",\\\"FJ\\\":\\\"string\\\",\\\"FI\\\":\\\"string\\\",\\\"FR\\\":\\\"string\\\",\\\"GF\\\":\\\"string\\\",\\\"PF\\\":\\\"string\\\",\\\"TF\\\":\\\"string\\\",\\\"GA\\\":\\\"string\\\",\\\"GM\\\":\\\"string\\\",\\\"GE\\\":\\\"string\\\",\\\"DE\\\":\\\"string\\\",\\\"GH\\\":\\\"string\\\",\\\"GI\\\":\\\"string\\\",\\\"GR\\\":\\\"string\\\",\\\"GL\\\":\\\"string\\\",\\\"GD\\\":\\\"string\\\",\\\"GP\\\":\\\"string\\\",\\\"GU\\\":\\\"string\\\",\\\"GT\\\":\\\"string\\\",\\\"GN\\\":\\\"string\\\",\\\"GW\\\":\\\"string\\\",\\\"GY\\\":\\\"string\\\",\\\"HT\\\":\\\"string\\\",\\\"HM\\\":\\\"string\\\",\\\"VA\\\":\\\"string\\\",\\\"HN\\\":\\\"string\\\",\\\"HK\\\":\\\"string\\\",\\\"HU\\\":\\\"string\\\",\\\"IS\\\":\\\"string\\\",\\\"IN\\\":\\\"string\\\",\\\"ID\\\":\\\"string\\\",\\\"IR\\\":\\\"string\\\",\\\"IQ\\\":\\\"string\\\",\\\"IE\\\":\\\"string\\\",\\\"IL\\\":\\\"string\\\",\\\"IT\\\":\\\"string\\\",\\\"JM\\\":\\\"string\\\",\\\"JP\\\":\\\"string\\\",\\\"JO\\\":\\\"string\\\",\\\"KZ\\\":\\\"string\\\",\\\"KE\\\":\\\"string\\\",\\\"KI\\\":\\\"string\\\",\\\"KP\\\":\\\"string\\\",\\\"KR\\\":\\\"string\\\",\\\"KW\\\":\\\"string\\\",\\\"KG\\\":\\\"string\\\",\\\"LA\\\":\\\"string\\\",\\\"LV\\\":\\\"string\\\",\\\"LB\\\":\\\"string\\\",\\\"LS\\\":\\\"string\\\",\\\"LR\\\":\\\"string\\\",\\\"LY\\\":\\\"string\\\",\\\"LI\\\":\\\"string\\\",\\\"LT\\\":\\\"string\\\",\\\"LU\\\":\\\"string\\\",\\\"MO\\\":\\\"string\\\",\\\"MG\\\":\\\"string\\\",\\\"MW\\\":\\\"string\\\",\\\"MY\\\":\\\"string\\\",\\\"MV\\\":\\\"string\\\",\\\"ML\\\":\\\"string\\\",\\\"MT\\\":\\\"string\\\",\\\"MH\\\":\\\"string\\\",\\\"MQ\\\":\\\"string\\\",\\\"MR\\\":\\\"string\\\",\\\"MU\\\":\\\"string\\\",\\\"YT\\\":\\\"string\\\",\\\"MX\\\":\\\"string\\\",\\\"FM\\\":\\\"string\\\",\\\"MD\\\":\\\"string\\\",\\\"MC\\\":\\\"string\\\",\\\"MN\\\":\\\"string\\\",\\\"MS\\\":\\\"string\\\",\\\"MA\\\":\\\"string\\\",\\\"MZ\\\":\\\"string\\\",\\\"MM\\\":\\\"string\\\",\\\"NA\\\":\\\"string\\\",\\\"NR\\\":\\\"string\\\",\\\"NP\\\":\\\"string\\\",\\\"NL\\\":\\\"string\\\",\\\"NC\\\":\\\"string\\\",\\\"NZ\\\":\\\"string\\\",\\\"NI\\\":\\\"string\\\",\\\"NE\\\":\\\"string\\\",\\\"NG\\\":\\\"string\\\",\\\"NU\\\":\\\"string\\\",\\\"NF\\\":\\\"string\\\",\\\"MK\\\":\\\"string\\\",\\\"MP\\\":\\\"string\\\",\\\"NO\\\":\\\"string\\\",\\\"OM\\\":\\\"string\\\",\\\"PK\\\":\\\"string\\\",\\\"PW\\\":\\\"string\\\",\\\"PS\\\":\\\"string\\\",\\\"PA\\\":\\\"string\\\",\\\"PG\\\":\\\"string\\\",\\\"PY\\\":\\\"string\\\",\\\"PE\\\":\\\"string\\\",\\\"PH\\\":\\\"string\\\",\\\"PN\\\":\\\"string\\\",\\\"PL\\\":\\\"string\\\",\\\"PT\\\":\\\"string\\\",\\\"PR\\\":\\\"string\\\",\\\"QA\\\":\\\"string\\\",\\\"RE\\\":\\\"string\\\",\\\"RO\\\":\\\"string\\\",\\\"RU\\\":\\\"string\\\",\\\"RW\\\":\\\"string\\\",\\\"SH\\\":\\\"string\\\",\\\"KN\\\":\\\"string\\\",\\\"LC\\\":\\\"string\\\",\\\"PM\\\":\\\"string\\\",\\\"VC\\\":\\\"string\\\",\\\"WS\\\":\\\"string\\\",\\\"SM\\\":\\\"string\\\",\\\"ST\\\":\\\"string\\\",\\\"SA\\\":\\\"string\\\",\\\"SN\\\":\\\"string\\\",\\\"SC\\\":\\\"string\\\",\\\"SL\\\":\\\"string\\\",\\\"SG\\\":\\\"string\\\",\\\"SK\\\":\\\"string\\\",\\\"SI\\\":\\\"string\\\",\\\"SB\\\":\\\"string\\\",\\\"SO\\\":\\\"string\\\",\\\"ZA\\\":\\\"string\\\",\\\"GS\\\":\\\"string\\\",\\\"ES\\\":\\\"string\\\",\\\"LK\\\":\\\"string\\\",\\\"SD\\\":\\\"string\\\",\\\"SR\\\":\\\"string\\\",\\\"SJ\\\":\\\"string\\\",\\\"SZ\\\":\\\"string\\\",\\\"SE\\\":\\\"string\\\",\\\"CH\\\":\\\"string\\\",\\\"SY\\\":\\\"string\\\",\\\"TW\\\":\\\"string\\\",\\\"TJ\\\":\\\"string\\\",\\\"TZ\\\":\\\"string\\\",\\\"TH\\\":\\\"string\\\",\\\"TL\\\":\\\"string\\\",\\\"TG\\\":\\\"string\\\",\\\"TK\\\":\\\"string\\\",\\\"TO\\\":\\\"string\\\",\\\"TT\\\":\\\"string\\\",\\\"TN\\\":\\\"string\\\",\\\"TR\\\":\\\"string\\\",\\\"TM\\\":\\\"string\\\",\\\"TC\\\":\\\"string\\\",\\\"TV\\\":\\\"string\\\",\\\"UG\\\":\\\"string\\\",\\\"UA\\\":\\\"string\\\",\\\"AE\\\":\\\"string\\\",\\\"GB\\\":\\\"string\\\",\\\"US\\\":\\\"string\\\",\\\"UM\\\":\\\"string\\\",\\\"UY\\\":\\\"string\\\",\\\"UZ\\\":\\\"string\\\",\\\"VU\\\":\\\"string\\\",\\\"VE\\\":\\\"string\\\",\\\"VN\\\":\\\"string\\\",\\\"VG\\\":\\\"string\\\",\\\"VI\\\":\\\"string\\\",\\\"WF\\\":\\\"string\\\",\\\"EH\\\":\\\"string\\\",\\\"YE\\\":\\\"string\\\",\\\"ZM\\\":\\\"string\\\",\\\"ZW\\\":\\\"string\\\",\\\"AX\\\":\\\"string\\\",\\\"BQ\\\":\\\"string\\\",\\\"CW\\\":\\\"string\\\",\\\"GG\\\":\\\"string\\\",\\\"IM\\\":\\\"string\\\",\\\"JE\\\":\\\"string\\\",\\\"ME\\\":\\\"string\\\",\\\"BL\\\":\\\"string\\\",\\\"MF\\\":\\\"string\\\",\\\"RS\\\":\\\"string\\\",\\\"SX\\\":\\\"string\\\",\\\"SS\\\":\\\"string\\\",\\\"XK\\\":\\\"string\\\"},\\\"doIndex\\\":true,\\\"utm_source\\\":\\\"string\\\",\\\"utm_medium\\\":\\\"string\\\",\\\"utm_campaign\\\":\\\"string\\\",\\\"utm_term\\\":\\\"string\\\",\\\"utm_content\\\":\\\"string\\\",\\\"ref\\\":\\\"string\\\",\\\"programId\\\":\\\"string\\\",\\\"webhookIds\\\":[\\\"string\\\"]}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.dub.co/links/linkId\")\n  .patch(body)\n  .addHeader(\"accept\", \"application/json\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"authorization\", \"Bearer MY_TOKEN\")\n  .build();\n\nResponse response = client.newCall(request).execute();"}]
      description: "Update a link for the authenticated workspace. If there's no change, returns it as it is."
      tags:
        - "Links"
      security:
        - token: []
      parameters:
        - in: "path"
          name: "linkId"
          description: "The id of the link to update. You may use either `linkId` (obtained via `/links/info` endpoint) or `externalId` prefixed with `ext_`."
          schema:
            type: "string"
            description: "The id of the link to update. You may use either `linkId` (obtained via `/links/info` endpoint) or `externalId` prefixed with `ext_`."
          required: true
      requestBody:
        content:
          "application/json":
            schema:
              type: "object"
              properties:
                "url":
                  type: "string"
                  description: "The destination URL of the short link."
                  example: "https://google.com"
                "domain":
                  type: "string"
                  maxLength: 190
                  description: "The domain of the short link. If not provided, the primary domain for the workspace will be used (or `dub.sh` if the workspace has no domains)."
                "key":
                  type: "string"
                  maxLength: 190
                  description: "The short link slug. If not provided, a random 7-character slug will be generated."
                "externalId":
                  type: "string"
                  nullable: true
                  minLength: 1
                  maxLength: 255
                  description: "The ID of the link in your database. If set, it can be used to identify the link in future API requests (must be prefixed with 'ext_' when passed as a query parameter). This key is unique across your workspace."
                  example: "123456"
                "tenantId":
                  type: "string"
                  nullable: true
                  maxLength: 255
                  description: "The ID of the tenant that created the link inside your system. If set, it can be used to fetch all links for a tenant."
                "prefix":
                  type: "string"
                  description: "The prefix of the short link slug for randomly-generated keys (e.g. if prefix is `/c/`, generated keys will be in the `/c/:key` format). Will be ignored if `key` is provided."
                "trackConversion":
                  type: "boolean"
                  description: "Whether to track conversions for the short link. Defaults to `false` if not provided."
                "archived":
                  type: "boolean"
                  description: "Whether the short link is archived. Defaults to `false` if not provided."
                "publicStats":
                  type: "boolean"
                  description: "Deprecated: Use `dashboard` instead. Whether the short link's stats are publicly accessible. Defaults to `false` if not provided."
                  deprecated: true
                "tagId":
                  type: "string"
                  nullable: true
                  description: "The unique ID of the tag assigned to the short link. This field is deprecated – use `tagIds` instead."
                  deprecated: true
                "tagIds":
                  anyOf:
                    - type: "string"
                    - type: "array"
                      items:
                        type: "string"
                  description: "The unique IDs of the tags assigned to the short link."
                  example: ["clux0rgak00011..."]
                "tagNames":
                  anyOf:
                    - type: "string"
                    - type: "array"
                      items:
                        type: "string"
                  description: "The unique name of the tags assigned to the short link (case insensitive)."
                "comments":
                  type: "string"
                  nullable: true
                  description: "The comments for the short link."
                "expiresAt":
                  type: "string"
                  nullable: true
                  description: "The date and time when the short link will expire at."
                "expiredUrl":
                  type: "string"
                  nullable: true
                  description: "The URL to redirect to when the short link has expired."
                "password":
                  type: "string"
                  nullable: true
                  description: "The password required to access the destination URL of the short link."
                "proxy":
                  type: "boolean"
                  description: "Whether the short link uses Custom Social Media Cards feature. Defaults to `false` if not provided."
                "title":
                  type: "string"
                  nullable: true
                  description: "The custom link preview title (og:title). Will be used for Custom Social Media Cards if `proxy` is true. Learn more: https://d.to/og"
                "description":
                  type: "string"
                  nullable: true
                  description: "The custom link preview description (og:description). Will be used for Custom Social Media Cards if `proxy` is true. Learn more: https://d.to/og"
                "image":
                  type: "string"
                  nullable: true
                  description: "The custom link preview image (og:image). Will be used for Custom Social Media Cards if `proxy` is true. Learn more: https://d.to/og"
                "video":
                  type: "string"
                  nullable: true
                  description: "The custom link preview video (og:video). Will be used for Custom Social Media Cards if `proxy` is true. Learn more: https://d.to/og"
                "rewrite":
                  type: "boolean"
                  description: "Whether the short link uses link cloaking. Defaults to `false` if not provided."
                "ios":
                  type: "string"
                  nullable: true
                  description: "The iOS destination URL for the short link for iOS device targeting."
                "android":
                  type: "string"
                  nullable: true
                  description: "The Android destination URL for the short link for Android device targeting."
                "geo": {"$ref": "#/components/schemas/linkGeoTargeting"}
                "doIndex":
                  type: "boolean"
                  description: "Allow search engines to index your short link. Defaults to `false` if not provided. Learn more: https://d.to/noindex"
                "utm_source":
                  type: "string"
                  nullable: true
                  description: "The UTM source of the short link. If set, this will populate or override the UTM source in the destination URL."
                "utm_medium":
                  type: "string"
                  nullable: true
                  description: "The UTM medium of the short link. If set, this will populate or override the UTM medium in the destination URL."
                "utm_campaign":
                  type: "string"
                  nullable: true
                  description: "The UTM campaign of the short link. If set, this will populate or override the UTM campaign in the destination URL."
                "utm_term":
                  type: "string"
                  nullable: true
                  description: "The UTM term of the short link. If set, this will populate or override the UTM term in the destination URL."
                "utm_content":
                  type: "string"
                  nullable: true
                  description: "The UTM content of the short link. If set, this will populate or override the UTM content in the destination URL."
                "ref":
                  type: "string"
                  nullable: true
                  description: "The referral tag of the short link. If set, this will populate or override the `ref` query parameter in the destination URL."
                "programId":
                  type: "string"
                  nullable: true
                  description: "The ID of the program the short link is associated with."
                "webhookIds":
                  type: "array"
                  nullable: true
                  items:
                    type: "string"
                  description: "An array of webhook IDs to trigger when the link is clicked. These webhooks will receive click event data."
      responses:
        "200":
          description: "The updated link"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/LinkSchema"}
        "400": {"$ref": "#/components/responses/400"}
        "401": {"$ref": "#/components/responses/401"}
        "403": {"$ref": "#/components/responses/403"}
        "404": {"$ref": "#/components/responses/404"}
        "409": {"$ref": "#/components/responses/409"}
        "410": {"$ref": "#/components/responses/410"}
        "422": {"$ref": "#/components/responses/422"}
        "429": {"$ref": "#/components/responses/429"}
        "500": {"$ref": "#/components/responses/500"}
    delete:
      operationId: "deleteLink"
      x-speakeasy-name-override: "delete"
      x-speakeasy-max-method-params: 1
      summary: "Delete a link"
      x-codeSamples: [{"lang": "typescript", "label": "deleteLink", "source": "import { Dub } from \"dub\";\n\nconst dub = new Dub({\n  token: \"DUB_API_KEY\",\n});\n\nasync function run() {\n  const result = await dub.links.delete(\"<id>\");\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"}, {"lang": "go", "label": "deleteLink", "source": "package main\n\nimport(\n\t\"context\"\n\tdubgo \"github.com/dubinc/dub-go\"\n\t\"log\"\n)\n\nfunc main() {\n    ctx := context.Background()\n    \n    s := dubgo.New(\n        dubgo.WithSecurity(\"DUB_API_KEY\"),\n    )\n\n    res, err := s.Links.Delete(ctx, \"<id>\")\n    if err != nil {\n        log.Fatal(err)\n    }\n    if res != nil {\n        // handle response\n    }\n}"}, {"lang": "ruby", "label": "deleteLink", "source": "require 'dub'\n\n\ns = ::OpenApiSDK::Dub.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    token: \"DUB_API_KEY\",\n  )\n)\n\n    \nres = s.links.delete(link_id=\"<id>\")\n\nif ! res.object.nil?\n  # handle response\nend"}, {"lang": "php", "label": "deleteLink", "source": "declare(strict_types=1);\n\nrequire 'vendor/autoload.php';\n\nuse Dub;\n\n$sdk = Dub\\Dub::builder()\n    ->setSecurity(\n        'DUB_API_KEY'\n    )\n    ->build();\n\n\n\n$response = $sdk->links->delete(\n    linkId: '<id>'\n);\n\nif ($response->object !== null) {\n    // handle response\n}"}, {lang: python, label: deleteLink, source: "from dub import Dub\n\nwith Dub(\n    token=\"DUB_API_KEY\",\n) as dub:\n\n    res = dub.links.delete(link_id=\"<id>\")\n\n    assert res is not None\n\n    # Handle response\n    print(res)"}, {"lang": "java", "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.dub.co/links/linkId\")\n  .delete(null)\n  .addHeader(\"accept\", \"application/json\")\n  .addHeader(\"authorization\", \"Bearer MY_TOKEN\")\n  .build();\n\nResponse response = client.newCall(request).execute();"}]
      description: "Delete a link for the authenticated workspace."
      tags:
        - "Links"
      security:
        - token: []
      parameters:
        - in: "path"
          name: "linkId"
          description: "The id of the link to delete. You may use either `linkId` (obtained via `/links/info` endpoint) or `externalId` prefixed with `ext_`."
          schema:
            type: "string"
            description: "The id of the link to delete. You may use either `linkId` (obtained via `/links/info` endpoint) or `externalId` prefixed with `ext_`."
          required: true
      responses:
        "200":
          description: "The deleted link ID."
          content:
            "application/json":
              schema:
                type: "object"
                properties:
                  "id":
                    type: "string"
                    description: "The ID of the link."
                required:
                  - "id"
        "400": {"$ref": "#/components/responses/400"}
        "401": {"$ref": "#/components/responses/401"}
        "403": {"$ref": "#/components/responses/403"}
        "404": {"$ref": "#/components/responses/404"}
        "409": {"$ref": "#/components/responses/409"}
        "410": {"$ref": "#/components/responses/410"}
        "422": {"$ref": "#/components/responses/422"}
        "429": {"$ref": "#/components/responses/429"}
        "500": {"$ref": "#/components/responses/500"}
  "/links/bulk":
    post:
      operationId: "bulkCreateLinks"
      x-speakeasy-name-override: "createMany"
      summary: "Bulk create links"
      x-codeSamples: [{"lang": "typescript", "label": "bulkCreateLinks", "source": "import { Dub } from \"dub\";\n\nconst dub = new Dub({\n  token: \"DUB_API_KEY\",\n});\n\nasync function run() {\n  const result = await dub.links.createMany();\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"}, {"lang": "go", "label": "bulkCreateLinks", "source": "package main\n\nimport(\n\t\"context\"\n\tdubgo \"github.com/dubinc/dub-go\"\n\t\"github.com/dubinc/dub-go/models/operations\"\n\t\"log\"\n)\n\nfunc main() {\n    ctx := context.Background()\n    \n    s := dubgo.New(\n        dubgo.WithSecurity(\"DUB_API_KEY\"),\n    )\n\n    res, err := s.Links.CreateMany(ctx, []operations.RequestBody{\n        operations.RequestBody{\n            URL: \"https://google.com\",\n            ExternalID: dubgo.String(\"123456\"),\n            TagIds: dubgo.Pointer(operations.CreateBulkCreateLinksTagIdsArrayOfStr(\n                []string{\n                    \"clux0rgak00011...\",\n                },\n            )),\n        },\n        operations.RequestBody{\n            URL: \"https://google.com\",\n            ExternalID: dubgo.String(\"123456\"),\n            TagIds: dubgo.Pointer(operations.CreateBulkCreateLinksTagIdsArrayOfStr(\n                []string{\n                    \"clux0rgak00011...\",\n                },\n            )),\n        },\n    })\n    if err != nil {\n        log.Fatal(err)\n    }\n    if res != nil {\n        // handle response\n    }\n}"}, {"lang": "ruby", "label": "bulkCreateLinks", "source": "require 'dub'\n\n\ns = ::OpenApiSDK::Dub.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    token: \"DUB_API_KEY\",\n  )\n)\n\n\nreq = [\n  ::OpenApiSDK::Operations::RequestBody.new(\n    url: \"https://google.com\",\n    external_id: \"123456\",\n    tag_ids: [\n      \"clux0rgak00011...\",\n    ],\n  ),\n]\n    \nres = s.links.create_many(req)\n\nif ! res.anies.nil?\n  # handle response\nend"}, {"lang": "php", "label": "bulkCreateLinks", "source": "declare(strict_types=1);\n\nrequire 'vendor/autoload.php';\n\nuse Dub;\nuse Dub\\Models\\Operations;\n\n$sdk = Dub\\Dub::builder()\n    ->setSecurity(\n        'DUB_API_KEY'\n    )\n    ->build();\n\n$request = [\n    new Operations\\RequestBody(\n        url: 'https://google.com',\n        externalId: '123456',\n        tagIds: [\n            'clux0rgak00011...',\n        ],\n    ),\n];\n\n$response = $sdk->links->createMany(\n    request: $request\n);\n\nif ($response->responseBodies !== null) {\n    // handle response\n}"}, {lang: python, label: bulkCreateLinks, source: "from dub import Dub\n\nwith Dub(\n    token=\"DUB_API_KEY\",\n) as dub:\n\n    res = dub.links.create_many(request=[\n        {\n            \"url\": \"https://google.com\",\n            \"external_id\": \"123456\",\n            \"tag_ids\": [\n                \"clux0rgak00011...\",\n            ],\n        },\n        {\n            \"url\": \"https://google.com\",\n            \"external_id\": \"123456\",\n            \"tag_ids\": [\n                \"clux0rgak00011...\",\n            ],\n        },\n    ])\n\n    assert res is not None\n\n    # Handle response\n    print(res)"}, {"lang": "java", "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"[{\\\"url\\\":\\\"https://google.com\\\",\\\"domain\\\":\\\"string\\\",\\\"key\\\":\\\"string\\\",\\\"externalId\\\":\\\"123456\\\",\\\"tenantId\\\":\\\"string\\\",\\\"prefix\\\":\\\"string\\\",\\\"trackConversion\\\":true,\\\"archived\\\":true,\\\"tagIds\\\":\\\"string\\\",\\\"tagNames\\\":\\\"string\\\",\\\"comments\\\":\\\"string\\\",\\\"expiresAt\\\":\\\"string\\\",\\\"expiredUrl\\\":\\\"string\\\",\\\"password\\\":\\\"string\\\",\\\"proxy\\\":true,\\\"title\\\":\\\"string\\\",\\\"description\\\":\\\"string\\\",\\\"image\\\":\\\"string\\\",\\\"video\\\":\\\"string\\\",\\\"rewrite\\\":true,\\\"ios\\\":\\\"string\\\",\\\"android\\\":\\\"string\\\",\\\"geo\\\":{\\\"AF\\\":\\\"string\\\",\\\"AL\\\":\\\"string\\\",\\\"DZ\\\":\\\"string\\\",\\\"AS\\\":\\\"string\\\",\\\"AD\\\":\\\"string\\\",\\\"AO\\\":\\\"string\\\",\\\"AI\\\":\\\"string\\\",\\\"AQ\\\":\\\"string\\\",\\\"AG\\\":\\\"string\\\",\\\"AR\\\":\\\"string\\\",\\\"AM\\\":\\\"string\\\",\\\"AW\\\":\\\"string\\\",\\\"AU\\\":\\\"string\\\",\\\"AT\\\":\\\"string\\\",\\\"AZ\\\":\\\"string\\\",\\\"BS\\\":\\\"string\\\",\\\"BH\\\":\\\"string\\\",\\\"BD\\\":\\\"string\\\",\\\"BB\\\":\\\"string\\\",\\\"BY\\\":\\\"string\\\",\\\"BE\\\":\\\"string\\\",\\\"BZ\\\":\\\"string\\\",\\\"BJ\\\":\\\"string\\\",\\\"BM\\\":\\\"string\\\",\\\"BT\\\":\\\"string\\\",\\\"BO\\\":\\\"string\\\",\\\"BA\\\":\\\"string\\\",\\\"BW\\\":\\\"string\\\",\\\"BV\\\":\\\"string\\\",\\\"BR\\\":\\\"string\\\",\\\"IO\\\":\\\"string\\\",\\\"BN\\\":\\\"string\\\",\\\"BG\\\":\\\"string\\\",\\\"BF\\\":\\\"string\\\",\\\"BI\\\":\\\"string\\\",\\\"KH\\\":\\\"string\\\",\\\"CM\\\":\\\"string\\\",\\\"CA\\\":\\\"string\\\",\\\"CV\\\":\\\"string\\\",\\\"KY\\\":\\\"string\\\",\\\"CF\\\":\\\"string\\\",\\\"TD\\\":\\\"string\\\",\\\"CL\\\":\\\"string\\\",\\\"CN\\\":\\\"string\\\",\\\"CX\\\":\\\"string\\\",\\\"CC\\\":\\\"string\\\",\\\"CO\\\":\\\"string\\\",\\\"KM\\\":\\\"string\\\",\\\"CG\\\":\\\"string\\\",\\\"CD\\\":\\\"string\\\",\\\"CK\\\":\\\"string\\\",\\\"CR\\\":\\\"string\\\",\\\"CI\\\":\\\"string\\\",\\\"HR\\\":\\\"string\\\",\\\"CU\\\":\\\"string\\\",\\\"CY\\\":\\\"string\\\",\\\"CZ\\\":\\\"string\\\",\\\"DK\\\":\\\"string\\\",\\\"DJ\\\":\\\"string\\\",\\\"DM\\\":\\\"string\\\",\\\"DO\\\":\\\"string\\\",\\\"EC\\\":\\\"string\\\",\\\"EG\\\":\\\"string\\\",\\\"SV\\\":\\\"string\\\",\\\"GQ\\\":\\\"string\\\",\\\"ER\\\":\\\"string\\\",\\\"EE\\\":\\\"string\\\",\\\"ET\\\":\\\"string\\\",\\\"FK\\\":\\\"string\\\",\\\"FO\\\":\\\"string\\\",\\\"FJ\\\":\\\"string\\\",\\\"FI\\\":\\\"string\\\",\\\"FR\\\":\\\"string\\\",\\\"GF\\\":\\\"string\\\",\\\"PF\\\":\\\"string\\\",\\\"TF\\\":\\\"string\\\",\\\"GA\\\":\\\"string\\\",\\\"GM\\\":\\\"string\\\",\\\"GE\\\":\\\"string\\\",\\\"DE\\\":\\\"string\\\",\\\"GH\\\":\\\"string\\\",\\\"GI\\\":\\\"string\\\",\\\"GR\\\":\\\"string\\\",\\\"GL\\\":\\\"string\\\",\\\"GD\\\":\\\"string\\\",\\\"GP\\\":\\\"string\\\",\\\"GU\\\":\\\"string\\\",\\\"GT\\\":\\\"string\\\",\\\"GN\\\":\\\"string\\\",\\\"GW\\\":\\\"string\\\",\\\"GY\\\":\\\"string\\\",\\\"HT\\\":\\\"string\\\",\\\"HM\\\":\\\"string\\\",\\\"VA\\\":\\\"string\\\",\\\"HN\\\":\\\"string\\\",\\\"HK\\\":\\\"string\\\",\\\"HU\\\":\\\"string\\\",\\\"IS\\\":\\\"string\\\",\\\"IN\\\":\\\"string\\\",\\\"ID\\\":\\\"string\\\",\\\"IR\\\":\\\"string\\\",\\\"IQ\\\":\\\"string\\\",\\\"IE\\\":\\\"string\\\",\\\"IL\\\":\\\"string\\\",\\\"IT\\\":\\\"string\\\",\\\"JM\\\":\\\"string\\\",\\\"JP\\\":\\\"string\\\",\\\"JO\\\":\\\"string\\\",\\\"KZ\\\":\\\"string\\\",\\\"KE\\\":\\\"string\\\",\\\"KI\\\":\\\"string\\\",\\\"KP\\\":\\\"string\\\",\\\"KR\\\":\\\"string\\\",\\\"KW\\\":\\\"string\\\",\\\"KG\\\":\\\"string\\\",\\\"LA\\\":\\\"string\\\",\\\"LV\\\":\\\"string\\\",\\\"LB\\\":\\\"string\\\",\\\"LS\\\":\\\"string\\\",\\\"LR\\\":\\\"string\\\",\\\"LY\\\":\\\"string\\\",\\\"LI\\\":\\\"string\\\",\\\"LT\\\":\\\"string\\\",\\\"LU\\\":\\\"string\\\",\\\"MO\\\":\\\"string\\\",\\\"MG\\\":\\\"string\\\",\\\"MW\\\":\\\"string\\\",\\\"MY\\\":\\\"string\\\",\\\"MV\\\":\\\"string\\\",\\\"ML\\\":\\\"string\\\",\\\"MT\\\":\\\"string\\\",\\\"MH\\\":\\\"string\\\",\\\"MQ\\\":\\\"string\\\",\\\"MR\\\":\\\"string\\\",\\\"MU\\\":\\\"string\\\",\\\"YT\\\":\\\"string\\\",\\\"MX\\\":\\\"string\\\",\\\"FM\\\":\\\"string\\\",\\\"MD\\\":\\\"string\\\",\\\"MC\\\":\\\"string\\\",\\\"MN\\\":\\\"string\\\",\\\"MS\\\":\\\"string\\\",\\\"MA\\\":\\\"string\\\",\\\"MZ\\\":\\\"string\\\",\\\"MM\\\":\\\"string\\\",\\\"NA\\\":\\\"string\\\",\\\"NR\\\":\\\"string\\\",\\\"NP\\\":\\\"string\\\",\\\"NL\\\":\\\"string\\\",\\\"NC\\\":\\\"string\\\",\\\"NZ\\\":\\\"string\\\",\\\"NI\\\":\\\"string\\\",\\\"NE\\\":\\\"string\\\",\\\"NG\\\":\\\"string\\\",\\\"NU\\\":\\\"string\\\",\\\"NF\\\":\\\"string\\\",\\\"MK\\\":\\\"string\\\",\\\"MP\\\":\\\"string\\\",\\\"NO\\\":\\\"string\\\",\\\"OM\\\":\\\"string\\\",\\\"PK\\\":\\\"string\\\",\\\"PW\\\":\\\"string\\\",\\\"PS\\\":\\\"string\\\",\\\"PA\\\":\\\"string\\\",\\\"PG\\\":\\\"string\\\",\\\"PY\\\":\\\"string\\\",\\\"PE\\\":\\\"string\\\",\\\"PH\\\":\\\"string\\\",\\\"PN\\\":\\\"string\\\",\\\"PL\\\":\\\"string\\\",\\\"PT\\\":\\\"string\\\",\\\"PR\\\":\\\"string\\\",\\\"QA\\\":\\\"string\\\",\\\"RE\\\":\\\"string\\\",\\\"RO\\\":\\\"string\\\",\\\"RU\\\":\\\"string\\\",\\\"RW\\\":\\\"string\\\",\\\"SH\\\":\\\"string\\\",\\\"KN\\\":\\\"string\\\",\\\"LC\\\":\\\"string\\\",\\\"PM\\\":\\\"string\\\",\\\"VC\\\":\\\"string\\\",\\\"WS\\\":\\\"string\\\",\\\"SM\\\":\\\"string\\\",\\\"ST\\\":\\\"string\\\",\\\"SA\\\":\\\"string\\\",\\\"SN\\\":\\\"string\\\",\\\"SC\\\":\\\"string\\\",\\\"SL\\\":\\\"string\\\",\\\"SG\\\":\\\"string\\\",\\\"SK\\\":\\\"string\\\",\\\"SI\\\":\\\"string\\\",\\\"SB\\\":\\\"string\\\",\\\"SO\\\":\\\"string\\\",\\\"ZA\\\":\\\"string\\\",\\\"GS\\\":\\\"string\\\",\\\"ES\\\":\\\"string\\\",\\\"LK\\\":\\\"string\\\",\\\"SD\\\":\\\"string\\\",\\\"SR\\\":\\\"string\\\",\\\"SJ\\\":\\\"string\\\",\\\"SZ\\\":\\\"string\\\",\\\"SE\\\":\\\"string\\\",\\\"CH\\\":\\\"string\\\",\\\"SY\\\":\\\"string\\\",\\\"TW\\\":\\\"string\\\",\\\"TJ\\\":\\\"string\\\",\\\"TZ\\\":\\\"string\\\",\\\"TH\\\":\\\"string\\\",\\\"TL\\\":\\\"string\\\",\\\"TG\\\":\\\"string\\\",\\\"TK\\\":\\\"string\\\",\\\"TO\\\":\\\"string\\\",\\\"TT\\\":\\\"string\\\",\\\"TN\\\":\\\"string\\\",\\\"TR\\\":\\\"string\\\",\\\"TM\\\":\\\"string\\\",\\\"TC\\\":\\\"string\\\",\\\"TV\\\":\\\"string\\\",\\\"UG\\\":\\\"string\\\",\\\"UA\\\":\\\"string\\\",\\\"AE\\\":\\\"string\\\",\\\"GB\\\":\\\"string\\\",\\\"US\\\":\\\"string\\\",\\\"UM\\\":\\\"string\\\",\\\"UY\\\":\\\"string\\\",\\\"UZ\\\":\\\"string\\\",\\\"VU\\\":\\\"string\\\",\\\"VE\\\":\\\"string\\\",\\\"VN\\\":\\\"string\\\",\\\"VG\\\":\\\"string\\\",\\\"VI\\\":\\\"string\\\",\\\"WF\\\":\\\"string\\\",\\\"EH\\\":\\\"string\\\",\\\"YE\\\":\\\"string\\\",\\\"ZM\\\":\\\"string\\\",\\\"ZW\\\":\\\"string\\\",\\\"AX\\\":\\\"string\\\",\\\"BQ\\\":\\\"string\\\",\\\"CW\\\":\\\"string\\\",\\\"GG\\\":\\\"string\\\",\\\"IM\\\":\\\"string\\\",\\\"JE\\\":\\\"string\\\",\\\"ME\\\":\\\"string\\\",\\\"BL\\\":\\\"string\\\",\\\"MF\\\":\\\"string\\\",\\\"RS\\\":\\\"string\\\",\\\"SX\\\":\\\"string\\\",\\\"SS\\\":\\\"string\\\",\\\"XK\\\":\\\"string\\\"},\\\"doIndex\\\":true,\\\"utm_source\\\":\\\"string\\\",\\\"utm_medium\\\":\\\"string\\\",\\\"utm_campaign\\\":\\\"string\\\",\\\"utm_term\\\":\\\"string\\\",\\\"utm_content\\\":\\\"string\\\",\\\"ref\\\":\\\"string\\\",\\\"programId\\\":\\\"string\\\",\\\"webhookIds\\\":[\\\"string\\\"]}]\");\nRequest request = new Request.Builder()\n  .url(\"https://api.dub.co/links/bulk\")\n  .post(body)\n  .addHeader(\"accept\", \"application/json\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"authorization\", \"Bearer MY_TOKEN\")\n  .build();\n\nResponse response = client.newCall(request).execute();"}]
      description: "Bulk create up to 100 links for the authenticated workspace."
      tags:
        - "Links"
      security:
        - token: []
      requestBody:
        content:
          "application/json":
            schema:
              type: "array"
              items:
                type: "object"
                properties:
                  "url":
                    type: "string"
                    description: "The destination URL of the short link."
                    example: "https://google.com"
                  "domain":
                    type: "string"
                    maxLength: 190
                    description: "The domain of the short link. If not provided, the primary domain for the workspace will be used (or `dub.sh` if the workspace has no domains)."
                  "key":
                    type: "string"
                    maxLength: 190
                    description: "The short link slug. If not provided, a random 7-character slug will be generated."
                  "externalId":
                    type: "string"
                    nullable: true
                    minLength: 1
                    maxLength: 255
                    description: "The ID of the link in your database. If set, it can be used to identify the link in future API requests (must be prefixed with 'ext_' when passed as a query parameter). This key is unique across your workspace."
                    example: "123456"
                  "tenantId":
                    type: "string"
                    nullable: true
                    maxLength: 255
                    description: "The ID of the tenant that created the link inside your system. If set, it can be used to fetch all links for a tenant."
                  "prefix":
                    type: "string"
                    description: "The prefix of the short link slug for randomly-generated keys (e.g. if prefix is `/c/`, generated keys will be in the `/c/:key` format). Will be ignored if `key` is provided."
                  "trackConversion":
                    type: "boolean"
                    description: "Whether to track conversions for the short link. Defaults to `false` if not provided."
                  "archived":
                    type: "boolean"
                    description: "Whether the short link is archived. Defaults to `false` if not provided."
                  "publicStats":
                    type: "boolean"
                    description: "Deprecated: Use `dashboard` instead. Whether the short link's stats are publicly accessible. Defaults to `false` if not provided."
                    deprecated: true
                  "tagId":
                    type: "string"
                    nullable: true
                    description: "The unique ID of the tag assigned to the short link. This field is deprecated – use `tagIds` instead."
                    deprecated: true
                  "tagIds":
                    anyOf:
                      - type: "string"
                      - type: "array"
                        items:
                          type: "string"
                    description: "The unique IDs of the tags assigned to the short link."
                    example: ["clux0rgak00011..."]
                  "tagNames":
                    anyOf:
                      - type: "string"
                      - type: "array"
                        items:
                          type: "string"
                    description: "The unique name of the tags assigned to the short link (case insensitive)."
                  "comments":
                    type: "string"
                    nullable: true
                    description: "The comments for the short link."
                  "expiresAt":
                    type: "string"
                    nullable: true
                    description: "The date and time when the short link will expire at."
                  "expiredUrl":
                    type: "string"
                    nullable: true
                    description: "The URL to redirect to when the short link has expired."
                  "password":
                    type: "string"
                    nullable: true
                    description: "The password required to access the destination URL of the short link."
                  "proxy":
                    type: "boolean"
                    description: "Whether the short link uses Custom Social Media Cards feature. Defaults to `false` if not provided."
                  "title":
                    type: "string"
                    nullable: true
                    description: "The custom link preview title (og:title). Will be used for Custom Social Media Cards if `proxy` is true. Learn more: https://d.to/og"
                  "description":
                    type: "string"
                    nullable: true
                    description: "The custom link preview description (og:description). Will be used for Custom Social Media Cards if `proxy` is true. Learn more: https://d.to/og"
                  "image":
                    type: "string"
                    nullable: true
                    description: "The custom link preview image (og:image). Will be used for Custom Social Media Cards if `proxy` is true. Learn more: https://d.to/og"
                  "video":
                    type: "string"
                    nullable: true
                    description: "The custom link preview video (og:video). Will be used for Custom Social Media Cards if `proxy` is true. Learn more: https://d.to/og"
                  "rewrite":
                    type: "boolean"
                    description: "Whether the short link uses link cloaking. Defaults to `false` if not provided."
                  "ios":
                    type: "string"
                    nullable: true
                    description: "The iOS destination URL for the short link for iOS device targeting."
                  "android":
                    type: "string"
                    nullable: true
                    description: "The Android destination URL for the short link for Android device targeting."
                  "geo": {"$ref": "#/components/schemas/linkGeoTargeting"}
                  "doIndex":
                    type: "boolean"
                    description: "Allow search engines to index your short link. Defaults to `false` if not provided. Learn more: https://d.to/noindex"
                  "utm_source":
                    type: "string"
                    nullable: true
                    description: "The UTM source of the short link. If set, this will populate or override the UTM source in the destination URL."
                  "utm_medium":
                    type: "string"
                    nullable: true
                    description: "The UTM medium of the short link. If set, this will populate or override the UTM medium in the destination URL."
                  "utm_campaign":
                    type: "string"
                    nullable: true
                    description: "The UTM campaign of the short link. If set, this will populate or override the UTM campaign in the destination URL."
                  "utm_term":
                    type: "string"
                    nullable: true
                    description: "The UTM term of the short link. If set, this will populate or override the UTM term in the destination URL."
                  "utm_content":
                    type: "string"
                    nullable: true
                    description: "The UTM content of the short link. If set, this will populate or override the UTM content in the destination URL."
                  "ref":
                    type: "string"
                    nullable: true
                    description: "The referral tag of the short link. If set, this will populate or override the `ref` query parameter in the destination URL."
                  "programId":
                    type: "string"
                    nullable: true
                    description: "The ID of the program the short link is associated with."
                  "webhookIds":
                    type: "array"
                    nullable: true
                    items:
                      type: "string"
                    description: "An array of webhook IDs to trigger when the link is clicked. These webhooks will receive click event data."
                required:
                  - "url"
      responses:
        "200":
          description: "The created links"
          content:
            "application/json":
              schema:
                type: "array"
                items:
                  oneOf:
                    - {"$ref": "#/components/schemas/LinkSchema"}
                    - {"$ref": "#/components/schemas/LinkErrorSchema"}
        "400": {"$ref": "#/components/responses/400"}
        "401": {"$ref": "#/components/responses/401"}
        "403": {"$ref": "#/components/responses/403"}
        "404": {"$ref": "#/components/responses/404"}
        "409": {"$ref": "#/components/responses/409"}
        "410": {"$ref": "#/components/responses/410"}
        "422": {"$ref": "#/components/responses/422"}
        "429": {"$ref": "#/components/responses/429"}
        "500": {"$ref": "#/components/responses/500"}
    patch:
      operationId: "bulkUpdateLinks"
      x-speakeasy-name-override: "updateMany"
      summary: "Bulk update links"
      x-codeSamples: [{"lang": "typescript", "label": "bulkUpdateLinks", "source": "import { Dub } from \"dub\";\n\nconst dub = new Dub({\n  token: \"DUB_API_KEY\",\n});\n\nasync function run() {\n  const result = await dub.links.updateMany();\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"}, {"lang": "go", "label": "bulkUpdateLinks", "source": "package main\n\nimport(\n\t\"context\"\n\tdubgo \"github.com/dubinc/dub-go\"\n\t\"github.com/dubinc/dub-go/models/operations\"\n\t\"log\"\n)\n\nfunc main() {\n    ctx := context.Background()\n    \n    s := dubgo.New(\n        dubgo.WithSecurity(\"DUB_API_KEY\"),\n    )\n\n    res, err := s.Links.UpdateMany(ctx, &operations.BulkUpdateLinksRequestBody{\n        Data: operations.Data{\n            URL: dubgo.String(\"https://google.com\"),\n            TagIds: dubgo.Pointer(operations.CreateBulkUpdateLinksTagIdsArrayOfStr(\n                []string{\n                    \"clux0rgak00011...\",\n                },\n            )),\n        },\n    })\n    if err != nil {\n        log.Fatal(err)\n    }\n    if res != nil {\n        // handle response\n    }\n}"}, {"lang": "ruby", "label": "bulkUpdateLinks", "source": "require 'dub'\n\n\ns = ::OpenApiSDK::Dub.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    token: \"DUB_API_KEY\",\n  )\n)\n\n\nreq = ::OpenApiSDK::Operations::BulkUpdateLinksRequestBody.new(\n  data: ::OpenApiSDK::Operations::Data.new(\n    url: \"https://google.com\",\n    tag_ids: [\n      \"clux0rgak00011...\",\n    ],\n  ),\n)\n    \nres = s.links.update_many(req)\n\nif ! res.link_schemas.nil?\n  # handle response\nend"}, {"lang": "php", "label": "bulkUpdateLinks", "source": "declare(strict_types=1);\n\nrequire 'vendor/autoload.php';\n\nuse Dub;\nuse Dub\\Models\\Operations;\n\n$sdk = Dub\\Dub::builder()\n    ->setSecurity(\n        'DUB_API_KEY'\n    )\n    ->build();\n\n$request = new Operations\\BulkUpdateLinksRequestBody(\n    data: new Operations\\Data(\n        url: 'https://google.com',\n        tagIds: [\n            'clux0rgak00011...',\n        ],\n    ),\n);\n\n$response = $sdk->links->updateMany(\n    request: $request\n);\n\nif ($response->linkSchemas !== null) {\n    // handle response\n}"}, {lang: python, label: bulkUpdateLinks, source: "from dub import Dub\n\nwith Dub(\n    token=\"DUB_API_KEY\",\n) as dub:\n\n    res = dub.links.update_many(request={\n        \"data\": {\n            \"url\": \"https://google.com\",\n            \"tag_ids\": [\n                \"clux0rgak00011...\",\n            ],\n        },\n    })\n\n    assert res is not None\n\n    # Handle response\n    print(res)"}, {"lang": "java", "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"linkIds\\\":[\\\"string\\\"],\\\"externalIds\\\":[\\\"string\\\"],\\\"data\\\":{\\\"url\\\":\\\"https://google.com\\\",\\\"tenantId\\\":\\\"string\\\",\\\"trackConversion\\\":true,\\\"archived\\\":true,\\\"tagIds\\\":\\\"string\\\",\\\"tagNames\\\":\\\"string\\\",\\\"comments\\\":\\\"string\\\",\\\"expiresAt\\\":\\\"string\\\",\\\"expiredUrl\\\":\\\"string\\\",\\\"password\\\":\\\"string\\\",\\\"proxy\\\":true,\\\"title\\\":\\\"string\\\",\\\"description\\\":\\\"string\\\",\\\"image\\\":\\\"string\\\",\\\"video\\\":\\\"string\\\",\\\"rewrite\\\":true,\\\"ios\\\":\\\"string\\\",\\\"android\\\":\\\"string\\\",\\\"geo\\\":{\\\"AF\\\":\\\"string\\\",\\\"AL\\\":\\\"string\\\",\\\"DZ\\\":\\\"string\\\",\\\"AS\\\":\\\"string\\\",\\\"AD\\\":\\\"string\\\",\\\"AO\\\":\\\"string\\\",\\\"AI\\\":\\\"string\\\",\\\"AQ\\\":\\\"string\\\",\\\"AG\\\":\\\"string\\\",\\\"AR\\\":\\\"string\\\",\\\"AM\\\":\\\"string\\\",\\\"AW\\\":\\\"string\\\",\\\"AU\\\":\\\"string\\\",\\\"AT\\\":\\\"string\\\",\\\"AZ\\\":\\\"string\\\",\\\"BS\\\":\\\"string\\\",\\\"BH\\\":\\\"string\\\",\\\"BD\\\":\\\"string\\\",\\\"BB\\\":\\\"string\\\",\\\"BY\\\":\\\"string\\\",\\\"BE\\\":\\\"string\\\",\\\"BZ\\\":\\\"string\\\",\\\"BJ\\\":\\\"string\\\",\\\"BM\\\":\\\"string\\\",\\\"BT\\\":\\\"string\\\",\\\"BO\\\":\\\"string\\\",\\\"BA\\\":\\\"string\\\",\\\"BW\\\":\\\"string\\\",\\\"BV\\\":\\\"string\\\",\\\"BR\\\":\\\"string\\\",\\\"IO\\\":\\\"string\\\",\\\"BN\\\":\\\"string\\\",\\\"BG\\\":\\\"string\\\",\\\"BF\\\":\\\"string\\\",\\\"BI\\\":\\\"string\\\",\\\"KH\\\":\\\"string\\\",\\\"CM\\\":\\\"string\\\",\\\"CA\\\":\\\"string\\\",\\\"CV\\\":\\\"string\\\",\\\"KY\\\":\\\"string\\\",\\\"CF\\\":\\\"string\\\",\\\"TD\\\":\\\"string\\\",\\\"CL\\\":\\\"string\\\",\\\"CN\\\":\\\"string\\\",\\\"CX\\\":\\\"string\\\",\\\"CC\\\":\\\"string\\\",\\\"CO\\\":\\\"string\\\",\\\"KM\\\":\\\"string\\\",\\\"CG\\\":\\\"string\\\",\\\"CD\\\":\\\"string\\\",\\\"CK\\\":\\\"string\\\",\\\"CR\\\":\\\"string\\\",\\\"CI\\\":\\\"string\\\",\\\"HR\\\":\\\"string\\\",\\\"CU\\\":\\\"string\\\",\\\"CY\\\":\\\"string\\\",\\\"CZ\\\":\\\"string\\\",\\\"DK\\\":\\\"string\\\",\\\"DJ\\\":\\\"string\\\",\\\"DM\\\":\\\"string\\\",\\\"DO\\\":\\\"string\\\",\\\"EC\\\":\\\"string\\\",\\\"EG\\\":\\\"string\\\",\\\"SV\\\":\\\"string\\\",\\\"GQ\\\":\\\"string\\\",\\\"ER\\\":\\\"string\\\",\\\"EE\\\":\\\"string\\\",\\\"ET\\\":\\\"string\\\",\\\"FK\\\":\\\"string\\\",\\\"FO\\\":\\\"string\\\",\\\"FJ\\\":\\\"string\\\",\\\"FI\\\":\\\"string\\\",\\\"FR\\\":\\\"string\\\",\\\"GF\\\":\\\"string\\\",\\\"PF\\\":\\\"string\\\",\\\"TF\\\":\\\"string\\\",\\\"GA\\\":\\\"string\\\",\\\"GM\\\":\\\"string\\\",\\\"GE\\\":\\\"string\\\",\\\"DE\\\":\\\"string\\\",\\\"GH\\\":\\\"string\\\",\\\"GI\\\":\\\"string\\\",\\\"GR\\\":\\\"string\\\",\\\"GL\\\":\\\"string\\\",\\\"GD\\\":\\\"string\\\",\\\"GP\\\":\\\"string\\\",\\\"GU\\\":\\\"string\\\",\\\"GT\\\":\\\"string\\\",\\\"GN\\\":\\\"string\\\",\\\"GW\\\":\\\"string\\\",\\\"GY\\\":\\\"string\\\",\\\"HT\\\":\\\"string\\\",\\\"HM\\\":\\\"string\\\",\\\"VA\\\":\\\"string\\\",\\\"HN\\\":\\\"string\\\",\\\"HK\\\":\\\"string\\\",\\\"HU\\\":\\\"string\\\",\\\"IS\\\":\\\"string\\\",\\\"IN\\\":\\\"string\\\",\\\"ID\\\":\\\"string\\\",\\\"IR\\\":\\\"string\\\",\\\"IQ\\\":\\\"string\\\",\\\"IE\\\":\\\"string\\\",\\\"IL\\\":\\\"string\\\",\\\"IT\\\":\\\"string\\\",\\\"JM\\\":\\\"string\\\",\\\"JP\\\":\\\"string\\\",\\\"JO\\\":\\\"string\\\",\\\"KZ\\\":\\\"string\\\",\\\"KE\\\":\\\"string\\\",\\\"KI\\\":\\\"string\\\",\\\"KP\\\":\\\"string\\\",\\\"KR\\\":\\\"string\\\",\\\"KW\\\":\\\"string\\\",\\\"KG\\\":\\\"string\\\",\\\"LA\\\":\\\"string\\\",\\\"LV\\\":\\\"string\\\",\\\"LB\\\":\\\"string\\\",\\\"LS\\\":\\\"string\\\",\\\"LR\\\":\\\"string\\\",\\\"LY\\\":\\\"string\\\",\\\"LI\\\":\\\"string\\\",\\\"LT\\\":\\\"string\\\",\\\"LU\\\":\\\"string\\\",\\\"MO\\\":\\\"string\\\",\\\"MG\\\":\\\"string\\\",\\\"MW\\\":\\\"string\\\",\\\"MY\\\":\\\"string\\\",\\\"MV\\\":\\\"string\\\",\\\"ML\\\":\\\"string\\\",\\\"MT\\\":\\\"string\\\",\\\"MH\\\":\\\"string\\\",\\\"MQ\\\":\\\"string\\\",\\\"MR\\\":\\\"string\\\",\\\"MU\\\":\\\"string\\\",\\\"YT\\\":\\\"string\\\",\\\"MX\\\":\\\"string\\\",\\\"FM\\\":\\\"string\\\",\\\"MD\\\":\\\"string\\\",\\\"MC\\\":\\\"string\\\",\\\"MN\\\":\\\"string\\\",\\\"MS\\\":\\\"string\\\",\\\"MA\\\":\\\"string\\\",\\\"MZ\\\":\\\"string\\\",\\\"MM\\\":\\\"string\\\",\\\"NA\\\":\\\"string\\\",\\\"NR\\\":\\\"string\\\",\\\"NP\\\":\\\"string\\\",\\\"NL\\\":\\\"string\\\",\\\"NC\\\":\\\"string\\\",\\\"NZ\\\":\\\"string\\\",\\\"NI\\\":\\\"string\\\",\\\"NE\\\":\\\"string\\\",\\\"NG\\\":\\\"string\\\",\\\"NU\\\":\\\"string\\\",\\\"NF\\\":\\\"string\\\",\\\"MK\\\":\\\"string\\\",\\\"MP\\\":\\\"string\\\",\\\"NO\\\":\\\"string\\\",\\\"OM\\\":\\\"string\\\",\\\"PK\\\":\\\"string\\\",\\\"PW\\\":\\\"string\\\",\\\"PS\\\":\\\"string\\\",\\\"PA\\\":\\\"string\\\",\\\"PG\\\":\\\"string\\\",\\\"PY\\\":\\\"string\\\",\\\"PE\\\":\\\"string\\\",\\\"PH\\\":\\\"string\\\",\\\"PN\\\":\\\"string\\\",\\\"PL\\\":\\\"string\\\",\\\"PT\\\":\\\"string\\\",\\\"PR\\\":\\\"string\\\",\\\"QA\\\":\\\"string\\\",\\\"RE\\\":\\\"string\\\",\\\"RO\\\":\\\"string\\\",\\\"RU\\\":\\\"string\\\",\\\"RW\\\":\\\"string\\\",\\\"SH\\\":\\\"string\\\",\\\"KN\\\":\\\"string\\\",\\\"LC\\\":\\\"string\\\",\\\"PM\\\":\\\"string\\\",\\\"VC\\\":\\\"string\\\",\\\"WS\\\":\\\"string\\\",\\\"SM\\\":\\\"string\\\",\\\"ST\\\":\\\"string\\\",\\\"SA\\\":\\\"string\\\",\\\"SN\\\":\\\"string\\\",\\\"SC\\\":\\\"string\\\",\\\"SL\\\":\\\"string\\\",\\\"SG\\\":\\\"string\\\",\\\"SK\\\":\\\"string\\\",\\\"SI\\\":\\\"string\\\",\\\"SB\\\":\\\"string\\\",\\\"SO\\\":\\\"string\\\",\\\"ZA\\\":\\\"string\\\",\\\"GS\\\":\\\"string\\\",\\\"ES\\\":\\\"string\\\",\\\"LK\\\":\\\"string\\\",\\\"SD\\\":\\\"string\\\",\\\"SR\\\":\\\"string\\\",\\\"SJ\\\":\\\"string\\\",\\\"SZ\\\":\\\"string\\\",\\\"SE\\\":\\\"string\\\",\\\"CH\\\":\\\"string\\\",\\\"SY\\\":\\\"string\\\",\\\"TW\\\":\\\"string\\\",\\\"TJ\\\":\\\"string\\\",\\\"TZ\\\":\\\"string\\\",\\\"TH\\\":\\\"string\\\",\\\"TL\\\":\\\"string\\\",\\\"TG\\\":\\\"string\\\",\\\"TK\\\":\\\"string\\\",\\\"TO\\\":\\\"string\\\",\\\"TT\\\":\\\"string\\\",\\\"TN\\\":\\\"string\\\",\\\"TR\\\":\\\"string\\\",\\\"TM\\\":\\\"string\\\",\\\"TC\\\":\\\"string\\\",\\\"TV\\\":\\\"string\\\",\\\"UG\\\":\\\"string\\\",\\\"UA\\\":\\\"string\\\",\\\"AE\\\":\\\"string\\\",\\\"GB\\\":\\\"string\\\",\\\"US\\\":\\\"string\\\",\\\"UM\\\":\\\"string\\\",\\\"UY\\\":\\\"string\\\",\\\"UZ\\\":\\\"string\\\",\\\"VU\\\":\\\"string\\\",\\\"VE\\\":\\\"string\\\",\\\"VN\\\":\\\"string\\\",\\\"VG\\\":\\\"string\\\",\\\"VI\\\":\\\"string\\\",\\\"WF\\\":\\\"string\\\",\\\"EH\\\":\\\"string\\\",\\\"YE\\\":\\\"string\\\",\\\"ZM\\\":\\\"string\\\",\\\"ZW\\\":\\\"string\\\",\\\"AX\\\":\\\"string\\\",\\\"BQ\\\":\\\"string\\\",\\\"CW\\\":\\\"string\\\",\\\"GG\\\":\\\"string\\\",\\\"IM\\\":\\\"string\\\",\\\"JE\\\":\\\"string\\\",\\\"ME\\\":\\\"string\\\",\\\"BL\\\":\\\"string\\\",\\\"MF\\\":\\\"string\\\",\\\"RS\\\":\\\"string\\\",\\\"SX\\\":\\\"string\\\",\\\"SS\\\":\\\"string\\\",\\\"XK\\\":\\\"string\\\"},\\\"doIndex\\\":true,\\\"utm_source\\\":\\\"string\\\",\\\"utm_medium\\\":\\\"string\\\",\\\"utm_campaign\\\":\\\"string\\\",\\\"utm_term\\\":\\\"string\\\",\\\"utm_content\\\":\\\"string\\\",\\\"ref\\\":\\\"string\\\",\\\"programId\\\":\\\"string\\\",\\\"webhookIds\\\":[\\\"string\\\"]}}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.dub.co/links/bulk\")\n  .patch(body)\n  .addHeader(\"accept\", \"application/json\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"authorization\", \"Bearer MY_TOKEN\")\n  .build();\n\nResponse response = client.newCall(request).execute();"}]
      description: "Bulk update up to 100 links with the same data for the authenticated workspace."
      tags:
        - "Links"
      security:
        - token: []
      requestBody:
        content:
          "application/json":
            schema:
              type: "object"
              properties:
                "linkIds":
                  type: "array"
                  items:
                    type: "string"
                  maxItems: 100
                  description: "The IDs of the links to update. Takes precedence over `externalIds`."
                  default: []
                "externalIds":
                  type: "array"
                  items:
                    type: "string"
                  maxItems: 100
                  description: "The external IDs of the links to update as stored in your database."
                  default: []
                "data":
                  type: "object"
                  properties:
                    "url":
                      type: "string"
                      description: "The destination URL of the short link."
                      example: "https://google.com"
                    "tenantId":
                      type: "string"
                      nullable: true
                      maxLength: 255
                      description: "The ID of the tenant that created the link inside your system. If set, it can be used to fetch all links for a tenant."
                    "trackConversion":
                      type: "boolean"
                      description: "Whether to track conversions for the short link. Defaults to `false` if not provided."
                    "archived":
                      type: "boolean"
                      description: "Whether the short link is archived. Defaults to `false` if not provided."
                    "publicStats":
                      type: "boolean"
                      description: "Deprecated: Use `dashboard` instead. Whether the short link's stats are publicly accessible. Defaults to `false` if not provided."
                      deprecated: true
                    "tagId":
                      type: "string"
                      nullable: true
                      description: "The unique ID of the tag assigned to the short link. This field is deprecated – use `tagIds` instead."
                      deprecated: true
                    "tagIds":
                      anyOf:
                        - type: "string"
                        - type: "array"
                          items:
                            type: "string"
                      description: "The unique IDs of the tags assigned to the short link."
                      example: ["clux0rgak00011..."]
                    "tagNames":
                      anyOf:
                        - type: "string"
                        - type: "array"
                          items:
                            type: "string"
                      description: "The unique name of the tags assigned to the short link (case insensitive)."
                    "comments":
                      type: "string"
                      nullable: true
                      description: "The comments for the short link."
                    "expiresAt":
                      type: "string"
                      nullable: true
                      description: "The date and time when the short link will expire at."
                    "expiredUrl":
                      type: "string"
                      nullable: true
                      description: "The URL to redirect to when the short link has expired."
                    "password":
                      type: "string"
                      nullable: true
                      description: "The password required to access the destination URL of the short link."
                    "proxy":
                      type: "boolean"
                      description: "Whether the short link uses Custom Social Media Cards feature. Defaults to `false` if not provided."
                    "title":
                      type: "string"
                      nullable: true
                      description: "The custom link preview title (og:title). Will be used for Custom Social Media Cards if `proxy` is true. Learn more: https://d.to/og"
                    "description":
                      type: "string"
                      nullable: true
                      description: "The custom link preview description (og:description). Will be used for Custom Social Media Cards if `proxy` is true. Learn more: https://d.to/og"
                    "image":
                      type: "string"
                      nullable: true
                      description: "The custom link preview image (og:image). Will be used for Custom Social Media Cards if `proxy` is true. Learn more: https://d.to/og"
                    "video":
                      type: "string"
                      nullable: true
                      description: "The custom link preview video (og:video). Will be used for Custom Social Media Cards if `proxy` is true. Learn more: https://d.to/og"
                    "rewrite":
                      type: "boolean"
                      description: "Whether the short link uses link cloaking. Defaults to `false` if not provided."
                    "ios":
                      type: "string"
                      nullable: true
                      description: "The iOS destination URL for the short link for iOS device targeting."
                    "android":
                      type: "string"
                      nullable: true
                      description: "The Android destination URL for the short link for Android device targeting."
                    "geo": {"$ref": "#/components/schemas/linkGeoTargeting"}
                    "doIndex":
                      type: "boolean"
                      description: "Allow search engines to index your short link. Defaults to `false` if not provided. Learn more: https://d.to/noindex"
                    "utm_source":
                      type: "string"
                      nullable: true
                      description: "The UTM source of the short link. If set, this will populate or override the UTM source in the destination URL."
                    "utm_medium":
                      type: "string"
                      nullable: true
                      description: "The UTM medium of the short link. If set, this will populate or override the UTM medium in the destination URL."
                    "utm_campaign":
                      type: "string"
                      nullable: true
                      description: "The UTM campaign of the short link. If set, this will populate or override the UTM campaign in the destination URL."
                    "utm_term":
                      type: "string"
                      nullable: true
                      description: "The UTM term of the short link. If set, this will populate or override the UTM term in the destination URL."
                    "utm_content":
                      type: "string"
                      nullable: true
                      description: "The UTM content of the short link. If set, this will populate or override the UTM content in the destination URL."
                    "ref":
                      type: "string"
                      nullable: true
                      description: "The referral tag of the short link. If set, this will populate or override the `ref` query parameter in the destination URL."
                    "programId":
                      type: "string"
                      nullable: true
                      description: "The ID of the program the short link is associated with."
                    "webhookIds":
                      type: "array"
                      nullable: true
                      items:
                        type: "string"
                      description: "An array of webhook IDs to trigger when the link is clicked. These webhooks will receive click event data."
              required:
                - "data"
      responses:
        "200":
          description: "The updated links"
          content:
            "application/json":
              schema:
                type: "array"
                items: {"$ref": "#/components/schemas/LinkSchema"}
        "400": {"$ref": "#/components/responses/400"}
        "401": {"$ref": "#/components/responses/401"}
        "403": {"$ref": "#/components/responses/403"}
        "404": {"$ref": "#/components/responses/404"}
        "409": {"$ref": "#/components/responses/409"}
        "410": {"$ref": "#/components/responses/410"}
        "422": {"$ref": "#/components/responses/422"}
        "429": {"$ref": "#/components/responses/429"}
        "500": {"$ref": "#/components/responses/500"}
    delete:
      operationId: "bulkDeleteLinks"
      x-speakeasy-name-override: "deleteMany"
      summary: "Bulk delete links"
      x-codeSamples: [{"lang": "typescript", "label": "bulkDeleteLinks", "source": "import { Dub } from \"dub\";\n\nconst dub = new Dub({\n  token: \"DUB_API_KEY\",\n});\n\nasync function run() {\n  const result = await dub.links.deleteMany({\n    linkIds: [\n      \"clux0rgak00011...\",\n      \"clux0rgak00022...\",\n    ],\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"}, {"lang": "go", "label": "bulkDeleteLinks", "source": "package main\n\nimport(\n\t\"context\"\n\tdubgo \"github.com/dubinc/dub-go\"\n\t\"github.com/dubinc/dub-go/models/operations\"\n\t\"log\"\n)\n\nfunc main() {\n    ctx := context.Background()\n    \n    s := dubgo.New(\n        dubgo.WithSecurity(\"DUB_API_KEY\"),\n    )\n\n    res, err := s.Links.DeleteMany(ctx, operations.BulkDeleteLinksRequest{\n        LinkIds: []string{\n            \"clux0rgak00011...\",\n            \"clux0rgak00022...\",\n        },\n    })\n    if err != nil {\n        log.Fatal(err)\n    }\n    if res != nil {\n        // handle response\n    }\n}"}, {"lang": "ruby", "label": "bulkDeleteLinks", "source": "require 'dub'\n\n\ns = ::OpenApiSDK::Dub.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    token: \"DUB_API_KEY\",\n  )\n)\n\n\nreq = ::OpenApiSDK::Operations::BulkDeleteLinksRequest.new(\n  link_ids: [\n    \"clux0rgak00011...\",\n    \"clux0rgak00022...\",\n  ],\n)\n    \nres = s.links.delete_many(req)\n\nif ! res.object.nil?\n  # handle response\nend"}, {"lang": "php", "label": "bulkDeleteLinks", "source": "declare(strict_types=1);\n\nrequire 'vendor/autoload.php';\n\nuse Dub;\n\n$sdk = Dub\\Dub::builder()\n    ->setSecurity(\n        'DUB_API_KEY'\n    )\n    ->build();\n\n\n\n$response = $sdk->links->deleteMany(\n    linkIds: [\n        'clux0rgak00011...',\n        'clux0rgak00022...',\n    ]\n);\n\nif ($response->object !== null) {\n    // handle response\n}"}, {lang: python, label: bulkDeleteLinks, source: "from dub import Dub\n\nwith Dub(\n    token=\"DUB_API_KEY\",\n) as dub:\n\n    res = dub.links.delete_many(request={\n        \"link_ids\": [\n            \"clux0rgak00011...\",\n            \"clux0rgak00022...\",\n        ],\n    })\n\n    assert res is not None\n\n    # Handle response\n    print(res)"}, {"lang": "java", "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.dub.co/links/bulk\")\n  .delete(null)\n  .addHeader(\"accept\", \"application/json\")\n  .addHeader(\"authorization\", \"Bearer MY_TOKEN\")\n  .build();\n\nResponse response = client.newCall(request).execute();"}]
      description: "Bulk delete up to 100 links for the authenticated workspace."
      tags:
        - "Links"
      security:
        - token: []
      parameters:
        - in: "query"
          name: "linkIds"
          description: "Comma-separated list of link IDs to delete. Maximum of 100 IDs. Non-existing IDs will be ignored."
          explode: false
          style: "form"
          schema:
            type: "array"
            items:
              type: "string"
            description: "Comma-separated list of link IDs to delete. Maximum of 100 IDs. Non-existing IDs will be ignored."
            example: ["clux0rgak00011...", "clux0rgak00022..."]
          required: true
      responses:
        "200":
          description: "The deleted links count."
          content:
            "application/json":
              schema:
                type: "object"
                properties:
                  "deletedCount":
                    type: "number"
                    description: "The number of links deleted."
                required:
                  - "deletedCount"
        "400": {"$ref": "#/components/responses/400"}
        "401": {"$ref": "#/components/responses/401"}
        "403": {"$ref": "#/components/responses/403"}
        "404": {"$ref": "#/components/responses/404"}
        "409": {"$ref": "#/components/responses/409"}
        "410": {"$ref": "#/components/responses/410"}
        "422": {"$ref": "#/components/responses/422"}
        "429": {"$ref": "#/components/responses/429"}
        "500": {"$ref": "#/components/responses/500"}
  "/links/upsert":
    put:
      operationId: "upsertLink"
      x-speakeasy-name-override: "upsert"
      x-speakeasy-usage-example: true
      summary: "Upsert a link"
      x-codeSamples: [{"lang": "typescript", "label": "upsertLink", "source": "import { Dub } from \"dub\";\n\nconst dub = new Dub({\n  token: \"DUB_API_KEY\",\n});\n\nasync function run() {\n  const result = await dub.links.upsert();\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"}, {"lang": "go", "label": "upsertLink", "source": "package main\n\nimport(\n\t\"context\"\n\tdubgo \"github.com/dubinc/dub-go\"\n\t\"github.com/dubinc/dub-go/models/operations\"\n\t\"log\"\n)\n\nfunc main() {\n    ctx := context.Background()\n    \n    s := dubgo.New(\n        dubgo.WithSecurity(\"DUB_API_KEY\"),\n    )\n\n    res, err := s.Links.Upsert(ctx, &operations.UpsertLinkRequestBody{\n        URL: \"https://google.com\",\n        ExternalID: dubgo.String(\"123456\"),\n        TagIds: dubgo.Pointer(operations.CreateUpsertLinkTagIdsArrayOfStr(\n            []string{\n                \"clux0rgak00011...\",\n            },\n        )),\n    })\n    if err != nil {\n        log.Fatal(err)\n    }\n    if res != nil {\n        // handle response\n    }\n}"}, {"lang": "ruby", "label": "upsertLink", "source": "require 'dub'\n\n\ns = ::OpenApiSDK::Dub.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    token: \"DUB_API_KEY\",\n  )\n)\n\n\nreq = ::OpenApiSDK::Operations::UpsertLinkRequestBody.new(\n  url: \"https://google.com\",\n  external_id: \"123456\",\n  tag_ids: [\n    \"clux0rgak00011...\",\n  ],\n)\n    \nres = s.links.upsert(req)\n\nif ! res.link_schema.nil?\n  # handle response\nend"}, {"lang": "php", "label": "upsertLink", "source": "declare(strict_types=1);\n\nrequire 'vendor/autoload.php';\n\nuse Dub;\nuse Dub\\Models\\Operations;\n\n$sdk = Dub\\Dub::builder()\n    ->setSecurity(\n        'DUB_API_KEY'\n    )\n    ->build();\n\n$request = new Operations\\UpsertLinkRequestBody(\n    url: 'https://google.com',\n    externalId: '123456',\n    tagIds: [\n        'clux0rgak00011...',\n    ],\n);\n\n$response = $sdk->links->upsert(\n    request: $request\n);\n\nif ($response->linkSchema !== null) {\n    // handle response\n}"}, {lang: python, label: upsertLink, source: "from dub import Dub\n\nwith Dub(\n    token=\"DUB_API_KEY\",\n) as dub:\n\n    res = dub.links.upsert(request={\n        \"url\": \"https://google.com\",\n        \"external_id\": \"123456\",\n        \"tag_ids\": [\n            \"clux0rgak00011...\",\n        ],\n    })\n\n    assert res is not None\n\n    # Handle response\n    print(res)"}, {"lang": "java", "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"url\\\":\\\"https://google.com\\\",\\\"domain\\\":\\\"string\\\",\\\"key\\\":\\\"string\\\",\\\"externalId\\\":\\\"123456\\\",\\\"tenantId\\\":\\\"string\\\",\\\"prefix\\\":\\\"string\\\",\\\"trackConversion\\\":true,\\\"archived\\\":true,\\\"tagIds\\\":\\\"string\\\",\\\"tagNames\\\":\\\"string\\\",\\\"comments\\\":\\\"string\\\",\\\"expiresAt\\\":\\\"string\\\",\\\"expiredUrl\\\":\\\"string\\\",\\\"password\\\":\\\"string\\\",\\\"proxy\\\":true,\\\"title\\\":\\\"string\\\",\\\"description\\\":\\\"string\\\",\\\"image\\\":\\\"string\\\",\\\"video\\\":\\\"string\\\",\\\"rewrite\\\":true,\\\"ios\\\":\\\"string\\\",\\\"android\\\":\\\"string\\\",\\\"geo\\\":{\\\"AF\\\":\\\"string\\\",\\\"AL\\\":\\\"string\\\",\\\"DZ\\\":\\\"string\\\",\\\"AS\\\":\\\"string\\\",\\\"AD\\\":\\\"string\\\",\\\"AO\\\":\\\"string\\\",\\\"AI\\\":\\\"string\\\",\\\"AQ\\\":\\\"string\\\",\\\"AG\\\":\\\"string\\\",\\\"AR\\\":\\\"string\\\",\\\"AM\\\":\\\"string\\\",\\\"AW\\\":\\\"string\\\",\\\"AU\\\":\\\"string\\\",\\\"AT\\\":\\\"string\\\",\\\"AZ\\\":\\\"string\\\",\\\"BS\\\":\\\"string\\\",\\\"BH\\\":\\\"string\\\",\\\"BD\\\":\\\"string\\\",\\\"BB\\\":\\\"string\\\",\\\"BY\\\":\\\"string\\\",\\\"BE\\\":\\\"string\\\",\\\"BZ\\\":\\\"string\\\",\\\"BJ\\\":\\\"string\\\",\\\"BM\\\":\\\"string\\\",\\\"BT\\\":\\\"string\\\",\\\"BO\\\":\\\"string\\\",\\\"BA\\\":\\\"string\\\",\\\"BW\\\":\\\"string\\\",\\\"BV\\\":\\\"string\\\",\\\"BR\\\":\\\"string\\\",\\\"IO\\\":\\\"string\\\",\\\"BN\\\":\\\"string\\\",\\\"BG\\\":\\\"string\\\",\\\"BF\\\":\\\"string\\\",\\\"BI\\\":\\\"string\\\",\\\"KH\\\":\\\"string\\\",\\\"CM\\\":\\\"string\\\",\\\"CA\\\":\\\"string\\\",\\\"CV\\\":\\\"string\\\",\\\"KY\\\":\\\"string\\\",\\\"CF\\\":\\\"string\\\",\\\"TD\\\":\\\"string\\\",\\\"CL\\\":\\\"string\\\",\\\"CN\\\":\\\"string\\\",\\\"CX\\\":\\\"string\\\",\\\"CC\\\":\\\"string\\\",\\\"CO\\\":\\\"string\\\",\\\"KM\\\":\\\"string\\\",\\\"CG\\\":\\\"string\\\",\\\"CD\\\":\\\"string\\\",\\\"CK\\\":\\\"string\\\",\\\"CR\\\":\\\"string\\\",\\\"CI\\\":\\\"string\\\",\\\"HR\\\":\\\"string\\\",\\\"CU\\\":\\\"string\\\",\\\"CY\\\":\\\"string\\\",\\\"CZ\\\":\\\"string\\\",\\\"DK\\\":\\\"string\\\",\\\"DJ\\\":\\\"string\\\",\\\"DM\\\":\\\"string\\\",\\\"DO\\\":\\\"string\\\",\\\"EC\\\":\\\"string\\\",\\\"EG\\\":\\\"string\\\",\\\"SV\\\":\\\"string\\\",\\\"GQ\\\":\\\"string\\\",\\\"ER\\\":\\\"string\\\",\\\"EE\\\":\\\"string\\\",\\\"ET\\\":\\\"string\\\",\\\"FK\\\":\\\"string\\\",\\\"FO\\\":\\\"string\\\",\\\"FJ\\\":\\\"string\\\",\\\"FI\\\":\\\"string\\\",\\\"FR\\\":\\\"string\\\",\\\"GF\\\":\\\"string\\\",\\\"PF\\\":\\\"string\\\",\\\"TF\\\":\\\"string\\\",\\\"GA\\\":\\\"string\\\",\\\"GM\\\":\\\"string\\\",\\\"GE\\\":\\\"string\\\",\\\"DE\\\":\\\"string\\\",\\\"GH\\\":\\\"string\\\",\\\"GI\\\":\\\"string\\\",\\\"GR\\\":\\\"string\\\",\\\"GL\\\":\\\"string\\\",\\\"GD\\\":\\\"string\\\",\\\"GP\\\":\\\"string\\\",\\\"GU\\\":\\\"string\\\",\\\"GT\\\":\\\"string\\\",\\\"GN\\\":\\\"string\\\",\\\"GW\\\":\\\"string\\\",\\\"GY\\\":\\\"string\\\",\\\"HT\\\":\\\"string\\\",\\\"HM\\\":\\\"string\\\",\\\"VA\\\":\\\"string\\\",\\\"HN\\\":\\\"string\\\",\\\"HK\\\":\\\"string\\\",\\\"HU\\\":\\\"string\\\",\\\"IS\\\":\\\"string\\\",\\\"IN\\\":\\\"string\\\",\\\"ID\\\":\\\"string\\\",\\\"IR\\\":\\\"string\\\",\\\"IQ\\\":\\\"string\\\",\\\"IE\\\":\\\"string\\\",\\\"IL\\\":\\\"string\\\",\\\"IT\\\":\\\"string\\\",\\\"JM\\\":\\\"string\\\",\\\"JP\\\":\\\"string\\\",\\\"JO\\\":\\\"string\\\",\\\"KZ\\\":\\\"string\\\",\\\"KE\\\":\\\"string\\\",\\\"KI\\\":\\\"string\\\",\\\"KP\\\":\\\"string\\\",\\\"KR\\\":\\\"string\\\",\\\"KW\\\":\\\"string\\\",\\\"KG\\\":\\\"string\\\",\\\"LA\\\":\\\"string\\\",\\\"LV\\\":\\\"string\\\",\\\"LB\\\":\\\"string\\\",\\\"LS\\\":\\\"string\\\",\\\"LR\\\":\\\"string\\\",\\\"LY\\\":\\\"string\\\",\\\"LI\\\":\\\"string\\\",\\\"LT\\\":\\\"string\\\",\\\"LU\\\":\\\"string\\\",\\\"MO\\\":\\\"string\\\",\\\"MG\\\":\\\"string\\\",\\\"MW\\\":\\\"string\\\",\\\"MY\\\":\\\"string\\\",\\\"MV\\\":\\\"string\\\",\\\"ML\\\":\\\"string\\\",\\\"MT\\\":\\\"string\\\",\\\"MH\\\":\\\"string\\\",\\\"MQ\\\":\\\"string\\\",\\\"MR\\\":\\\"string\\\",\\\"MU\\\":\\\"string\\\",\\\"YT\\\":\\\"string\\\",\\\"MX\\\":\\\"string\\\",\\\"FM\\\":\\\"string\\\",\\\"MD\\\":\\\"string\\\",\\\"MC\\\":\\\"string\\\",\\\"MN\\\":\\\"string\\\",\\\"MS\\\":\\\"string\\\",\\\"MA\\\":\\\"string\\\",\\\"MZ\\\":\\\"string\\\",\\\"MM\\\":\\\"string\\\",\\\"NA\\\":\\\"string\\\",\\\"NR\\\":\\\"string\\\",\\\"NP\\\":\\\"string\\\",\\\"NL\\\":\\\"string\\\",\\\"NC\\\":\\\"string\\\",\\\"NZ\\\":\\\"string\\\",\\\"NI\\\":\\\"string\\\",\\\"NE\\\":\\\"string\\\",\\\"NG\\\":\\\"string\\\",\\\"NU\\\":\\\"string\\\",\\\"NF\\\":\\\"string\\\",\\\"MK\\\":\\\"string\\\",\\\"MP\\\":\\\"string\\\",\\\"NO\\\":\\\"string\\\",\\\"OM\\\":\\\"string\\\",\\\"PK\\\":\\\"string\\\",\\\"PW\\\":\\\"string\\\",\\\"PS\\\":\\\"string\\\",\\\"PA\\\":\\\"string\\\",\\\"PG\\\":\\\"string\\\",\\\"PY\\\":\\\"string\\\",\\\"PE\\\":\\\"string\\\",\\\"PH\\\":\\\"string\\\",\\\"PN\\\":\\\"string\\\",\\\"PL\\\":\\\"string\\\",\\\"PT\\\":\\\"string\\\",\\\"PR\\\":\\\"string\\\",\\\"QA\\\":\\\"string\\\",\\\"RE\\\":\\\"string\\\",\\\"RO\\\":\\\"string\\\",\\\"RU\\\":\\\"string\\\",\\\"RW\\\":\\\"string\\\",\\\"SH\\\":\\\"string\\\",\\\"KN\\\":\\\"string\\\",\\\"LC\\\":\\\"string\\\",\\\"PM\\\":\\\"string\\\",\\\"VC\\\":\\\"string\\\",\\\"WS\\\":\\\"string\\\",\\\"SM\\\":\\\"string\\\",\\\"ST\\\":\\\"string\\\",\\\"SA\\\":\\\"string\\\",\\\"SN\\\":\\\"string\\\",\\\"SC\\\":\\\"string\\\",\\\"SL\\\":\\\"string\\\",\\\"SG\\\":\\\"string\\\",\\\"SK\\\":\\\"string\\\",\\\"SI\\\":\\\"string\\\",\\\"SB\\\":\\\"string\\\",\\\"SO\\\":\\\"string\\\",\\\"ZA\\\":\\\"string\\\",\\\"GS\\\":\\\"string\\\",\\\"ES\\\":\\\"string\\\",\\\"LK\\\":\\\"string\\\",\\\"SD\\\":\\\"string\\\",\\\"SR\\\":\\\"string\\\",\\\"SJ\\\":\\\"string\\\",\\\"SZ\\\":\\\"string\\\",\\\"SE\\\":\\\"string\\\",\\\"CH\\\":\\\"string\\\",\\\"SY\\\":\\\"string\\\",\\\"TW\\\":\\\"string\\\",\\\"TJ\\\":\\\"string\\\",\\\"TZ\\\":\\\"string\\\",\\\"TH\\\":\\\"string\\\",\\\"TL\\\":\\\"string\\\",\\\"TG\\\":\\\"string\\\",\\\"TK\\\":\\\"string\\\",\\\"TO\\\":\\\"string\\\",\\\"TT\\\":\\\"string\\\",\\\"TN\\\":\\\"string\\\",\\\"TR\\\":\\\"string\\\",\\\"TM\\\":\\\"string\\\",\\\"TC\\\":\\\"string\\\",\\\"TV\\\":\\\"string\\\",\\\"UG\\\":\\\"string\\\",\\\"UA\\\":\\\"string\\\",\\\"AE\\\":\\\"string\\\",\\\"GB\\\":\\\"string\\\",\\\"US\\\":\\\"string\\\",\\\"UM\\\":\\\"string\\\",\\\"UY\\\":\\\"string\\\",\\\"UZ\\\":\\\"string\\\",\\\"VU\\\":\\\"string\\\",\\\"VE\\\":\\\"string\\\",\\\"VN\\\":\\\"string\\\",\\\"VG\\\":\\\"string\\\",\\\"VI\\\":\\\"string\\\",\\\"WF\\\":\\\"string\\\",\\\"EH\\\":\\\"string\\\",\\\"YE\\\":\\\"string\\\",\\\"ZM\\\":\\\"string\\\",\\\"ZW\\\":\\\"string\\\",\\\"AX\\\":\\\"string\\\",\\\"BQ\\\":\\\"string\\\",\\\"CW\\\":\\\"string\\\",\\\"GG\\\":\\\"string\\\",\\\"IM\\\":\\\"string\\\",\\\"JE\\\":\\\"string\\\",\\\"ME\\\":\\\"string\\\",\\\"BL\\\":\\\"string\\\",\\\"MF\\\":\\\"string\\\",\\\"RS\\\":\\\"string\\\",\\\"SX\\\":\\\"string\\\",\\\"SS\\\":\\\"string\\\",\\\"XK\\\":\\\"string\\\"},\\\"doIndex\\\":true,\\\"utm_source\\\":\\\"string\\\",\\\"utm_medium\\\":\\\"string\\\",\\\"utm_campaign\\\":\\\"string\\\",\\\"utm_term\\\":\\\"string\\\",\\\"utm_content\\\":\\\"string\\\",\\\"ref\\\":\\\"string\\\",\\\"programId\\\":\\\"string\\\",\\\"webhookIds\\\":[\\\"string\\\"]}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.dub.co/links/upsert\")\n  .put(body)\n  .addHeader(\"accept\", \"application/json\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"authorization\", \"Bearer MY_TOKEN\")\n  .build();\n\nResponse response = client.newCall(request).execute();"}]
      description: "Upsert a link for the authenticated workspace by its URL. If a link with the same URL already exists, return it (or update it if there are any changes). Otherwise, a new link will be created."
      tags:
        - "Links"
      security:
        - token: []
      requestBody:
        content:
          "application/json":
            schema:
              type: "object"
              properties:
                "url":
                  type: "string"
                  description: "The destination URL of the short link."
                  example: "https://google.com"
                "domain":
                  type: "string"
                  maxLength: 190
                  description: "The domain of the short link. If not provided, the primary domain for the workspace will be used (or `dub.sh` if the workspace has no domains)."
                "key":
                  type: "string"
                  maxLength: 190
                  description: "The short link slug. If not provided, a random 7-character slug will be generated."
                "externalId":
                  type: "string"
                  nullable: true
                  minLength: 1
                  maxLength: 255
                  description: "The ID of the link in your database. If set, it can be used to identify the link in future API requests (must be prefixed with 'ext_' when passed as a query parameter). This key is unique across your workspace."
                  example: "123456"
                "tenantId":
                  type: "string"
                  nullable: true
                  maxLength: 255
                  description: "The ID of the tenant that created the link inside your system. If set, it can be used to fetch all links for a tenant."
                "prefix":
                  type: "string"
                  description: "The prefix of the short link slug for randomly-generated keys (e.g. if prefix is `/c/`, generated keys will be in the `/c/:key` format). Will be ignored if `key` is provided."
                "trackConversion":
                  type: "boolean"
                  description: "Whether to track conversions for the short link. Defaults to `false` if not provided."
                "archived":
                  type: "boolean"
                  description: "Whether the short link is archived. Defaults to `false` if not provided."
                "publicStats":
                  type: "boolean"
                  description: "Deprecated: Use `dashboard` instead. Whether the short link's stats are publicly accessible. Defaults to `false` if not provided."
                  deprecated: true
                "tagId":
                  type: "string"
                  nullable: true
                  description: "The unique ID of the tag assigned to the short link. This field is deprecated – use `tagIds` instead."
                  deprecated: true
                "tagIds":
                  anyOf:
                    - type: "string"
                    - type: "array"
                      items:
                        type: "string"
                  description: "The unique IDs of the tags assigned to the short link."
                  example: ["clux0rgak00011..."]
                "tagNames":
                  anyOf:
                    - type: "string"
                    - type: "array"
                      items:
                        type: "string"
                  description: "The unique name of the tags assigned to the short link (case insensitive)."
                "comments":
                  type: "string"
                  nullable: true
                  description: "The comments for the short link."
                "expiresAt":
                  type: "string"
                  nullable: true
                  description: "The date and time when the short link will expire at."
                "expiredUrl":
                  type: "string"
                  nullable: true
                  description: "The URL to redirect to when the short link has expired."
                "password":
                  type: "string"
                  nullable: true
                  description: "The password required to access the destination URL of the short link."
                "proxy":
                  type: "boolean"
                  description: "Whether the short link uses Custom Social Media Cards feature. Defaults to `false` if not provided."
                "title":
                  type: "string"
                  nullable: true
                  description: "The custom link preview title (og:title). Will be used for Custom Social Media Cards if `proxy` is true. Learn more: https://d.to/og"
                "description":
                  type: "string"
                  nullable: true
                  description: "The custom link preview description (og:description). Will be used for Custom Social Media Cards if `proxy` is true. Learn more: https://d.to/og"
                "image":
                  type: "string"
                  nullable: true
                  description: "The custom link preview image (og:image). Will be used for Custom Social Media Cards if `proxy` is true. Learn more: https://d.to/og"
                "video":
                  type: "string"
                  nullable: true
                  description: "The custom link preview video (og:video). Will be used for Custom Social Media Cards if `proxy` is true. Learn more: https://d.to/og"
                "rewrite":
                  type: "boolean"
                  description: "Whether the short link uses link cloaking. Defaults to `false` if not provided."
                "ios":
                  type: "string"
                  nullable: true
                  description: "The iOS destination URL for the short link for iOS device targeting."
                "android":
                  type: "string"
                  nullable: true
                  description: "The Android destination URL for the short link for Android device targeting."
                "geo": {"$ref": "#/components/schemas/linkGeoTargeting"}
                "doIndex":
                  type: "boolean"
                  description: "Allow search engines to index your short link. Defaults to `false` if not provided. Learn more: https://d.to/noindex"
                "utm_source":
                  type: "string"
                  nullable: true
                  description: "The UTM source of the short link. If set, this will populate or override the UTM source in the destination URL."
                "utm_medium":
                  type: "string"
                  nullable: true
                  description: "The UTM medium of the short link. If set, this will populate or override the UTM medium in the destination URL."
                "utm_campaign":
                  type: "string"
                  nullable: true
                  description: "The UTM campaign of the short link. If set, this will populate or override the UTM campaign in the destination URL."
                "utm_term":
                  type: "string"
                  nullable: true
                  description: "The UTM term of the short link. If set, this will populate or override the UTM term in the destination URL."
                "utm_content":
                  type: "string"
                  nullable: true
                  description: "The UTM content of the short link. If set, this will populate or override the UTM content in the destination URL."
                "ref":
                  type: "string"
                  nullable: true
                  description: "The referral tag of the short link. If set, this will populate or override the `ref` query parameter in the destination URL."
                "programId":
                  type: "string"
                  nullable: true
                  description: "The ID of the program the short link is associated with."
                "webhookIds":
                  type: "array"
                  nullable: true
                  items:
                    type: "string"
                  description: "An array of webhook IDs to trigger when the link is clicked. These webhooks will receive click event data."
              required:
                - "url"
      responses:
        "200":
          description: "The upserted link"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/LinkSchema"}
        "400": {"$ref": "#/components/responses/400"}
        "401": {"$ref": "#/components/responses/401"}
        "403": {"$ref": "#/components/responses/403"}
        "404": {"$ref": "#/components/responses/404"}
        "409": {"$ref": "#/components/responses/409"}
        "410": {"$ref": "#/components/responses/410"}
        "422": {"$ref": "#/components/responses/422"}
        "429": {"$ref": "#/components/responses/429"}
        "500": {"$ref": "#/components/responses/500"}
  "/analytics":
    get:
      operationId: "retrieveAnalytics"
      x-speakeasy-name-override: "retrieve"
      summary: "Retrieve analytics for a link, a domain, or the authenticated workspace."
      x-codeSamples: [{"lang": "typescript", "label": "retrieveAnalytics", "source": "import { Dub } from \"dub\";\n\nconst dub = new Dub({\n  token: \"DUB_API_KEY\",\n});\n\nasync function run() {\n  const result = await dub.analytics.retrieve();\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"}, {"lang": "go", "label": "retrieveAnalytics", "source": "package main\n\nimport(\n\t\"context\"\n\tdubgo \"github.com/dubinc/dub-go\"\n\t\"github.com/dubinc/dub-go/models/operations\"\n\t\"log\"\n)\n\nfunc main() {\n    ctx := context.Background()\n    \n    s := dubgo.New(\n        dubgo.WithSecurity(\"DUB_API_KEY\"),\n    )\n\n    res, err := s.Analytics.Retrieve(ctx, operations.RetrieveAnalyticsRequest{\n        Event: operations.EventClicks.ToPointer(),\n        GroupBy: operations.QueryParamGroupByCount.ToPointer(),\n        Timezone: dubgo.String(\"America/New_York\"),\n        City: dubgo.String(\"New York\"),\n        Device: dubgo.String(\"Desktop\"),\n        Browser: dubgo.String(\"Chrome\"),\n        Os: dubgo.String(\"Windows\"),\n        Referer: dubgo.String(\"google.com\"),\n        RefererURL: dubgo.String(\"https://dub.co/blog\"),\n    })\n    if err != nil {\n        log.Fatal(err)\n    }\n    if res != nil {\n        // handle response\n    }\n}"}, {"lang": "ruby", "label": "retrieveAnalytics", "source": "require 'dub'\n\n\ns = ::OpenApiSDK::Dub.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    token: \"DUB_API_KEY\",\n  )\n)\n\n\nreq = ::OpenApiSDK::Operations::RetrieveAnalyticsRequest.new(\n  timezone: \"America/New_York\",\n  city: \"New York\",\n  device: \"Desktop\",\n  browser: \"Chrome\",\n  os: \"Windows\",\n  referer: \"google.com\",\n  referer_url: \"https://dub.co/blog\",\n)\n    \nres = s.analytics.retrieve(req)\n\nif ! res.one_of.nil?\n  # handle response\nend"}, {"lang": "php", "label": "retrieveAnalytics", "source": "declare(strict_types=1);\n\nrequire 'vendor/autoload.php';\n\nuse Dub;\nuse Dub\\Models\\Operations;\n\n$sdk = Dub\\Dub::builder()\n    ->setSecurity(\n        'DUB_API_KEY'\n    )\n    ->build();\n\n$request = new Operations\\RetrieveAnalyticsRequest(\n    timezone: 'America/New_York',\n    city: 'New York',\n    device: 'Desktop',\n    browser: 'Chrome',\n    os: 'Windows',\n    referer: 'google.com',\n    refererUrl: 'https://dub.co/blog',\n);\n\n$response = $sdk->analytics->retrieve(\n    request: $request\n);\n\nif ($response->oneOf !== null) {\n    // handle response\n}"}, {lang: python, label: retrieveAnalytics, source: "from dub import Dub\nfrom dub.models import operations\n\nwith Dub(\n    token=\"DUB_API_KEY\",\n) as dub:\n\n    res = dub.analytics.retrieve(request={\n        \"event\": operations.Event.CLICKS,\n        \"group_by\": operations.QueryParamGroupBy.COUNT,\n        \"timezone\": \"America/New_York\",\n        \"city\": \"New York\",\n        \"device\": \"Desktop\",\n        \"browser\": \"Chrome\",\n        \"os\": \"Windows\",\n        \"referer\": \"google.com\",\n        \"referer_url\": \"https://dub.co/blog\",\n    })\n\n    assert res is not None\n\n    # Handle response\n    print(res)"}, {"lang": "java", "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.dub.co/analytics\")\n  .get()\n  .addHeader(\"accept\", \"application/json\")\n  .addHeader(\"authorization\", \"Bearer MY_TOKEN\")\n  .build();\n\nResponse response = client.newCall(request).execute();"}]
      description: "Retrieve analytics for a link, a domain, or the authenticated workspace. The response type depends on the `event` and `type` query parameters."
      tags:
        - "Analytics"
      security:
        - token: []
      parameters:
        - in: "query"
          name: "event"
          description: "The type of event to retrieve analytics for. Defaults to `clicks`."
          schema:
            type: "string"
            enum:
              - "clicks"
              - "leads"
              - "sales"
              - "composite"
            default: "clicks"
            description: "The type of event to retrieve analytics for. Defaults to `clicks`."
        - in: "query"
          name: "groupBy"
          description: "The parameter to group the analytics data points by. Defaults to `count` if undefined."
          schema:
            type: "string"
            enum:
              - "count"
              - "timeseries"
              - "continents"
              - "regions"
              - "countries"
              - "cities"
              - "devices"
              - "browsers"
              - "os"
              - "trigger"
              - "triggers"
              - "referers"
              - "referer_urls"
              - "top_links"
              - "top_urls"
              - "utm_sources"
              - "utm_mediums"
              - "utm_campaigns"
              - "utm_terms"
              - "utm_contents"
            default: "count"
            description: "The parameter to group the analytics data points by. Defaults to `count` if undefined."
        - in: "query"
          name: "domain"
          description: "The domain to filter analytics for."
          schema:
            type: "string"
            description: "The domain to filter analytics for."
        - in: "query"
          name: "key"
          description: "The short link slug."
          schema:
            type: "string"
            description: "The short link slug."
        - in: "query"
          name: "linkId"
          description: "The unique ID of the short link on Dub."
          schema:
            type: "string"
            description: "The unique ID of the short link on Dub."
        - in: "query"
          name: "externalId"
          description: "This is the ID of the link in the your database. Must be prefixed with 'ext_' when passed as a query parameter."
          schema:
            type: "string"
            description: "This is the ID of the link in the your database. Must be prefixed with 'ext_' when passed as a query parameter."
        - in: "query"
          name: "interval"
          description: "The interval to retrieve analytics for. If undefined, defaults to 24h."
          schema:
            type: "string"
            enum:
              - "24h"
              - "7d"
              - "30d"
              - "90d"
              - "ytd"
              - "1y"
              - "all"
              - "all_unfiltered"
            description: "The interval to retrieve analytics for. If undefined, defaults to 24h."
        - in: "query"
          name: "start"
          description: "The start date and time when to retrieve analytics from. Takes precedence over `interval`."
          schema:
            type: "string"
            description: "The start date and time when to retrieve analytics from. Takes precedence over `interval`."
        - in: "query"
          name: "end"
          description: "The end date and time when to retrieve analytics from. If not provided, defaults to the current date. Takes precedence over `interval`."
          schema:
            type: "string"
            description: "The end date and time when to retrieve analytics from. If not provided, defaults to the current date. Takes precedence over `interval`."
        - in: "query"
          name: "timezone"
          description: "The IANA time zone code for aligning timeseries granularity (e.g. America/New_York). Defaults to UTC."
          schema:
            type: "string"
            description: "The IANA time zone code for aligning timeseries granularity (e.g. America/New_York). Defaults to UTC."
            example: "America/New_York"
            default: "UTC"
        - in: "query"
          name: "country"
          description: "The country to retrieve analytics for."
          schema: {"$ref": "#/components/schemas/countryCode"}
        - in: "query"
          name: "city"
          description: "The city to retrieve analytics for."
          schema:
            type: "string"
            description: "The city to retrieve analytics for."
            example: "New York"
        - in: "query"
          name: "region"
          description: "The ISO 3166-2 region code to retrieve analytics for."
          schema: {"$ref": "#/components/schemas/regionCode"}
        - in: "query"
          name: "continent"
          description: "The continent to retrieve analytics for."
          schema: {"$ref": "#/components/schemas/continentCode"}
        - in: "query"
          name: "device"
          description: "The device to retrieve analytics for."
          schema:
            type: "string"
            description: "The device to retrieve analytics for."
            example: "Desktop"
        - in: "query"
          name: "browser"
          description: "The browser to retrieve analytics for."
          schema:
            type: "string"
            description: "The browser to retrieve analytics for."
            example: "Chrome"
        - in: "query"
          name: "os"
          description: "The OS to retrieve analytics for."
          schema:
            type: "string"
            description: "The OS to retrieve analytics for."
            example: "Windows"
        - in: "query"
          name: "trigger"
          description: "The trigger to retrieve analytics for. If undefined, return both QR and link clicks."
          schema:
            type: "string"
            enum:
              - "qr"
              - "link"
            description: "The trigger to retrieve analytics for. If undefined, return both QR and link clicks."
        - in: "query"
          name: "referer"
          description: "The referer to retrieve analytics for."
          schema:
            type: "string"
            description: "The referer to retrieve analytics for."
            example: "google.com"
        - in: "query"
          name: "refererUrl"
          description: "The full referer URL to retrieve analytics for."
          schema:
            type: "string"
            description: "The full referer URL to retrieve analytics for."
            example: "https://dub.co/blog"
        - in: "query"
          name: "url"
          description: "The URL to retrieve analytics for."
          schema:
            type: "string"
            description: "The URL to retrieve analytics for."
        - in: "query"
          name: "tagId"
          description: "Deprecated. Use `tagIds` instead. The tag ID to retrieve analytics for."
          schema:
            type: "string"
            description: "Deprecated. Use `tagIds` instead. The tag ID to retrieve analytics for."
            deprecated: true
        - in: "query"
          name: "tagIds"
          description: "The tag IDs to retrieve analytics for."
          schema:
            anyOf:
              - type: "string"
              - type: "array"
                items:
                  type: "string"
            description: "The tag IDs to retrieve analytics for."
        - in: "query"
          name: "qr"
          description: "Deprecated. Use the `trigger` field instead. Filter for QR code scans. If true, filter for QR codes only. If false, filter for links only. If undefined, return both."
          schema:
            type: "boolean"
            description: "Deprecated. Use the `trigger` field instead. Filter for QR code scans. If true, filter for QR codes only. If false, filter for links only. If undefined, return both."
            deprecated: true
        - in: "query"
          name: "root"
          description: "Filter for root domains. If true, filter for domains only. If false, filter for links only. If undefined, return both."
          schema:
            type: "boolean"
            description: "Filter for root domains. If true, filter for domains only. If false, filter for links only. If undefined, return both."
        - in: "query"
          name: "utm_source"
          description: "The UTM source of the short link."
          schema:
            type: "string"
            nullable: true
            maxLength: 190
            description: "The UTM source of the short link."
        - in: "query"
          name: "utm_medium"
          description: "The UTM medium of the short link."
          schema:
            type: "string"
            nullable: true
            maxLength: 190
            description: "The UTM medium of the short link."
        - in: "query"
          name: "utm_campaign"
          description: "The UTM campaign of the short link."
          schema:
            type: "string"
            nullable: true
            maxLength: 190
            description: "The UTM campaign of the short link."
        - in: "query"
          name: "utm_term"
          description: "The UTM term of the short link."
          schema:
            type: "string"
            nullable: true
            maxLength: 190
            description: "The UTM term of the short link."
        - in: "query"
          name: "utm_content"
          description: "The UTM content of the short link."
          schema:
            type: "string"
            nullable: true
            maxLength: 190
            description: "The UTM content of the short link."
      responses:
        "200":
          description: "Analytics data"
          content:
            "application/json":
              schema:
                anyOf:
                  - {"$ref": "#/components/schemas/AnalyticsCount"}
                  - type: "array"
                    items: {"$ref": "#/components/schemas/AnalyticsTimeseries"}
                    title: "AnalyticsTimeseries"
                  - type: "array"
                    items: {"$ref": "#/components/schemas/AnalyticsContinents"}
                    title: "AnalyticsContinents"
                  - type: "array"
                    items: {"$ref": "#/components/schemas/AnalyticsCountries"}
                    title: "AnalyticsCountries"
                  - type: "array"
                    items: {"$ref": "#/components/schemas/AnalyticsCities"}
                    title: "AnalyticsCities"
                  - type: "array"
                    items: {"$ref": "#/components/schemas/AnalyticsDevices"}
                    title: "AnalyticsDevices"
                  - type: "array"
                    items: {"$ref": "#/components/schemas/AnalyticsBrowsers"}
                    title: "AnalyticsBrowsers"
                  - type: "array"
                    items: {"$ref": "#/components/schemas/AnalyticsOS"}
                    title: "AnalyticsOS"
                  - type: "array"
                    items: {"$ref": "#/components/schemas/AnalyticsTriggers"}
                    title: "AnalyticsTriggers"
                  - type: "array"
                    items: {"$ref": "#/components/schemas/AnalyticsReferers"}
                    title: "AnalyticsReferers"
                  - type: "array"
                    items: {"$ref": "#/components/schemas/AnalyticsRefererUrls"}
                    title: "AnalyticsRefererUrls"
                  - type: "array"
                    items: {"$ref": "#/components/schemas/AnalyticsTopLinks"}
                    title: "AnalyticsTopLinks"
                  - type: "array"
                    items: {"$ref": "#/components/schemas/AnalyticsTopUrls"}
                    title: "AnalyticsTopUrls"
        "400": {"$ref": "#/components/responses/400"}
        "401": {"$ref": "#/components/responses/401"}
        "403": {"$ref": "#/components/responses/403"}
        "404": {"$ref": "#/components/responses/404"}
        "409": {"$ref": "#/components/responses/409"}
        "410": {"$ref": "#/components/responses/410"}
        "422": {"$ref": "#/components/responses/422"}
        "429": {"$ref": "#/components/responses/429"}
        "500": {"$ref": "#/components/responses/500"}
  "/events":
    get:
      operationId: "listEvents"
      x-speakeasy-name-override: "list"
      summary: "Retrieve a list of events"
      x-codeSamples: [{"lang": "typescript", "label": "listEvents", "source": "import { Dub } from \"dub\";\n\nconst dub = new Dub({\n  token: \"DUB_API_KEY\",\n});\n\nasync function run() {\n  const result = await dub.events.list();\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"}, {"lang": "go", "label": "listEvents", "source": "package main\n\nimport(\n\t\"context\"\n\tdubgo \"github.com/dubinc/dub-go\"\n\t\"github.com/dubinc/dub-go/models/operations\"\n\t\"log\"\n)\n\nfunc main() {\n    ctx := context.Background()\n    \n    s := dubgo.New(\n        dubgo.WithSecurity(\"DUB_API_KEY\"),\n    )\n\n    res, err := s.Events.List(ctx, operations.ListEventsRequest{\n        Event: operations.QueryParamEventClicks.ToPointer(),\n        Interval: operations.QueryParamIntervalTwentyFourh.ToPointer(),\n        Timezone: dubgo.String(\"America/New_York\"),\n        City: dubgo.String(\"New York\"),\n        Device: dubgo.String(\"Desktop\"),\n        Browser: dubgo.String(\"Chrome\"),\n        Os: dubgo.String(\"Windows\"),\n        Referer: dubgo.String(\"google.com\"),\n        RefererURL: dubgo.String(\"https://dub.co/blog\"),\n        Page: dubgo.Float64(1),\n        Limit: dubgo.Float64(100),\n        SortOrder: operations.QueryParamSortOrderDesc.ToPointer(),\n        SortBy: operations.QueryParamSortByTimestamp.ToPointer(),\n    })\n    if err != nil {\n        log.Fatal(err)\n    }\n    if res != nil {\n        // handle response\n    }\n}"}, {"lang": "ruby", "label": "listEvents", "source": "require 'dub'\n\n\ns = ::OpenApiSDK::Dub.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    token: \"DUB_API_KEY\",\n  )\n)\n\n\nreq = ::OpenApiSDK::Operations::ListEventsRequest.new(\n  timezone: \"America/New_York\",\n  city: \"New York\",\n  device: \"Desktop\",\n  browser: \"Chrome\",\n  os: \"Windows\",\n  referer: \"google.com\",\n  referer_url: \"https://dub.co/blog\",\n)\n    \nres = s.events.list(req)\n\nif ! res.click_events.nil?\n  # handle response\nend"}, {"lang": "php", "label": "listEvents", "source": "declare(strict_types=1);\n\nrequire 'vendor/autoload.php';\n\nuse Dub;\nuse Dub\\Models\\Operations;\n\n$sdk = Dub\\Dub::builder()\n    ->setSecurity(\n        'DUB_API_KEY'\n    )\n    ->build();\n\n$request = new Operations\\ListEventsRequest(\n    timezone: 'America/New_York',\n    city: 'New York',\n    device: 'Desktop',\n    browser: 'Chrome',\n    os: 'Windows',\n    referer: 'google.com',\n    refererUrl: 'https://dub.co/blog',\n);\n\n$response = $sdk->events->list(\n    request: $request\n);\n\nif ($response->clickEvents !== null) {\n    // handle response\n}"}, {lang: python, label: listEvents, source: "from dub import Dub\nfrom dub.models import operations\n\nwith Dub(\n    token=\"DUB_API_KEY\",\n) as dub:\n\n    res = dub.events.list(request={\n        \"event\": operations.QueryParamEvent.CLICKS,\n        \"interval\": operations.QueryParamInterval.TWENTY_FOURH,\n        \"timezone\": \"America/New_York\",\n        \"city\": \"New York\",\n        \"device\": \"Desktop\",\n        \"browser\": \"Chrome\",\n        \"os\": \"Windows\",\n        \"referer\": \"google.com\",\n        \"referer_url\": \"https://dub.co/blog\",\n        \"page\": 1,\n        \"limit\": 100,\n        \"sort_order\": operations.QueryParamSortOrder.DESC,\n        \"sort_by\": operations.QueryParamSortBy.TIMESTAMP,\n    })\n\n    assert res is not None\n\n    # Handle response\n    print(res)"}, {"lang": "java", "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.dub.co/events\")\n  .get()\n  .addHeader(\"accept\", \"application/json\")\n  .addHeader(\"authorization\", \"Bearer MY_TOKEN\")\n  .build();\n\nResponse response = client.newCall(request).execute();"}]
      description: "Retrieve a paginated list of events for the authenticated workspace."
      tags:
        - "Events"
      security:
        - token: []
      parameters:
        - in: "query"
          name: "event"
          description: "The type of event to retrieve analytics for. Defaults to 'clicks'."
          schema:
            type: "string"
            enum:
              - "clicks"
              - "leads"
              - "sales"
            default: "clicks"
            description: "The type of event to retrieve analytics for. Defaults to 'clicks'."
        - in: "query"
          name: "domain"
          description: "The domain to filter analytics for."
          schema:
            type: "string"
            description: "The domain to filter analytics for."
        - in: "query"
          name: "key"
          description: "The short link slug."
          schema:
            type: "string"
            description: "The short link slug."
        - in: "query"
          name: "linkId"
          description: "The unique ID of the short link on Dub."
          schema:
            type: "string"
            description: "The unique ID of the short link on Dub."
        - in: "query"
          name: "externalId"
          description: "This is the ID of the link in the your database. Must be prefixed with 'ext_' when passed as a query parameter."
          schema:
            type: "string"
            description: "This is the ID of the link in the your database. Must be prefixed with 'ext_' when passed as a query parameter."
        - in: "query"
          name: "interval"
          description: "The interval to retrieve events for. Takes precedence over start and end. If undefined, defaults to 24h."
          schema:
            type: "string"
            enum:
              - "24h"
              - "7d"
              - "30d"
              - "90d"
              - "ytd"
              - "1y"
              - "all"
            default: "24h"
            description: "The interval to retrieve events for. Takes precedence over start and end. If undefined, defaults to 24h."
        - in: "query"
          name: "start"
          description: "The start date and time when to retrieve analytics from. Takes precedence over `interval`."
          schema:
            type: "string"
            description: "The start date and time when to retrieve analytics from. Takes precedence over `interval`."
        - in: "query"
          name: "end"
          description: "The end date and time when to retrieve analytics from. If not provided, defaults to the current date. Takes precedence over `interval`."
          schema:
            type: "string"
            description: "The end date and time when to retrieve analytics from. If not provided, defaults to the current date. Takes precedence over `interval`."
        - in: "query"
          name: "timezone"
          description: "The IANA time zone code for aligning timeseries granularity (e.g. America/New_York). Defaults to UTC."
          schema:
            type: "string"
            description: "The IANA time zone code for aligning timeseries granularity (e.g. America/New_York). Defaults to UTC."
            example: "America/New_York"
            default: "UTC"
        - in: "query"
          name: "country"
          description: "The country to retrieve analytics for."
          schema: {"$ref": "#/components/schemas/countryCode"}
        - in: "query"
          name: "city"
          description: "The city to retrieve analytics for."
          schema:
            type: "string"
            description: "The city to retrieve analytics for."
            example: "New York"
        - in: "query"
          name: "region"
          description: "The ISO 3166-2 region code to retrieve analytics for."
          schema: {"$ref": "#/components/schemas/regionCode"}
        - in: "query"
          name: "continent"
          description: "The continent to retrieve analytics for."
          schema: {"$ref": "#/components/schemas/continentCode"}
        - in: "query"
          name: "device"
          description: "The device to retrieve analytics for."
          schema:
            type: "string"
            description: "The device to retrieve analytics for."
            example: "Desktop"
        - in: "query"
          name: "browser"
          description: "The browser to retrieve analytics for."
          schema:
            type: "string"
            description: "The browser to retrieve analytics for."
            example: "Chrome"
        - in: "query"
          name: "os"
          description: "The OS to retrieve analytics for."
          schema:
            type: "string"
            description: "The OS to retrieve analytics for."
            example: "Windows"
        - in: "query"
          name: "trigger"
          description: "The trigger to retrieve analytics for. If undefined, return both QR and link clicks."
          schema:
            type: "string"
            enum:
              - "qr"
              - "link"
            description: "The trigger to retrieve analytics for. If undefined, return both QR and link clicks."
        - in: "query"
          name: "referer"
          description: "The referer to retrieve analytics for."
          schema:
            type: "string"
            description: "The referer to retrieve analytics for."
            example: "google.com"
        - in: "query"
          name: "refererUrl"
          description: "The full referer URL to retrieve analytics for."
          schema:
            type: "string"
            description: "The full referer URL to retrieve analytics for."
            example: "https://dub.co/blog"
        - in: "query"
          name: "url"
          description: "The URL to retrieve analytics for."
          schema:
            type: "string"
            description: "The URL to retrieve analytics for."
        - in: "query"
          name: "tagId"
          description: "Deprecated. Use `tagIds` instead. The tag ID to retrieve analytics for."
          schema:
            type: "string"
            description: "Deprecated. Use `tagIds` instead. The tag ID to retrieve analytics for."
            deprecated: true
        - in: "query"
          name: "tagIds"
          description: "The tag IDs to retrieve analytics for."
          schema:
            anyOf:
              - type: "string"
              - type: "array"
                items:
                  type: "string"
            description: "The tag IDs to retrieve analytics for."
        - in: "query"
          name: "qr"
          description: "Deprecated. Use the `trigger` field instead. Filter for QR code scans. If true, filter for QR codes only. If false, filter for links only. If undefined, return both."
          schema:
            type: "boolean"
            description: "Deprecated. Use the `trigger` field instead. Filter for QR code scans. If true, filter for QR codes only. If false, filter for links only. If undefined, return both."
            deprecated: true
        - in: "query"
          name: "root"
          description: "Filter for root domains. If true, filter for domains only. If false, filter for links only. If undefined, return both."
          schema:
            type: "boolean"
            description: "Filter for root domains. If true, filter for domains only. If false, filter for links only. If undefined, return both."
        - in: "query"
          name: "utm_source"
          description: "The UTM source of the short link."
          schema:
            type: "string"
            nullable: true
            maxLength: 190
            description: "The UTM source of the short link."
        - in: "query"
          name: "utm_medium"
          description: "The UTM medium of the short link."
          schema:
            type: "string"
            nullable: true
            maxLength: 190
            description: "The UTM medium of the short link."
        - in: "query"
          name: "utm_campaign"
          description: "The UTM campaign of the short link."
          schema:
            type: "string"
            nullable: true
            maxLength: 190
            description: "The UTM campaign of the short link."
        - in: "query"
          name: "utm_term"
          description: "The UTM term of the short link."
          schema:
            type: "string"
            nullable: true
            maxLength: 190
            description: "The UTM term of the short link."
        - in: "query"
          name: "utm_content"
          description: "The UTM content of the short link."
          schema:
            type: "string"
            nullable: true
            maxLength: 190
            description: "The UTM content of the short link."
        - in: "query"
          name: "page"
          schema:
            type: "number"
            default: 1
        - in: "query"
          name: "limit"
          schema:
            type: "number"
            default: 100
        - in: "query"
          name: "sortOrder"
          description: "The sort order. The default is `desc`."
          schema:
            type: "string"
            enum:
              - "asc"
              - "desc"
            default: "desc"
            description: "The sort order. The default is `desc`."
        - in: "query"
          name: "sortBy"
          description: "The field to sort the events by. The default is `timestamp`."
          schema:
            type: "string"
            enum:
              - "timestamp"
            default: "timestamp"
            description: "The field to sort the events by. The default is `timestamp`."
        - in: "query"
          name: "order"
          description: "DEPRECATED. Use `sortOrder` instead."
          schema:
            type: "string"
            enum:
              - "asc"
              - "desc"
            default: "desc"
            description: "DEPRECATED. Use `sortOrder` instead."
            deprecated: true
      responses:
        "200":
          description: "A list of events"
          content:
            "application/json":
              schema:
                anyOf:
                  - type: "array"
                    items: {"$ref": "#/components/schemas/ClickEvent"}
                    title: "ClickEvents"
                  - type: "array"
                    items: {"$ref": "#/components/schemas/LeadEvent"}
                    title: "LeadEvents"
                  - type: "array"
                    items: {"$ref": "#/components/schemas/SaleEvent"}
                    title: "SaleEvents"
        "400": {"$ref": "#/components/responses/400"}
        "401": {"$ref": "#/components/responses/401"}
        "403": {"$ref": "#/components/responses/403"}
        "404": {"$ref": "#/components/responses/404"}
        "409": {"$ref": "#/components/responses/409"}
        "410": {"$ref": "#/components/responses/410"}
        "422": {"$ref": "#/components/responses/422"}
        "429": {"$ref": "#/components/responses/429"}
        "500": {"$ref": "#/components/responses/500"}
  "/tags":
    post:
      operationId: "createTag"
      x-speakeasy-name-override: "create"
      summary: "Create a new tag"
      x-codeSamples: [{"lang": "typescript", "label": "createTag", "source": "import { Dub } from \"dub\";\n\nconst dub = new Dub({\n  token: \"DUB_API_KEY\",\n});\n\nasync function run() {\n  const result = await dub.tags.create();\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"}, {"lang": "go", "label": "createTag", "source": "package main\n\nimport(\n\t\"context\"\n\tdubgo \"github.com/dubinc/dub-go\"\n\t\"log\"\n)\n\nfunc main() {\n    ctx := context.Background()\n    \n    s := dubgo.New(\n        dubgo.WithSecurity(\"DUB_API_KEY\"),\n    )\n\n    res, err := s.Tags.Create(ctx, nil)\n    if err != nil {\n        log.Fatal(err)\n    }\n    if res != nil {\n        // handle response\n    }\n}"}, {"lang": "ruby", "label": "createTag", "source": "require 'dub'\n\n\ns = ::OpenApiSDK::Dub.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    token: \"DUB_API_KEY\",\n  )\n)\n\n\nreq = ::OpenApiSDK::Operations::CreateTagRequestBody.new()\n    \nres = s.tags.create(req)\n\nif ! res.tag_schema.nil?\n  # handle response\nend"}, {"lang": "php", "label": "createTag", "source": "declare(strict_types=1);\n\nrequire 'vendor/autoload.php';\n\nuse Dub;\nuse Dub\\Models\\Operations;\n\n$sdk = Dub\\Dub::builder()\n    ->setSecurity(\n        'DUB_API_KEY'\n    )\n    ->build();\n\n$request = new Operations\\CreateTagRequestBody();\n\n$response = $sdk->tags->create(\n    request: $request\n);\n\nif ($response->tagSchema !== null) {\n    // handle response\n}"}, {lang: python, label: createTag, source: "from dub import Dub\n\nwith Dub(\n    token=\"DUB_API_KEY\",\n) as dub:\n\n    res = dub.tags.create()\n\n    assert res is not None\n\n    # Handle response\n    print(res)"}, {"lang": "java", "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"name\\\":\\\"string\\\",\\\"color\\\":\\\"red\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.dub.co/tags\")\n  .post(body)\n  .addHeader(\"accept\", \"application/json\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"authorization\", \"Bearer MY_TOKEN\")\n  .build();\n\nResponse response = client.newCall(request).execute();"}]
      description: "Create a new tag for the authenticated workspace."
      tags:
        - "Tags"
      security:
        - token: []
      requestBody:
        content:
          "application/json":
            schema:
              type: "object"
              properties:
                "name":
                  type: "string"
                  minLength: 1
                  maxLength: 50
                  description: "The name of the tag to create."
                "color":
                  type: "string"
                  enum:
                    - "red"
                    - "yellow"
                    - "green"
                    - "blue"
                    - "purple"
                    - "pink"
                    - "brown"
                  description: "The color of the tag. If not provided, a random color will be used from the list: red, yellow, green, blue, purple, pink, brown."
                "tag":
                  type: "string"
                  minLength: 1
                  description: "The name of the tag to create."
                  deprecated: true
      responses:
        "201":
          description: "The created tag"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/TagSchema"}
        "400": {"$ref": "#/components/responses/400"}
        "401": {"$ref": "#/components/responses/401"}
        "403": {"$ref": "#/components/responses/403"}
        "404": {"$ref": "#/components/responses/404"}
        "409": {"$ref": "#/components/responses/409"}
        "410": {"$ref": "#/components/responses/410"}
        "422": {"$ref": "#/components/responses/422"}
        "429": {"$ref": "#/components/responses/429"}
        "500": {"$ref": "#/components/responses/500"}
    get:
      operationId: "getTags"
      x-speakeasy-name-override: "list"
      summary: "Retrieve a list of tags"
      x-codeSamples: [{"lang": "typescript", "label": "getTags", "source": "import { Dub } from \"dub\";\n\nconst dub = new Dub({\n  token: \"DUB_API_KEY\",\n});\n\nasync function run() {\n  const result = await dub.tags.list();\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"}, {"lang": "go", "label": "getTags", "source": "package main\n\nimport(\n\t\"context\"\n\tdubgo \"github.com/dubinc/dub-go\"\n\t\"github.com/dubinc/dub-go/models/operations\"\n\t\"log\"\n)\n\nfunc main() {\n    ctx := context.Background()\n    \n    s := dubgo.New(\n        dubgo.WithSecurity(\"DUB_API_KEY\"),\n    )\n\n    res, err := s.Tags.List(ctx, operations.GetTagsRequest{\n        SortBy: operations.GetTagsQueryParamSortByName.ToPointer(),\n        SortOrder: operations.GetTagsQueryParamSortOrderAsc.ToPointer(),\n        Page: dubgo.Float64(1),\n        PageSize: dubgo.Float64(50),\n    })\n    if err != nil {\n        log.Fatal(err)\n    }\n    if res != nil {\n        // handle response\n    }\n}"}, {"lang": "ruby", "label": "getTags", "source": "require 'dub'\n\n\ns = ::OpenApiSDK::Dub.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    token: \"DUB_API_KEY\",\n  )\n)\n\n\nreq = ::OpenApiSDK::Operations::GetTagsRequest.new(\n  page: 1.0,\n  page_size: 50.0,\n)\n    \nres = s.tags.list(req)\n\nif ! res.tag_schemas.nil?\n  # handle response\nend"}, {"lang": "php", "label": "getTags", "source": "declare(strict_types=1);\n\nrequire 'vendor/autoload.php';\n\nuse Dub;\nuse Dub\\Models\\Operations;\n\n$sdk = Dub\\Dub::builder()\n    ->setSecurity(\n        'DUB_API_KEY'\n    )\n    ->build();\n\n$request = new Operations\\GetTagsRequest(\n    page: 1,\n    pageSize: 50,\n);\n\n$response = $sdk->tags->list(\n    request: $request\n);\n\nif ($response->tagSchemas !== null) {\n    // handle response\n}"}, {lang: python, label: getTags, source: "from dub import Dub\nfrom dub.models import operations\n\nwith Dub(\n    token=\"DUB_API_KEY\",\n) as dub:\n\n    res = dub.tags.list(request={\n        \"sort_by\": operations.GetTagsQueryParamSortBy.NAME,\n        \"sort_order\": operations.GetTagsQueryParamSortOrder.ASC,\n        \"page\": 1,\n        \"page_size\": 50,\n    })\n\n    assert res is not None\n\n    # Handle response\n    print(res)"}, {"lang": "java", "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.dub.co/tags\")\n  .get()\n  .addHeader(\"accept\", \"application/json\")\n  .addHeader(\"authorization\", \"Bearer MY_TOKEN\")\n  .build();\n\nResponse response = client.newCall(request).execute();"}]
      description: "Retrieve a list of tags for the authenticated workspace."
      tags:
        - "Tags"
      security:
        - token: []
      parameters:
        - in: "query"
          name: "sortBy"
          description: "The field to sort the tags by."
          schema:
            type: "string"
            enum:
              - "name"
              - "createdAt"
            default: "name"
            description: "The field to sort the tags by."
        - in: "query"
          name: "sortOrder"
          description: "The order to sort the tags by."
          schema:
            type: "string"
            enum:
              - "asc"
              - "desc"
            default: "asc"
            description: "The order to sort the tags by."
        - in: "query"
          name: "search"
          description: "The search term to filter the tags by."
          schema:
            type: "string"
            description: "The search term to filter the tags by."
        - in: "query"
          name: "ids"
          description: "IDs of tags to filter by."
          schema:
            anyOf:
              - type: "string"
              - type: "array"
                items:
                  type: "string"
            description: "IDs of tags to filter by."
        - in: "query"
          name: "page"
          description: "The page number for pagination."
          schema:
            type: "number"
            minimum: 0
            exclusiveMinimum: true
            default: 1
            description: "The page number for pagination."
            example: 1
        - in: "query"
          name: "pageSize"
          description: "The number of items per page."
          schema:
            type: "number"
            minimum: 0
            exclusiveMinimum: true
            maximum: 100
            default: 100
            description: "The number of items per page."
            example: 50
      responses:
        "200":
          description: "A list of tags"
          content:
            "application/json":
              schema:
                type: "array"
                items: {"$ref": "#/components/schemas/TagSchema"}
        "400": {"$ref": "#/components/responses/400"}
        "401": {"$ref": "#/components/responses/401"}
        "403": {"$ref": "#/components/responses/403"}
        "404": {"$ref": "#/components/responses/404"}
        "409": {"$ref": "#/components/responses/409"}
        "410": {"$ref": "#/components/responses/410"}
        "422": {"$ref": "#/components/responses/422"}
        "429": {"$ref": "#/components/responses/429"}
        "500": {"$ref": "#/components/responses/500"}
  "/tags/{id}":
    patch:
      operationId: "updateTag"
      x-speakeasy-name-override: "update"
      x-speakeasy-max-method-params: 2
      summary: "Update a tag"
      x-codeSamples: [{"lang": "typescript", "label": "updateTag", "source": "import { Dub } from \"dub\";\n\nconst dub = new Dub({\n  token: \"DUB_API_KEY\",\n});\n\nasync function run() {\n  const result = await dub.tags.update(\"<id>\");\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"}, {"lang": "go", "label": "updateTag", "source": "package main\n\nimport(\n\t\"context\"\n\tdubgo \"github.com/dubinc/dub-go\"\n\t\"log\"\n)\n\nfunc main() {\n    ctx := context.Background()\n    \n    s := dubgo.New(\n        dubgo.WithSecurity(\"DUB_API_KEY\"),\n    )\n\n    res, err := s.Tags.Update(ctx, \"<id>\", nil)\n    if err != nil {\n        log.Fatal(err)\n    }\n    if res != nil {\n        // handle response\n    }\n}"}, {"lang": "ruby", "label": "updateTag", "source": "require 'dub'\n\n\ns = ::OpenApiSDK::Dub.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    token: \"DUB_API_KEY\",\n  )\n)\n\n    \nres = s.tags.update(id=\"<id>\", request_body=::OpenApiSDK::Operations::UpdateTagRequestBody.new())\n\nif ! res.tag_schema.nil?\n  # handle response\nend"}, {"lang": "php", "label": "updateTag", "source": "declare(strict_types=1);\n\nrequire 'vendor/autoload.php';\n\nuse Dub;\nuse Dub\\Models\\Operations;\n\n$sdk = Dub\\Dub::builder()\n    ->setSecurity(\n        'DUB_API_KEY'\n    )\n    ->build();\n\n$requestBody = new Operations\\UpdateTagRequestBody();\n\n$response = $sdk->tags->update(\n    id: '<id>',\n    requestBody: $requestBody\n\n);\n\nif ($response->tagSchema !== null) {\n    // handle response\n}"}, {lang: python, label: updateTag, source: "from dub import Dub\n\nwith Dub(\n    token=\"DUB_API_KEY\",\n) as dub:\n\n    res = dub.tags.update(id=\"<id>\")\n\n    assert res is not None\n\n    # Handle response\n    print(res)"}, {"lang": "java", "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"name\\\":\\\"string\\\",\\\"color\\\":\\\"red\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.dub.co/tags/id\")\n  .patch(body)\n  .addHeader(\"accept\", \"application/json\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"authorization\", \"Bearer MY_TOKEN\")\n  .build();\n\nResponse response = client.newCall(request).execute();"}]
      description: "Update a tag in the workspace."
      tags:
        - "Tags"
      security:
        - token: []
      parameters:
        - in: "path"
          name: "id"
          description: "The ID of the tag to update."
          schema:
            type: "string"
            description: "The ID of the tag to update."
          required: true
      requestBody:
        content:
          "application/json":
            schema:
              type: "object"
              properties:
                "name":
                  type: "string"
                  minLength: 1
                  maxLength: 50
                  description: "The name of the tag to create."
                "color":
                  type: "string"
                  enum:
                    - "red"
                    - "yellow"
                    - "green"
                    - "blue"
                    - "purple"
                    - "pink"
                    - "brown"
                  description: "The color of the tag. If not provided, a random color will be used from the list: red, yellow, green, blue, purple, pink, brown."
                "tag":
                  type: "string"
                  minLength: 1
                  description: "The name of the tag to create."
                  deprecated: true
      responses:
        "200":
          description: "The updated tag."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/TagSchema"}
        "400": {"$ref": "#/components/responses/400"}
        "401": {"$ref": "#/components/responses/401"}
        "403": {"$ref": "#/components/responses/403"}
        "404": {"$ref": "#/components/responses/404"}
        "409": {"$ref": "#/components/responses/409"}
        "410": {"$ref": "#/components/responses/410"}
        "422": {"$ref": "#/components/responses/422"}
        "429": {"$ref": "#/components/responses/429"}
        "500": {"$ref": "#/components/responses/500"}
    delete:
      operationId: "deleteTag"
      x-speakeasy-name-override: "delete"
      x-speakeasy-max-method-params: 1
      summary: "Delete a tag"
      x-codeSamples: [{"lang": "typescript", "label": "deleteTag", "source": "import { Dub } from \"dub\";\n\nconst dub = new Dub({\n  token: \"DUB_API_KEY\",\n});\n\nasync function run() {\n  const result = await dub.tags.delete(\"<id>\");\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"}, {"lang": "go", "label": "deleteTag", "source": "package main\n\nimport(\n\t\"context\"\n\tdubgo \"github.com/dubinc/dub-go\"\n\t\"log\"\n)\n\nfunc main() {\n    ctx := context.Background()\n    \n    s := dubgo.New(\n        dubgo.WithSecurity(\"DUB_API_KEY\"),\n    )\n\n    res, err := s.Tags.Delete(ctx, \"<id>\")\n    if err != nil {\n        log.Fatal(err)\n    }\n    if res != nil {\n        // handle response\n    }\n}"}, {"lang": "ruby", "label": "deleteTag", "source": "require 'dub'\n\n\ns = ::OpenApiSDK::Dub.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    token: \"DUB_API_KEY\",\n  )\n)\n\n    \nres = s.tags.delete(id=\"<id>\")\n\nif ! res.object.nil?\n  # handle response\nend"}, {"lang": "php", "label": "deleteTag", "source": "declare(strict_types=1);\n\nrequire 'vendor/autoload.php';\n\nuse Dub;\n\n$sdk = Dub\\Dub::builder()\n    ->setSecurity(\n        'DUB_API_KEY'\n    )\n    ->build();\n\n\n\n$response = $sdk->tags->delete(\n    id: '<id>'\n);\n\nif ($response->object !== null) {\n    // handle response\n}"}, {lang: python, label: deleteTag, source: "from dub import Dub\n\nwith Dub(\n    token=\"DUB_API_KEY\",\n) as dub:\n\n    res = dub.tags.delete(id=\"<id>\")\n\n    assert res is not None\n\n    # Handle response\n    print(res)"}, {"lang": "java", "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.dub.co/tags/id\")\n  .delete(null)\n  .addHeader(\"accept\", \"application/json\")\n  .addHeader(\"authorization\", \"Bearer MY_TOKEN\")\n  .build();\n\nResponse response = client.newCall(request).execute();"}]
      description: "Delete a tag from the workspace. All existing links will still work, but they will no longer be associated with this tag."
      tags:
        - "Tags"
      security:
        - token: []
      parameters:
        - in: "path"
          name: "id"
          description: "The ID of the tag to delete."
          schema:
            type: "string"
            description: "The ID of the tag to delete."
          required: true
      responses:
        "200":
          description: "The deleted tag ID."
          content:
            "application/json":
              schema:
                type: "object"
                properties:
                  "id":
                    type: "string"
                    description: "The ID of the deleted tag."
                required:
                  - "id"
        "400": {"$ref": "#/components/responses/400"}
        "401": {"$ref": "#/components/responses/401"}
        "403": {"$ref": "#/components/responses/403"}
        "404": {"$ref": "#/components/responses/404"}
        "409": {"$ref": "#/components/responses/409"}
        "410": {"$ref": "#/components/responses/410"}
        "422": {"$ref": "#/components/responses/422"}
        "429": {"$ref": "#/components/responses/429"}
        "500": {"$ref": "#/components/responses/500"}
  "/domains":
    post:
      operationId: "createDomain"
      x-speakeasy-name-override: "create"
      summary: "Create a domain"
      x-codeSamples: [{"lang": "typescript", "label": "createDomain", "source": "import { Dub } from \"dub\";\n\nconst dub = new Dub({\n  token: \"DUB_API_KEY\",\n});\n\nasync function run() {\n  const result = await dub.domains.create();\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"}, {"lang": "go", "label": "createDomain", "source": "package main\n\nimport(\n\t\"context\"\n\tdubgo \"github.com/dubinc/dub-go\"\n\t\"github.com/dubinc/dub-go/models/operations\"\n\t\"log\"\n)\n\nfunc main() {\n    ctx := context.Background()\n    \n    s := dubgo.New(\n        dubgo.WithSecurity(\"DUB_API_KEY\"),\n    )\n\n    res, err := s.Domains.Create(ctx, &operations.CreateDomainRequestBody{\n        Slug: \"acme.com\",\n        ExpiredURL: dubgo.String(\"https://acme.com/expired\"),\n        NotFoundURL: dubgo.String(\"https://acme.com/not-found\"),\n        Archived: dubgo.Bool(false),\n        Placeholder: dubgo.String(\"https://dub.co/help/article/what-is-dub\"),\n    })\n    if err != nil {\n        log.Fatal(err)\n    }\n    if res != nil {\n        // handle response\n    }\n}"}, {"lang": "ruby", "label": "createDomain", "source": "require 'dub'\n\n\ns = ::OpenApiSDK::Dub.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    token: \"DUB_API_KEY\",\n  )\n)\n\n\nreq = ::OpenApiSDK::Operations::CreateDomainRequestBody.new(\n  slug: \"acme.com\",\n  expired_url: \"https://acme.com/expired\",\n  not_found_url: \"https://acme.com/not-found\",\n  archived: false,\n  placeholder: \"https://dub.co/help/article/what-is-dub\",\n)\n    \nres = s.domains.create(req)\n\nif ! res.domain_schema.nil?\n  # handle response\nend"}, {"lang": "php", "label": "createDomain", "source": "declare(strict_types=1);\n\nrequire 'vendor/autoload.php';\n\nuse Dub;\nuse Dub\\Models\\Operations;\n\n$sdk = Dub\\Dub::builder()\n    ->setSecurity(\n        'DUB_API_KEY'\n    )\n    ->build();\n\n$request = new Operations\\CreateDomainRequestBody(\n    slug: 'acme.com',\n    expiredUrl: 'https://acme.com/expired',\n    notFoundUrl: 'https://acme.com/not-found',\n    archived: false,\n    placeholder: 'https://dub.co/help/article/what-is-dub',\n);\n\n$response = $sdk->domains->create(\n    request: $request\n);\n\nif ($response->domainSchema !== null) {\n    // handle response\n}"}, {lang: python, label: createDomain, source: "from dub import Dub\n\nwith Dub(\n    token=\"DUB_API_KEY\",\n) as dub:\n\n    res = dub.domains.create(request={\n        \"slug\": \"acme.com\",\n        \"expired_url\": \"https://acme.com/expired\",\n        \"not_found_url\": \"https://acme.com/not-found\",\n        \"archived\": False,\n        \"placeholder\": \"https://dub.co/help/article/what-is-dub\",\n    })\n\n    assert res is not None\n\n    # Handle response\n    print(res)"}, {"lang": "java", "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"slug\\\":\\\"acme.com\\\",\\\"expiredUrl\\\":\\\"https://acme.com/expired\\\",\\\"notFoundUrl\\\":\\\"https://acme.com/not-found\\\",\\\"archived\\\":false,\\\"placeholder\\\":\\\"https://dub.co/help/article/what-is-dub\\\",\\\"logo\\\":\\\"string\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.dub.co/domains\")\n  .post(body)\n  .addHeader(\"accept\", \"application/json\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"authorization\", \"Bearer MY_TOKEN\")\n  .build();\n\nResponse response = client.newCall(request).execute();"}]
      description: "Create a domain for the authenticated workspace."
      tags:
        - "Domains"
      security:
        - token: []
      requestBody:
        content:
          "application/json":
            schema:
              type: "object"
              properties:
                "slug":
                  type: "string"
                  minLength: 1
                  maxLength: 190
                  description: "Name of the domain."
                  example: "acme.com"
                "expiredUrl":
                  type: "string"
                  nullable: true
                  description: "Redirect users to a specific URL when any link under this domain has expired."
                  example: "https://acme.com/expired"
                "notFoundUrl":
                  type: "string"
                  nullable: true
                  description: "Redirect users to a specific URL when a link under this domain doesn't exist."
                  example: "https://acme.com/not-found"
                "archived":
                  type: "boolean"
                  default: false
                  description: "Whether to archive this domain. `false` will unarchive a previously archived domain."
                  example: false
                "placeholder":
                  type: "string"
                  nullable: true
                  maxLength: 100
                  description: "Provide context to your teammates in the link creation modal by showing them an example of a link to be shortened."
                  example: "https://dub.co/help/article/what-is-dub"
                "logo":
                  type: "string"
                  nullable: true
                  description: "The logo of the domain."
              required:
                - "slug"
      responses:
        "201":
          description: "The domain was created."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/DomainSchema"}
        "400": {"$ref": "#/components/responses/400"}
        "401": {"$ref": "#/components/responses/401"}
        "403": {"$ref": "#/components/responses/403"}
        "404": {"$ref": "#/components/responses/404"}
        "409": {"$ref": "#/components/responses/409"}
        "410": {"$ref": "#/components/responses/410"}
        "422": {"$ref": "#/components/responses/422"}
        "429": {"$ref": "#/components/responses/429"}
        "500": {"$ref": "#/components/responses/500"}
    get:
      operationId: "listDomains"
      x-speakeasy-name-override: "list"
      x-speakeasy-pagination: {"type": "offsetLimit", "inputs": [{"name": "page", "in": "parameters", "type": "page"}, {"name": "pageSize", "in": "parameters", "type": "limit"}], "outputs": {"results": "$"}}
      x-codeSamples: [{"lang": "typescript", "label": "listDomains", "source": "import { Dub } from \"dub\";\n\nconst dub = new Dub({\n  token: \"DUB_API_KEY\",\n});\n\nasync function run() {\n  const result = await dub.domains.list();\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"}, {"lang": "go", "label": "listDomains", "source": "package main\n\nimport(\n\t\"context\"\n\tdubgo \"github.com/dubinc/dub-go\"\n\t\"github.com/dubinc/dub-go/models/operations\"\n\t\"log\"\n)\n\nfunc main() {\n    ctx := context.Background()\n    \n    s := dubgo.New(\n        dubgo.WithSecurity(\"DUB_API_KEY\"),\n    )\n\n    res, err := s.Domains.List(ctx, operations.ListDomainsRequest{\n        Archived: dubgo.Bool(true),\n        Page: dubgo.Float64(1),\n        PageSize: dubgo.Float64(50),\n    })\n    if err != nil {\n        log.Fatal(err)\n    }\n    if res != nil {\n        for {\n            // handle items\n\n            res, err = res.Next()\n\n            if err != nil {\n                // handle error\n            }\n\n            if res == nil {\n                break\n            }\n        }\n    }\n}"}, {"lang": "ruby", "label": "listDomains", "source": "require 'dub'\n\n\ns = ::OpenApiSDK::Dub.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    token: \"DUB_API_KEY\",\n  )\n)\n\n\nreq = ::OpenApiSDK::Operations::ListDomainsRequest.new(\n  page: 1.0,\n  page_size: 50.0,\n)\n    \nres = s.domains.list(req)\n\nif ! res.domain_schemas.nil?\n  # handle response\nend"}, {"lang": "php", "label": "listDomains", "source": "declare(strict_types=1);\n\nrequire 'vendor/autoload.php';\n\nuse Dub;\n\n$sdk = Dub\\Dub::builder()\n    ->setSecurity(\n        'DUB_API_KEY'\n    )\n    ->build();\n\n\n\n$responses = $sdk->domains->list(\n    archived: true,\n    search: '<value>',\n    page: 1,\n    pageSize: 50\n\n);\n\n\nforeach ($responses as $response) {\n    if ($response->statusCode === 200) {\n        // handle response\n    }\n}"}, {lang: python, label: listDomains, source: "from dub import Dub\n\nwith Dub(\n    token=\"DUB_API_KEY\",\n) as dub:\n\n    res = dub.domains.list(request={\n        \"archived\": True,\n        \"page\": 1,\n        \"page_size\": 50,\n    })\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"}, {"lang": "java", "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.dub.co/domains\")\n  .get()\n  .addHeader(\"accept\", \"application/json\")\n  .addHeader(\"authorization\", \"Bearer MY_TOKEN\")\n  .build();\n\nResponse response = client.newCall(request).execute();"}]
      summary: "Retrieve a list of domains"
      description: "Retrieve a list of domains associated with the authenticated workspace."
      tags:
        - "Domains"
      security:
        - token: []
      parameters:
        - in: "query"
          name: "archived"
          description: "Whether to include archived domains in the response. Defaults to `false` if not provided."
          schema:
            type: "boolean"
            default: "false"
            description: "Whether to include archived domains in the response. Defaults to `false` if not provided."
        - in: "query"
          name: "search"
          description: "The search term to filter the domains by."
          schema:
            type: "string"
            description: "The search term to filter the domains by."
        - in: "query"
          name: "page"
          description: "The page number for pagination."
          schema:
            type: "number"
            minimum: 0
            exclusiveMinimum: true
            default: 1
            description: "The page number for pagination."
            example: 1
        - in: "query"
          name: "pageSize"
          description: "The number of items per page."
          schema:
            type: "number"
            minimum: 0
            exclusiveMinimum: true
            maximum: 50
            default: 50
            description: "The number of items per page."
            example: 50
      responses:
        "200":
          description: "The domains were retrieved."
          content:
            "application/json":
              schema:
                type: "array"
                items: {"$ref": "#/components/schemas/DomainSchema"}
        "400": {"$ref": "#/components/responses/400"}
        "401": {"$ref": "#/components/responses/401"}
        "403": {"$ref": "#/components/responses/403"}
        "404": {"$ref": "#/components/responses/404"}
        "409": {"$ref": "#/components/responses/409"}
        "410": {"$ref": "#/components/responses/410"}
        "422": {"$ref": "#/components/responses/422"}
        "429": {"$ref": "#/components/responses/429"}
        "500": {"$ref": "#/components/responses/500"}
  "/domains/{slug}":
    patch:
      operationId: "updateDomain"
      x-speakeasy-name-override: "update"
      x-speakeasy-max-method-params: 2
      summary: "Update a domain"
      x-codeSamples: [{"lang": "typescript", "label": "updateDomain", "source": "import { Dub } from \"dub\";\n\nconst dub = new Dub({\n  token: \"DUB_API_KEY\",\n});\n\nasync function run() {\n  const result = await dub.domains.update(\"acme.com\");\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"}, {"lang": "go", "label": "updateDomain", "source": "package main\n\nimport(\n\t\"context\"\n\tdubgo \"github.com/dubinc/dub-go\"\n\t\"github.com/dubinc/dub-go/models/operations\"\n\t\"log\"\n)\n\nfunc main() {\n    ctx := context.Background()\n    \n    s := dubgo.New(\n        dubgo.WithSecurity(\"DUB_API_KEY\"),\n    )\n\n    res, err := s.Domains.Update(ctx, \"acme.com\", &operations.UpdateDomainRequestBody{\n        Slug: dubgo.String(\"acme.com\"),\n        ExpiredURL: dubgo.String(\"https://acme.com/expired\"),\n        NotFoundURL: dubgo.String(\"https://acme.com/not-found\"),\n        Archived: dubgo.Bool(false),\n        Placeholder: dubgo.String(\"https://dub.co/help/article/what-is-dub\"),\n    })\n    if err != nil {\n        log.Fatal(err)\n    }\n    if res != nil {\n        // handle response\n    }\n}"}, {"lang": "ruby", "label": "updateDomain", "source": "require 'dub'\n\n\ns = ::OpenApiSDK::Dub.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    token: \"DUB_API_KEY\",\n  )\n)\n\n    \nres = s.domains.update(slug=\"acme.com\", request_body=::OpenApiSDK::Operations::UpdateDomainRequestBody.new(\n  slug: \"acme.com\",\n  expired_url: \"https://acme.com/expired\",\n  not_found_url: \"https://acme.com/not-found\",\n  archived: false,\n  placeholder: \"https://dub.co/help/article/what-is-dub\",\n))\n\nif ! res.domain_schema.nil?\n  # handle response\nend"}, {"lang": "php", "label": "updateDomain", "source": "declare(strict_types=1);\n\nrequire 'vendor/autoload.php';\n\nuse Dub;\nuse Dub\\Models\\Operations;\n\n$sdk = Dub\\Dub::builder()\n    ->setSecurity(\n        'DUB_API_KEY'\n    )\n    ->build();\n\n$requestBody = new Operations\\UpdateDomainRequestBody(\n    slug: 'acme.com',\n    expiredUrl: 'https://acme.com/expired',\n    notFoundUrl: 'https://acme.com/not-found',\n    archived: false,\n    placeholder: 'https://dub.co/help/article/what-is-dub',\n);\n\n$response = $sdk->domains->update(\n    slug: 'acme.com',\n    requestBody: $requestBody\n\n);\n\nif ($response->domainSchema !== null) {\n    // handle response\n}"}, {lang: python, label: updateDomain, source: "from dub import Dub\n\nwith Dub(\n    token=\"DUB_API_KEY\",\n) as dub:\n\n    res = dub.domains.update(slug=\"acme.com\", request_body={\n        \"slug\": \"acme.com\",\n        \"expired_url\": \"https://acme.com/expired\",\n        \"not_found_url\": \"https://acme.com/not-found\",\n        \"archived\": False,\n        \"placeholder\": \"https://dub.co/help/article/what-is-dub\",\n    })\n\n    assert res is not None\n\n    # Handle response\n    print(res)"}, {"lang": "java", "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"slug\\\":\\\"acme.com\\\",\\\"expiredUrl\\\":\\\"https://acme.com/expired\\\",\\\"notFoundUrl\\\":\\\"https://acme.com/not-found\\\",\\\"archived\\\":false,\\\"placeholder\\\":\\\"https://dub.co/help/article/what-is-dub\\\",\\\"logo\\\":\\\"string\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.dub.co/domains/slug\")\n  .patch(body)\n  .addHeader(\"accept\", \"application/json\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"authorization\", \"Bearer MY_TOKEN\")\n  .build();\n\nResponse response = client.newCall(request).execute();"}]
      description: "Update a domain for the authenticated workspace."
      tags:
        - "Domains"
      security:
        - token: []
      parameters:
        - in: "path"
          name: "slug"
          description: "The domain name."
          schema:
            type: "string"
            description: "The domain name."
            example: "acme.com"
          required: true
      requestBody:
        content:
          "application/json":
            schema:
              type: "object"
              properties:
                "slug":
                  type: "string"
                  minLength: 1
                  maxLength: 190
                  description: "Name of the domain."
                  example: "acme.com"
                "expiredUrl":
                  type: "string"
                  nullable: true
                  description: "Redirect users to a specific URL when any link under this domain has expired."
                  example: "https://acme.com/expired"
                "notFoundUrl":
                  type: "string"
                  nullable: true
                  description: "Redirect users to a specific URL when a link under this domain doesn't exist."
                  example: "https://acme.com/not-found"
                "archived":
                  type: "boolean"
                  default: false
                  description: "Whether to archive this domain. `false` will unarchive a previously archived domain."
                  example: false
                "placeholder":
                  type: "string"
                  nullable: true
                  maxLength: 100
                  description: "Provide context to your teammates in the link creation modal by showing them an example of a link to be shortened."
                  example: "https://dub.co/help/article/what-is-dub"
                "logo":
                  type: "string"
                  nullable: true
                  description: "The logo of the domain."
      responses:
        "200":
          description: "The domain was updated."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/DomainSchema"}
        "400": {"$ref": "#/components/responses/400"}
        "401": {"$ref": "#/components/responses/401"}
        "403": {"$ref": "#/components/responses/403"}
        "404": {"$ref": "#/components/responses/404"}
        "409": {"$ref": "#/components/responses/409"}
        "410": {"$ref": "#/components/responses/410"}
        "422": {"$ref": "#/components/responses/422"}
        "429": {"$ref": "#/components/responses/429"}
        "500": {"$ref": "#/components/responses/500"}
    delete:
      operationId: "deleteDomain"
      x-speakeasy-name-override: "delete"
      x-speakeasy-max-method-params: 1
      summary: "Delete a domain"
      x-codeSamples: [{"lang": "typescript", "label": "deleteDomain", "source": "import { Dub } from \"dub\";\n\nconst dub = new Dub({\n  token: \"DUB_API_KEY\",\n});\n\nasync function run() {\n  const result = await dub.domains.delete(\"acme.com\");\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"}, {"lang": "go", "label": "deleteDomain", "source": "package main\n\nimport(\n\t\"context\"\n\tdubgo \"github.com/dubinc/dub-go\"\n\t\"log\"\n)\n\nfunc main() {\n    ctx := context.Background()\n    \n    s := dubgo.New(\n        dubgo.WithSecurity(\"DUB_API_KEY\"),\n    )\n\n    res, err := s.Domains.Delete(ctx, \"acme.com\")\n    if err != nil {\n        log.Fatal(err)\n    }\n    if res != nil {\n        // handle response\n    }\n}"}, {"lang": "ruby", "label": "deleteDomain", "source": "require 'dub'\n\n\ns = ::OpenApiSDK::Dub.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    token: \"DUB_API_KEY\",\n  )\n)\n\n    \nres = s.domains.delete(slug=\"acme.com\")\n\nif ! res.object.nil?\n  # handle response\nend"}, {"lang": "php", "label": "deleteDomain", "source": "declare(strict_types=1);\n\nrequire 'vendor/autoload.php';\n\nuse Dub;\n\n$sdk = Dub\\Dub::builder()\n    ->setSecurity(\n        'DUB_API_KEY'\n    )\n    ->build();\n\n\n\n$response = $sdk->domains->delete(\n    slug: 'acme.com'\n);\n\nif ($response->object !== null) {\n    // handle response\n}"}, {lang: python, label: deleteDomain, source: "from dub import Dub\n\nwith Dub(\n    token=\"DUB_API_KEY\",\n) as dub:\n\n    res = dub.domains.delete(slug=\"acme.com\")\n\n    assert res is not None\n\n    # Handle response\n    print(res)"}, {"lang": "java", "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.dub.co/domains/slug\")\n  .delete(null)\n  .addHeader(\"accept\", \"application/json\")\n  .addHeader(\"authorization\", \"Bearer MY_TOKEN\")\n  .build();\n\nResponse response = client.newCall(request).execute();"}]
      description: "Delete a domain from a workspace. It cannot be undone. This will also delete all the links associated with the domain."
      tags:
        - "Domains"
      security:
        - token: []
      parameters:
        - in: "path"
          name: "slug"
          description: "The domain name."
          schema:
            type: "string"
            description: "The domain name."
            example: "acme.com"
          required: true
      responses:
        "200":
          description: "The domain was deleted."
          content:
            "application/json":
              schema:
                type: "object"
                properties:
                  "slug":
                    type: "string"
                    description: "The domain name."
                    example: "acme.com"
                required:
                  - "slug"
        "400": {"$ref": "#/components/responses/400"}
        "401": {"$ref": "#/components/responses/401"}
        "403": {"$ref": "#/components/responses/403"}
        "404": {"$ref": "#/components/responses/404"}
        "409": {"$ref": "#/components/responses/409"}
        "410": {"$ref": "#/components/responses/410"}
        "422": {"$ref": "#/components/responses/422"}
        "429": {"$ref": "#/components/responses/429"}
        "500": {"$ref": "#/components/responses/500"}
  "/track/lead":
    post:
      operationId: "trackLead"
      x-speakeasy-name-override: "lead"
      summary: "Track a lead"
      x-codeSamples: [{"lang": "typescript", "label": "trackLead", "source": "import { Dub } from \"dub\";\n\nconst dub = new Dub({\n  token: \"DUB_API_KEY\",\n});\n\nasync function run() {\n  const result = await dub.track.lead();\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"}, {"lang": "go", "label": "trackLead", "source": "package main\n\nimport(\n\t\"context\"\n\tdubgo \"github.com/dubinc/dub-go\"\n\t\"github.com/dubinc/dub-go/models/operations\"\n\t\"log\"\n)\n\nfunc main() {\n    ctx := context.Background()\n    \n    s := dubgo.New(\n        dubgo.WithSecurity(\"DUB_API_KEY\"),\n    )\n\n    res, err := s.Track.Lead(ctx, &operations.TrackLeadRequestBody{\n        ClickID: \"<id>\",\n        EventName: \"Sign up\",\n        ExternalID: dubgo.String(\"\"),\n        CustomerID: nil,\n        CustomerName: nil,\n        CustomerEmail: nil,\n        CustomerAvatar: nil,\n    })\n    if err != nil {\n        log.Fatal(err)\n    }\n    if res != nil {\n        // handle response\n    }\n}"}, {"lang": "ruby", "label": "trackLead", "source": "require 'dub'\n\n\ns = ::OpenApiSDK::Dub.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    token: \"DUB_API_KEY\",\n  )\n)\n\n\nreq = ::OpenApiSDK::Operations::TrackLeadRequestBody.new(\n  click_id: \"<id>\",\n  event_name: \"Sign up\",\n)\n    \nres = s.track.lead(req)\n\nif ! res.object.nil?\n  # handle response\nend"}, {"lang": "php", "label": "trackLead", "source": "declare(strict_types=1);\n\nrequire 'vendor/autoload.php';\n\nuse Dub;\nuse Dub\\Models\\Operations;\n\n$sdk = Dub\\Dub::builder()\n    ->setSecurity(\n        'DUB_API_KEY'\n    )\n    ->build();\n\n$request = new Operations\\TrackLeadRequestBody(\n    clickId: '<id>',\n    eventName: 'Sign up',\n);\n\n$response = $sdk->track->lead(\n    request: $request\n);\n\nif ($response->object !== null) {\n    // handle response\n}"}, {lang: python, label: trackLead, source: "from dub import Dub\n\nwith Dub(\n    token=\"DUB_API_KEY\",\n) as dub:\n\n    res = dub.track.lead(request={\n        \"click_id\": \"<id>\",\n        \"event_name\": \"Sign up\",\n        \"external_id\": \"\",\n        \"customer_id\": None,\n        \"customer_name\": None,\n        \"customer_email\": None,\n        \"customer_avatar\": None,\n    })\n\n    assert res is not None\n\n    # Handle response\n    print(res)"}, {"lang": "java", "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"clickId\\\":\\\"string\\\",\\\"eventName\\\":\\\"Sign up\\\",\\\"externalId\\\":\\\"\\\",\\\"customerName\\\":\\\"string\\\",\\\"customerEmail\\\":\\\"user@example.com\\\",\\\"customerAvatar\\\":\\\"string\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.dub.co/track/lead\")\n  .post(body)\n  .addHeader(\"accept\", \"application/json\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"authorization\", \"Bearer MY_TOKEN\")\n  .build();\n\nResponse response = client.newCall(request).execute();"}]
      description: "Track a lead for a short link."
      tags:
        - "Track"
      security:
        - token: []
      requestBody:
        content:
          "application/json":
            schema:
              type: "object"
              properties:
                "clickId":
                  type: "string"
                  minLength: 1
                  description: "The ID of the click in th Dub. You can read this value from `dub_id` cookie."
                "eventName":
                  type: "string"
                  minLength: 1
                  maxLength: 50
                  description: "The name of the event to track."
                  example: "Sign up"
                "externalId":
                  type: "string"
                  maxLength: 100
                  default: ""
                  description: "This is the unique identifier for the customer in the client's app. This is used to track the customer's journey."
                "customerId":
                  type: "string"
                  nullable: true
                  maxLength: 100
                  default:
                  description: "This is the unique identifier for the customer in the client's app. This is used to track the customer's journey."
                  deprecated: true
                "customerName":
                  type: "string"
                  nullable: true
                  maxLength: 100
                  default:
                  description: "Name of the customer in the client's app."
                "customerEmail":
                  type: "string"
                  nullable: true
                  format: "email"
                  maxLength: 100
                  default:
                  description: "Email of the customer in the client's app."
                "customerAvatar":
                  type: "string"
                  nullable: true
                  default:
                  description: "Avatar of the customer in the client's app."
                "metadata":
                  type: "object"
                  nullable: true
                  additionalProperties: {}
                  default:
                  description: "Additional metadata to be stored with the lead event"
              required:
                - "clickId"
                - "eventName"
      responses:
        "200":
          description: "A lead was tracked."
          content:
            "application/json":
              schema:
                type: "object"
                properties:
                  "click":
                    type: "object"
                    properties:
                      "id":
                        type: "string"
                    required:
                      - "id"
                  "customer":
                    type: "object"
                    properties:
                      "name":
                        type: "string"
                        nullable: true
                      "email":
                        type: "string"
                        nullable: true
                      "avatar":
                        type: "string"
                        nullable: true
                      "externalId":
                        type: "string"
                        nullable: true
                    required:
                      - "name"
                      - "email"
                      - "avatar"
                      - "externalId"
                required:
                  - "click"
                  - "customer"
        "400": {"$ref": "#/components/responses/400"}
        "401": {"$ref": "#/components/responses/401"}
        "403": {"$ref": "#/components/responses/403"}
        "404": {"$ref": "#/components/responses/404"}
        "409": {"$ref": "#/components/responses/409"}
        "410": {"$ref": "#/components/responses/410"}
        "422": {"$ref": "#/components/responses/422"}
        "429": {"$ref": "#/components/responses/429"}
        "500": {"$ref": "#/components/responses/500"}
  "/track/sale":
    post:
      operationId: "trackSale"
      x-speakeasy-name-override: "sale"
      summary: "Track a sale"
      x-codeSamples: [{"lang": "typescript", "label": "trackSale", "source": "import { Dub } from \"dub\";\n\nconst dub = new Dub({\n  token: \"DUB_API_KEY\",\n});\n\nasync function run() {\n  const result = await dub.track.sale();\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"}, {"lang": "go", "label": "trackSale", "source": "package main\n\nimport(\n\t\"context\"\n\tdubgo \"github.com/dubinc/dub-go\"\n\t\"github.com/dubinc/dub-go/models/operations\"\n\t\"log\"\n)\n\nfunc main() {\n    ctx := context.Background()\n    \n    s := dubgo.New(\n        dubgo.WithSecurity(\"DUB_API_KEY\"),\n    )\n\n    res, err := s.Track.Sale(ctx, &operations.TrackSaleRequestBody{\n        ExternalID: dubgo.String(\"\"),\n        CustomerID: nil,\n        Amount: 996500,\n        PaymentProcessor: operations.PaymentProcessorPaddle,\n        EventName: dubgo.String(\"Purchase\"),\n        InvoiceID: nil,\n        Currency: dubgo.String(\"usd\"),\n    })\n    if err != nil {\n        log.Fatal(err)\n    }\n    if res != nil {\n        // handle response\n    }\n}"}, {"lang": "ruby", "label": "trackSale", "source": "require 'dub'\n\n\ns = ::OpenApiSDK::Dub.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    token: \"DUB_API_KEY\",\n  )\n)\n\n\nreq = ::OpenApiSDK::Operations::TrackSaleRequestBody.new(\n  amount: 996500,\n  payment_processor: ::OpenApiSDK::Operations::PaymentProcessor::PADDLE,\n  event_name: \"Purchase\",\n)\n    \nres = s.track.sale(req)\n\nif ! res.object.nil?\n  # handle response\nend"}, {"lang": "php", "label": "trackSale", "source": "declare(strict_types=1);\n\nrequire 'vendor/autoload.php';\n\nuse Dub;\nuse Dub\\Models\\Operations;\n\n$sdk = Dub\\Dub::builder()\n    ->setSecurity(\n        'DUB_API_KEY'\n    )\n    ->build();\n\n$request = new Operations\\TrackSaleRequestBody(\n    amount: 996500,\n    paymentProcessor: Operations\\PaymentProcessor::Paddle,\n    eventName: 'Purchase',\n);\n\n$response = $sdk->track->sale(\n    request: $request\n);\n\nif ($response->object !== null) {\n    // handle response\n}"}, {lang: python, label: trackSale, source: "from dub import Dub\nfrom dub.models import operations\n\nwith Dub(\n    token=\"DUB_API_KEY\",\n) as dub:\n\n    res = dub.track.sale(request={\n        \"external_id\": \"\",\n        \"customer_id\": None,\n        \"amount\": 996500,\n        \"payment_processor\": operations.PaymentProcessor.PADDLE,\n        \"event_name\": \"Purchase\",\n        \"invoice_id\": None,\n        \"currency\": \"usd\",\n    })\n\n    assert res is not None\n\n    # Handle response\n    print(res)"}, {"lang": "java", "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"externalId\\\":\\\"\\\",\\\"amount\\\":0,\\\"paymentProcessor\\\":\\\"stripe\\\",\\\"eventName\\\":\\\"Purchase\\\",\\\"invoiceId\\\":\\\"string\\\",\\\"currency\\\":\\\"usd\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.dub.co/track/sale\")\n  .post(body)\n  .addHeader(\"accept\", \"application/json\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"authorization\", \"Bearer MY_TOKEN\")\n  .build();\n\nResponse response = client.newCall(request).execute();"}]
      description: "Track a sale for a short link."
      tags:
        - "Track"
      security:
        - token: []
      requestBody:
        content:
          "application/json":
            schema:
              type: "object"
              properties:
                "externalId":
                  type: "string"
                  maxLength: 100
                  default: ""
                  description: "This is the unique identifier for the customer in the client's app. This is used to track the customer's journey."
                "customerId":
                  type: "string"
                  nullable: true
                  maxLength: 100
                  default:
                  description: "This is the unique identifier for the customer in the client's app. This is used to track the customer's journey."
                  deprecated: true
                "amount":
                  type: "integer"
                  minimum: 0
                  description: "The amount of the sale. Should be passed in cents."
                "paymentProcessor":
                  type: "string"
                  enum:
                    - "stripe"
                    - "shopify"
                    - "paddle"
                  description: "The payment processor via which the sale was made."
                "eventName":
                  type: "string"
                  maxLength: 50
                  default: "Purchase"
                  description: "The name of the sale event. It can be used to track different types of event for example 'Purchase', 'Upgrade', 'Payment', etc."
                  example: "Purchase"
                "invoiceId":
                  type: "string"
                  nullable: true
                  default:
                  description: "The invoice ID of the sale."
                "currency":
                  type: "string"
                  default: "usd"
                  description: "The currency of the sale. Accepts ISO 4217 currency codes."
                "metadata":
                  type: "object"
                  nullable: true
                  additionalProperties: {}
                  default:
                  description: "Additional metadata to be stored with the sale event."
              required:
                - "amount"
                - "paymentProcessor"
      responses:
        "200":
          description: "A sale was tracked."
          content:
            "application/json":
              schema:
                type: "object"
                properties:
                  "eventName":
                    type: "string"
                  "customer":
                    type: "object"
                    nullable: true
                    properties:
                      "id":
                        type: "string"
                      "name":
                        type: "string"
                        nullable: true
                      "email":
                        type: "string"
                        nullable: true
                      "avatar":
                        type: "string"
                        nullable: true
                      "externalId":
                        type: "string"
                        nullable: true
                    required:
                      - "id"
                      - "name"
                      - "email"
                      - "avatar"
                      - "externalId"
                  "sale":
                    type: "object"
                    nullable: true
                    properties:
                      "amount":
                        type: "number"
                      "currency":
                        type: "string"
                      "paymentProcessor":
                        type: "string"
                      "invoiceId":
                        type: "string"
                        nullable: true
                      "metadata":
                        type: "object"
                        nullable: true
                        additionalProperties: {}
                    required:
                      - "amount"
                      - "currency"
                      - "paymentProcessor"
                      - "invoiceId"
                      - "metadata"
                required:
                  - "eventName"
                  - "customer"
                  - "sale"
        "400": {"$ref": "#/components/responses/400"}
        "401": {"$ref": "#/components/responses/401"}
        "403": {"$ref": "#/components/responses/403"}
        "404": {"$ref": "#/components/responses/404"}
        "409": {"$ref": "#/components/responses/409"}
        "410": {"$ref": "#/components/responses/410"}
        "422": {"$ref": "#/components/responses/422"}
        "429": {"$ref": "#/components/responses/429"}
        "500": {"$ref": "#/components/responses/500"}
  "/customers":
    get:
      operationId: "getCustomers"
      x-speakeasy-name-override: "list"
      summary: "Retrieve a list of customers"
      x-codeSamples: [{"lang": "typescript", "label": "getCustomers", "source": "import { Dub } from \"dub\";\n\nconst dub = new Dub({\n  token: \"DUB_API_KEY\",\n});\n\nasync function run() {\n  const result = await dub.customers.list();\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"}, {"lang": "go", "label": "getCustomers", "source": "package main\n\nimport(\n\t\"context\"\n\tdubgo \"github.com/dubinc/dub-go\"\n\t\"github.com/dubinc/dub-go/models/operations\"\n\t\"log\"\n)\n\nfunc main() {\n    ctx := context.Background()\n    \n    s := dubgo.New(\n        dubgo.WithSecurity(\"DUB_API_KEY\"),\n    )\n\n    res, err := s.Customers.List(ctx, operations.GetCustomersRequest{})\n    if err != nil {\n        log.Fatal(err)\n    }\n    if res != nil {\n        // handle response\n    }\n}"}, {"lang": "ruby", "label": "getCustomers", "source": "require 'dub'\n\n\ns = ::OpenApiSDK::Dub.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    token: \"DUB_API_KEY\",\n  )\n)\n\n\nreq = ::OpenApiSDK::Operations::GetCustomersRequest.new()\n    \nres = s.customers.list(req)\n\nif ! res.response_bodies.nil?\n  # handle response\nend"}, {"lang": "php", "label": "getCustomers", "source": "declare(strict_types=1);\n\nrequire 'vendor/autoload.php';\n\nuse Dub;\n\n$sdk = Dub\\Dub::builder()\n    ->setSecurity(\n        'DUB_API_KEY'\n    )\n    ->build();\n\n\n\n$response = $sdk->customers->list(\n    email: 'Kassandra.Daugherty@hotmail.com',\n    externalId: '<id>',\n    includeExpandedFields: false\n\n);\n\nif ($response->responseBodies !== null) {\n    // handle response\n}"}, {lang: python, label: getCustomers, source: "from dub import Dub\n\nwith Dub(\n    token=\"DUB_API_KEY\",\n) as dub:\n\n    res = dub.customers.list(request={})\n\n    assert res is not None\n\n    # Handle response\n    print(res)"}, {"lang": "java", "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.dub.co/customers\")\n  .get()\n  .addHeader(\"accept\", \"application/json\")\n  .addHeader(\"authorization\", \"Bearer MY_TOKEN\")\n  .build();\n\nResponse response = client.newCall(request).execute();"}]
      description: "Retrieve a list of customers for the authenticated workspace."
      tags:
        - "Customers"
      security:
        - token: []
      parameters:
        - in: "query"
          name: "email"
          description: "A case-sensitive filter on the list based on the customer's `email` field. The value must be a string."
          schema:
            type: "string"
            description: "A case-sensitive filter on the list based on the customer's `email` field. The value must be a string."
        - in: "query"
          name: "externalId"
          description: "A case-sensitive filter on the list based on the customer's `externalId` field. The value must be a string."
          schema:
            type: "string"
            description: "A case-sensitive filter on the list based on the customer's `externalId` field. The value must be a string."
        - in: "query"
          name: "includeExpandedFields"
          description: "Whether to include expanded fields on the customer (`link`, `partner`, `discount`)."
          schema:
            type: "boolean"
            description: "Whether to include expanded fields on the customer (`link`, `partner`, `discount`)."
      responses:
        "200":
          description: "The list of customers."
          content:
            "application/json":
              schema:
                type: "array"
                items:
                  type: "object"
                  properties:
                    "id":
                      type: "string"
                      description: "The unique identifier of the customer in Dub."
                    "externalId":
                      type: "string"
                      description: "Unique identifier for the customer in the client's app."
                    "name":
                      type: "string"
                      description: "Name of the customer."
                    "email":
                      type: "string"
                      nullable: true
                      description: "Email of the customer."
                    "avatar":
                      type: "string"
                      nullable: true
                      description: "Avatar URL of the customer."
                    "country":
                      type: "string"
                      nullable: true
                      description: "Country of the customer."
                    "createdAt":
                      type: "string"
                      description: "The date the customer was created."
                    "link":
                      type: "object"
                      nullable: true
                      properties:
                        "id":
                          type: "string"
                          description: "The unique ID of the short link."
                        "domain":
                          type: "string"
                          description: "The domain of the short link. If not provided, the primary domain for the workspace will be used (or `dub.sh` if the workspace has no domains)."
                        "key":
                          type: "string"
                          description: "The short link slug. If not provided, a random 7-character slug will be generated."
                        "shortLink":
                          type: "string"
                          format: "uri"
                          description: "The full URL of the short link, including the https protocol (e.g. `https://dub.sh/try`)."
                        "programId":
                          type: "string"
                          nullable: true
                          description: "The ID of the program the short link is associated with."
                      required:
                        - "id"
                        - "domain"
                        - "key"
                        - "shortLink"
                        - "programId"
                    "partner":
                      type: "object"
                      nullable: true
                      properties:
                        "id":
                          type: "string"
                        "name":
                          type: "string"
                        "email":
                          type: "string"
                        "image":
                          type: "string"
                          nullable: true
                      required:
                        - "id"
                        - "name"
                        - "email"
                    "discount":
                      type: "object"
                      nullable: true
                      properties:
                        "id":
                          type: "string"
                        "couponId":
                          type: "string"
                          nullable: true
                        "couponTestId":
                          type: "string"
                          nullable: true
                        "amount":
                          type: "number"
                        "type":
                          type: "string"
                          enum:
                            - "percentage"
                            - "flat"
                        "duration":
                          type: "number"
                          nullable: true
                        "interval":
                          type: "string"
                          nullable: true
                          enum:
                            - "month"
                            - "year"
                            - null
                      required:
                        - "id"
                        - "couponId"
                        - "couponTestId"
                        - "amount"
                        - "type"
                        - "duration"
                        - "interval"
                  required:
                    - "id"
                    - "externalId"
                    - "name"
                    - "createdAt"
        "400": {"$ref": "#/components/responses/400"}
        "401": {"$ref": "#/components/responses/401"}
        "403": {"$ref": "#/components/responses/403"}
        "404": {"$ref": "#/components/responses/404"}
        "409": {"$ref": "#/components/responses/409"}
        "410": {"$ref": "#/components/responses/410"}
        "422": {"$ref": "#/components/responses/422"}
        "429": {"$ref": "#/components/responses/429"}
        "500": {"$ref": "#/components/responses/500"}
    post:
      operationId: "createCustomer"
      x-speakeasy-name-override: "create"
      summary: "Create a customer"
      description: "[Deprecated]: Customer creation can only be done via tracking a lead event. Use the /track/lead endpoint instead."
      deprecated: true
      tags:
        - "Customers"
      security:
        - token: []
      requestBody:
        content:
          "application/json":
            schema:
              type: "object"
              properties:
                "email":
                  type: "string"
                  nullable: true
                  format: "email"
                  description: "Email of the customer in the client's app."
                "name":
                  type: "string"
                  nullable: true
                  description: "Name of the customer in the client's app. If not provided, a random name will be generated."
                "avatar":
                  type: "string"
                  nullable: true
                  format: "uri"
                  description: "Avatar URL of the customer in the client's app."
                "externalId":
                  type: "string"
                  description: "Unique identifier for the customer in the client's app."
              required:
                - "externalId"
      responses:
        "201":
          description: "The customer was created."
          content:
            "application/json":
              schema:
                type: "object"
                properties:
                  "id":
                    type: "string"
                    description: "The unique identifier of the customer in Dub."
                  "externalId":
                    type: "string"
                    description: "Unique identifier for the customer in the client's app."
                  "name":
                    type: "string"
                    description: "Name of the customer."
                  "email":
                    type: "string"
                    nullable: true
                    description: "Email of the customer."
                  "avatar":
                    type: "string"
                    nullable: true
                    description: "Avatar URL of the customer."
                  "country":
                    type: "string"
                    nullable: true
                    description: "Country of the customer."
                  "createdAt":
                    type: "string"
                    description: "The date the customer was created."
                  "link":
                    type: "object"
                    nullable: true
                    properties:
                      "id":
                        type: "string"
                        description: "The unique ID of the short link."
                      "domain":
                        type: "string"
                        description: "The domain of the short link. If not provided, the primary domain for the workspace will be used (or `dub.sh` if the workspace has no domains)."
                      "key":
                        type: "string"
                        description: "The short link slug. If not provided, a random 7-character slug will be generated."
                      "shortLink":
                        type: "string"
                        format: "uri"
                        description: "The full URL of the short link, including the https protocol (e.g. `https://dub.sh/try`)."
                      "programId":
                        type: "string"
                        nullable: true
                        description: "The ID of the program the short link is associated with."
                    required:
                      - "id"
                      - "domain"
                      - "key"
                      - "shortLink"
                      - "programId"
                  "partner":
                    type: "object"
                    nullable: true
                    properties:
                      "id":
                        type: "string"
                      "name":
                        type: "string"
                      "email":
                        type: "string"
                      "image":
                        type: "string"
                        nullable: true
                    required:
                      - "id"
                      - "name"
                      - "email"
                  "discount":
                    type: "object"
                    nullable: true
                    properties:
                      "id":
                        type: "string"
                      "couponId":
                        type: "string"
                        nullable: true
                      "couponTestId":
                        type: "string"
                        nullable: true
                      "amount":
                        type: "number"
                      "type":
                        type: "string"
                        enum:
                          - "percentage"
                          - "flat"
                      "duration":
                        type: "number"
                        nullable: true
                      "interval":
                        type: "string"
                        nullable: true
                        enum:
                          - "month"
                          - "year"
                          - null
                    required:
                      - "id"
                      - "couponId"
                      - "couponTestId"
                      - "amount"
                      - "type"
                      - "duration"
                      - "interval"
                required:
                  - "id"
                  - "externalId"
                  - "name"
                  - "createdAt"
        "400": {"$ref": "#/components/responses/400"}
        "401": {"$ref": "#/components/responses/401"}
        "403": {"$ref": "#/components/responses/403"}
        "404": {"$ref": "#/components/responses/404"}
        "409": {"$ref": "#/components/responses/409"}
        "410": {"$ref": "#/components/responses/410"}
        "422": {"$ref": "#/components/responses/422"}
        "429": {"$ref": "#/components/responses/429"}
        "500": {"$ref": "#/components/responses/500"}
      "x-codeSamples": [{"lang": "java", "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"email\\\":\\\"user@example.com\\\",\\\"name\\\":\\\"string\\\",\\\"avatar\\\":\\\"string\\\",\\\"externalId\\\":\\\"string\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.dub.co/customers\")\n  .post(body)\n  .addHeader(\"accept\", \"application/json\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"authorization\", \"Bearer MY_TOKEN\")\n  .build();\n\nResponse response = client.newCall(request).execute();"}]
  "/customers/{id}":
    get:
      operationId: "getCustomer"
      x-speakeasy-name-override: "get"
      summary: "Retrieve a customer"
      x-codeSamples: [{"lang": "typescript", "label": "getCustomer", "source": "import { Dub } from \"dub\";\n\nconst dub = new Dub({\n  token: \"DUB_API_KEY\",\n});\n\nasync function run() {\n  const result = await dub.customers.get({\n    id: \"<id>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"}, {"lang": "go", "label": "getCustomer", "source": "package main\n\nimport(\n\t\"context\"\n\tdubgo \"github.com/dubinc/dub-go\"\n\t\"github.com/dubinc/dub-go/models/operations\"\n\t\"log\"\n)\n\nfunc main() {\n    ctx := context.Background()\n    \n    s := dubgo.New(\n        dubgo.WithSecurity(\"DUB_API_KEY\"),\n    )\n\n    res, err := s.Customers.Get(ctx, operations.GetCustomerRequest{\n        ID: \"<id>\",\n    })\n    if err != nil {\n        log.Fatal(err)\n    }\n    if res != nil {\n        // handle response\n    }\n}"}, {"lang": "ruby", "label": "getCustomer", "source": "require 'dub'\n\n\ns = ::OpenApiSDK::Dub.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    token: \"DUB_API_KEY\",\n  )\n)\n\n\nreq = ::OpenApiSDK::Operations::GetCustomerRequest.new(\n  id: \"<id>\",\n)\n    \nres = s.customers.get(req)\n\nif ! res.object.nil?\n  # handle response\nend"}, {"lang": "php", "label": "getCustomer", "source": "declare(strict_types=1);\n\nrequire 'vendor/autoload.php';\n\nuse Dub;\n\n$sdk = Dub\\Dub::builder()\n    ->setSecurity(\n        'DUB_API_KEY'\n    )\n    ->build();\n\n\n\n$response = $sdk->customers->get(\n    id: '<id>',\n    includeExpandedFields: false\n\n);\n\nif ($response->object !== null) {\n    // handle response\n}"}, {lang: python, label: getCustomer, source: "from dub import Dub\n\nwith Dub(\n    token=\"DUB_API_KEY\",\n) as dub:\n\n    res = dub.customers.get(request={\n        \"id\": \"<id>\",\n    })\n\n    assert res is not None\n\n    # Handle response\n    print(res)"}, {"lang": "java", "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.dub.co/customers/id\")\n  .get()\n  .addHeader(\"accept\", \"application/json\")\n  .addHeader(\"authorization\", \"Bearer MY_TOKEN\")\n  .build();\n\nResponse response = client.newCall(request).execute();"}]
      description: "Retrieve a customer by ID for the authenticated workspace."
      tags:
        - "Customers"
      security:
        - token: []
      parameters:
        - in: "path"
          name: "id"
          description: "The unique identifier of the customer in Dub."
          schema:
            type: "string"
            description: "The unique identifier of the customer in Dub."
          required: true
        - in: "query"
          name: "includeExpandedFields"
          description: "Whether to include expanded fields on the customer (`link`, `partner`, `discount`)."
          schema:
            type: "boolean"
            description: "Whether to include expanded fields on the customer (`link`, `partner`, `discount`)."
      responses:
        "200":
          description: "The customer object."
          content:
            "application/json":
              schema:
                type: "object"
                properties:
                  "id":
                    type: "string"
                    description: "The unique identifier of the customer in Dub."
                  "externalId":
                    type: "string"
                    description: "Unique identifier for the customer in the client's app."
                  "name":
                    type: "string"
                    description: "Name of the customer."
                  "email":
                    type: "string"
                    nullable: true
                    description: "Email of the customer."
                  "avatar":
                    type: "string"
                    nullable: true
                    description: "Avatar URL of the customer."
                  "country":
                    type: "string"
                    nullable: true
                    description: "Country of the customer."
                  "createdAt":
                    type: "string"
                    description: "The date the customer was created."
                  "link":
                    type: "object"
                    nullable: true
                    properties:
                      "id":
                        type: "string"
                        description: "The unique ID of the short link."
                      "domain":
                        type: "string"
                        description: "The domain of the short link. If not provided, the primary domain for the workspace will be used (or `dub.sh` if the workspace has no domains)."
                      "key":
                        type: "string"
                        description: "The short link slug. If not provided, a random 7-character slug will be generated."
                      "shortLink":
                        type: "string"
                        format: "uri"
                        description: "The full URL of the short link, including the https protocol (e.g. `https://dub.sh/try`)."
                      "programId":
                        type: "string"
                        nullable: true
                        description: "The ID of the program the short link is associated with."
                    required:
                      - "id"
                      - "domain"
                      - "key"
                      - "shortLink"
                      - "programId"
                  "partner":
                    type: "object"
                    nullable: true
                    properties:
                      "id":
                        type: "string"
                      "name":
                        type: "string"
                      "email":
                        type: "string"
                      "image":
                        type: "string"
                        nullable: true
                    required:
                      - "id"
                      - "name"
                      - "email"
                  "discount":
                    type: "object"
                    nullable: true
                    properties:
                      "id":
                        type: "string"
                      "couponId":
                        type: "string"
                        nullable: true
                      "couponTestId":
                        type: "string"
                        nullable: true
                      "amount":
                        type: "number"
                      "type":
                        type: "string"
                        enum:
                          - "percentage"
                          - "flat"
                      "duration":
                        type: "number"
                        nullable: true
                      "interval":
                        type: "string"
                        nullable: true
                        enum:
                          - "month"
                          - "year"
                          - null
                    required:
                      - "id"
                      - "couponId"
                      - "couponTestId"
                      - "amount"
                      - "type"
                      - "duration"
                      - "interval"
                required:
                  - "id"
                  - "externalId"
                  - "name"
                  - "createdAt"
        "400": {"$ref": "#/components/responses/400"}
        "401": {"$ref": "#/components/responses/401"}
        "403": {"$ref": "#/components/responses/403"}
        "404": {"$ref": "#/components/responses/404"}
        "409": {"$ref": "#/components/responses/409"}
        "410": {"$ref": "#/components/responses/410"}
        "422": {"$ref": "#/components/responses/422"}
        "429": {"$ref": "#/components/responses/429"}
        "500": {"$ref": "#/components/responses/500"}
    patch:
      operationId: "updateCustomer"
      x-speakeasy-name-override: "update"
      x-speakeasy-max-method-params: 2
      summary: "Update a customer"
      x-codeSamples: [{"lang": "typescript", "label": "updateCustomer", "source": "import { Dub } from \"dub\";\n\nconst dub = new Dub({\n  token: \"DUB_API_KEY\",\n});\n\nasync function run() {\n  const result = await dub.customers.update({\n    id: \"<id>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"}, {"lang": "go", "label": "updateCustomer", "source": "package main\n\nimport(\n\t\"context\"\n\tdubgo \"github.com/dubinc/dub-go\"\n\t\"github.com/dubinc/dub-go/models/operations\"\n\t\"log\"\n)\n\nfunc main() {\n    ctx := context.Background()\n    \n    s := dubgo.New(\n        dubgo.WithSecurity(\"DUB_API_KEY\"),\n    )\n\n    res, err := s.Customers.Update(ctx, operations.UpdateCustomerRequest{\n        ID: \"<id>\",\n    })\n    if err != nil {\n        log.Fatal(err)\n    }\n    if res != nil {\n        // handle response\n    }\n}"}, {"lang": "ruby", "label": "updateCustomer", "source": "require 'dub'\n\n\ns = ::OpenApiSDK::Dub.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    token: \"DUB_API_KEY\",\n  )\n)\n\n\nreq = ::OpenApiSDK::Operations::UpdateCustomerRequest.new(\n  id: \"<id>\",\n)\n    \nres = s.customers.update(req)\n\nif ! res.object.nil?\n  # handle response\nend"}, {"lang": "php", "label": "updateCustomer", "source": "declare(strict_types=1);\n\nrequire 'vendor/autoload.php';\n\nuse Dub;\nuse Dub\\Models\\Operations;\n\n$sdk = Dub\\Dub::builder()\n    ->setSecurity(\n        'DUB_API_KEY'\n    )\n    ->build();\n\n$request = new Operations\\UpdateCustomerRequest(\n    id: '<id>',\n);\n\n$response = $sdk->customers->update(\n    request: $request\n);\n\nif ($response->object !== null) {\n    // handle response\n}"}, {lang: python, label: updateCustomer, source: "from dub import Dub\n\nwith Dub(\n    token=\"DUB_API_KEY\",\n) as dub:\n\n    res = dub.customers.update(request={\n        \"id\": \"<id>\",\n    })\n\n    assert res is not None\n\n    # Handle response\n    print(res)"}, {"lang": "java", "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"email\\\":\\\"user@example.com\\\",\\\"name\\\":\\\"string\\\",\\\"avatar\\\":\\\"string\\\",\\\"externalId\\\":\\\"string\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.dub.co/customers/id\")\n  .patch(body)\n  .addHeader(\"accept\", \"application/json\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"authorization\", \"Bearer MY_TOKEN\")\n  .build();\n\nResponse response = client.newCall(request).execute();"}]
      description: "Update a customer for the authenticated workspace."
      tags:
        - "Customers"
      security:
        - token: []
      parameters:
        - in: "path"
          name: "id"
          description: "The unique identifier of the customer in Dub."
          schema:
            type: "string"
            description: "The unique identifier of the customer in Dub."
          required: true
        - in: "query"
          name: "includeExpandedFields"
          description: "Whether to include expanded fields on the customer (`link`, `partner`, `discount`)."
          schema:
            type: "boolean"
            description: "Whether to include expanded fields on the customer (`link`, `partner`, `discount`)."
      requestBody:
        content:
          "application/json":
            schema:
              type: "object"
              properties:
                "email":
                  type: "string"
                  nullable: true
                  format: "email"
                  description: "Email of the customer in the client's app."
                "name":
                  type: "string"
                  nullable: true
                  description: "Name of the customer in the client's app. If not provided, a random name will be generated."
                "avatar":
                  type: "string"
                  nullable: true
                  format: "uri"
                  description: "Avatar URL of the customer in the client's app."
                "externalId":
                  type: "string"
                  description: "Unique identifier for the customer in the client's app."
      responses:
        "200":
          description: "The customer was updated."
          content:
            "application/json":
              schema:
                type: "object"
                properties:
                  "id":
                    type: "string"
                    description: "The unique identifier of the customer in Dub."
                  "externalId":
                    type: "string"
                    description: "Unique identifier for the customer in the client's app."
                  "name":
                    type: "string"
                    description: "Name of the customer."
                  "email":
                    type: "string"
                    nullable: true
                    description: "Email of the customer."
                  "avatar":
                    type: "string"
                    nullable: true
                    description: "Avatar URL of the customer."
                  "country":
                    type: "string"
                    nullable: true
                    description: "Country of the customer."
                  "createdAt":
                    type: "string"
                    description: "The date the customer was created."
                  "link":
                    type: "object"
                    nullable: true
                    properties:
                      "id":
                        type: "string"
                        description: "The unique ID of the short link."
                      "domain":
                        type: "string"
                        description: "The domain of the short link. If not provided, the primary domain for the workspace will be used (or `dub.sh` if the workspace has no domains)."
                      "key":
                        type: "string"
                        description: "The short link slug. If not provided, a random 7-character slug will be generated."
                      "shortLink":
                        type: "string"
                        format: "uri"
                        description: "The full URL of the short link, including the https protocol (e.g. `https://dub.sh/try`)."
                      "programId":
                        type: "string"
                        nullable: true
                        description: "The ID of the program the short link is associated with."
                    required:
                      - "id"
                      - "domain"
                      - "key"
                      - "shortLink"
                      - "programId"
                  "partner":
                    type: "object"
                    nullable: true
                    properties:
                      "id":
                        type: "string"
                      "name":
                        type: "string"
                      "email":
                        type: "string"
                      "image":
                        type: "string"
                        nullable: true
                    required:
                      - "id"
                      - "name"
                      - "email"
                  "discount":
                    type: "object"
                    nullable: true
                    properties:
                      "id":
                        type: "string"
                      "couponId":
                        type: "string"
                        nullable: true
                      "couponTestId":
                        type: "string"
                        nullable: true
                      "amount":
                        type: "number"
                      "type":
                        type: "string"
                        enum:
                          - "percentage"
                          - "flat"
                      "duration":
                        type: "number"
                        nullable: true
                      "interval":
                        type: "string"
                        nullable: true
                        enum:
                          - "month"
                          - "year"
                          - null
                    required:
                      - "id"
                      - "couponId"
                      - "couponTestId"
                      - "amount"
                      - "type"
                      - "duration"
                      - "interval"
                required:
                  - "id"
                  - "externalId"
                  - "name"
                  - "createdAt"
        "400": {"$ref": "#/components/responses/400"}
        "401": {"$ref": "#/components/responses/401"}
        "403": {"$ref": "#/components/responses/403"}
        "404": {"$ref": "#/components/responses/404"}
        "409": {"$ref": "#/components/responses/409"}
        "410": {"$ref": "#/components/responses/410"}
        "422": {"$ref": "#/components/responses/422"}
        "429": {"$ref": "#/components/responses/429"}
        "500": {"$ref": "#/components/responses/500"}
    delete:
      operationId: "deleteCustomer"
      x-speakeasy-name-override: "delete"
      x-speakeasy-max-method-params: 1
      summary: "Delete a customer"
      x-codeSamples: [{"lang": "typescript", "label": "deleteCustomer", "source": "import { Dub } from \"dub\";\n\nconst dub = new Dub({\n  token: \"DUB_API_KEY\",\n});\n\nasync function run() {\n  const result = await dub.customers.delete(\"<id>\");\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"}, {"lang": "go", "label": "deleteCustomer", "source": "package main\n\nimport(\n\t\"context\"\n\tdubgo \"github.com/dubinc/dub-go\"\n\t\"log\"\n)\n\nfunc main() {\n    ctx := context.Background()\n    \n    s := dubgo.New(\n        dubgo.WithSecurity(\"DUB_API_KEY\"),\n    )\n\n    res, err := s.Customers.Delete(ctx, \"<id>\")\n    if err != nil {\n        log.Fatal(err)\n    }\n    if res != nil {\n        // handle response\n    }\n}"}, {"lang": "ruby", "label": "deleteCustomer", "source": "require 'dub'\n\n\ns = ::OpenApiSDK::Dub.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    token: \"DUB_API_KEY\",\n  )\n)\n\n    \nres = s.customers.delete(id=\"<id>\")\n\nif ! res.object.nil?\n  # handle response\nend"}, {"lang": "php", "label": "deleteCustomer", "source": "declare(strict_types=1);\n\nrequire 'vendor/autoload.php';\n\nuse Dub;\n\n$sdk = Dub\\Dub::builder()\n    ->setSecurity(\n        'DUB_API_KEY'\n    )\n    ->build();\n\n\n\n$response = $sdk->customers->delete(\n    id: '<id>'\n);\n\nif ($response->object !== null) {\n    // handle response\n}"}, {lang: python, label: deleteCustomer, source: "from dub import Dub\n\nwith Dub(\n    token=\"DUB_API_KEY\",\n) as dub:\n\n    res = dub.customers.delete(id=\"<id>\")\n\n    assert res is not None\n\n    # Handle response\n    print(res)"}, {"lang": "java", "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.dub.co/customers/id\")\n  .delete(null)\n  .addHeader(\"accept\", \"application/json\")\n  .addHeader(\"authorization\", \"Bearer MY_TOKEN\")\n  .build();\n\nResponse response = client.newCall(request).execute();"}]
      description: "Delete a customer from a workspace."
      tags:
        - "Customers"
      security:
        - token: []
      parameters:
        - in: "path"
          name: "id"
          description: "The unique identifier of the customer in Dub."
          schema:
            type: "string"
            description: "The unique identifier of the customer in Dub."
          required: true
      responses:
        "200":
          description: "The customer was deleted."
          content:
            "application/json":
              schema:
                type: "object"
                properties:
                  "id":
                    type: "string"
                    description: "The unique identifier of the customer in Dub."
                required:
                  - "id"
        "400": {"$ref": "#/components/responses/400"}
        "401": {"$ref": "#/components/responses/401"}
        "403": {"$ref": "#/components/responses/403"}
        "404": {"$ref": "#/components/responses/404"}
        "409": {"$ref": "#/components/responses/409"}
        "410": {"$ref": "#/components/responses/410"}
        "422": {"$ref": "#/components/responses/422"}
        "429": {"$ref": "#/components/responses/429"}
        "500": {"$ref": "#/components/responses/500"}
  "/workspaces/{idOrSlug}":
    get:
      operationId: "getWorkspace"
      x-speakeasy-name-override: "get"
      summary: "Retrieve a workspace"
      x-codeSamples: [{"lang": "typescript", "label": "getWorkspace", "source": "import { Dub } from \"dub\";\n\nconst dub = new Dub({\n  token: \"DUB_API_KEY\",\n});\n\nasync function run() {\n  const result = await dub.workspaces.get({\n    idOrSlug: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"}, {"lang": "go", "label": "getWorkspace", "source": "package main\n\nimport(\n\t\"context\"\n\tdubgo \"github.com/dubinc/dub-go\"\n\t\"github.com/dubinc/dub-go/models/operations\"\n\t\"log\"\n)\n\nfunc main() {\n    ctx := context.Background()\n    \n    s := dubgo.New(\n        dubgo.WithSecurity(\"DUB_API_KEY\"),\n    )\n\n    res, err := s.Workspaces.Get(ctx, operations.GetWorkspaceRequest{\n        IDOrSlug: \"<value>\",\n    })\n    if err != nil {\n        log.Fatal(err)\n    }\n    if res != nil {\n        // handle response\n    }\n}"}, {"lang": "ruby", "label": "getWorkspace", "source": "require 'dub'\n\n\ns = ::OpenApiSDK::Dub.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    token: \"DUB_API_KEY\",\n  )\n)\n\n\nreq = ::OpenApiSDK::Operations::GetWorkspaceRequest.new(\n  id_or_slug: \"<value>\",\n)\n    \nres = s.workspaces.get(req)\n\nif ! res.workspace_schema.nil?\n  # handle response\nend"}, {"lang": "php", "label": "getWorkspace", "source": "declare(strict_types=1);\n\nrequire 'vendor/autoload.php';\n\nuse Dub;\n\n$sdk = Dub\\Dub::builder()\n    ->setSecurity(\n        'DUB_API_KEY'\n    )\n    ->build();\n\n\n\n$response = $sdk->workspaces->get(\n    idOrSlug: '<value>'\n);\n\nif ($response->workspaceSchema !== null) {\n    // handle response\n}"}, {lang: python, label: getWorkspace, source: "from dub import Dub\n\nwith Dub(\n    token=\"DUB_API_KEY\",\n) as dub:\n\n    res = dub.workspaces.get(request={\n        \"id_or_slug\": \"<value>\",\n    })\n\n    assert res is not None\n\n    # Handle response\n    print(res)"}, {"lang": "java", "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.dub.co/workspaces/idOrSlug\")\n  .get()\n  .addHeader(\"accept\", \"application/json\")\n  .addHeader(\"authorization\", \"Bearer MY_TOKEN\")\n  .build();\n\nResponse response = client.newCall(request).execute();"}]
      description: "Retrieve a workspace for the authenticated user."
      tags:
        - "Workspaces"
      security:
        - token: []
      parameters:
        - in: "path"
          name: "idOrSlug"
          description: "The ID or slug of the workspace."
          schema:
            type: "string"
            description: "The ID or slug of the workspace."
          required: true
      responses:
        "200":
          description: "The retrieved workspace"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/WorkspaceSchema"}
        "400": {"$ref": "#/components/responses/400"}
        "401": {"$ref": "#/components/responses/401"}
        "403": {"$ref": "#/components/responses/403"}
        "404": {"$ref": "#/components/responses/404"}
        "409": {"$ref": "#/components/responses/409"}
        "410": {"$ref": "#/components/responses/410"}
        "422": {"$ref": "#/components/responses/422"}
        "429": {"$ref": "#/components/responses/429"}
        "500": {"$ref": "#/components/responses/500"}
    patch:
      operationId: "updateWorkspace"
      x-speakeasy-name-override: "update"
      x-speakeasy-max-method-params: 2
      summary: "Update a workspace"
      x-codeSamples: [{"lang": "typescript", "label": "updateWorkspace", "source": "import { Dub } from \"dub\";\n\nconst dub = new Dub({\n  token: \"DUB_API_KEY\",\n});\n\nasync function run() {\n  const result = await dub.workspaces.update(\"<value>\");\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"}, {"lang": "go", "label": "updateWorkspace", "source": "package main\n\nimport(\n\t\"context\"\n\tdubgo \"github.com/dubinc/dub-go\"\n\t\"log\"\n)\n\nfunc main() {\n    ctx := context.Background()\n    \n    s := dubgo.New(\n        dubgo.WithSecurity(\"DUB_API_KEY\"),\n    )\n\n    res, err := s.Workspaces.Update(ctx, \"<value>\", nil)\n    if err != nil {\n        log.Fatal(err)\n    }\n    if res != nil {\n        // handle response\n    }\n}"}, {"lang": "ruby", "label": "updateWorkspace", "source": "require 'dub'\n\n\ns = ::OpenApiSDK::Dub.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    token: \"DUB_API_KEY\",\n  )\n)\n\n    \nres = s.workspaces.update(id_or_slug=\"<value>\", request_body=::OpenApiSDK::Operations::UpdateWorkspaceRequestBody.new())\n\nif ! res.workspace_schema.nil?\n  # handle response\nend"}, {"lang": "php", "label": "updateWorkspace", "source": "declare(strict_types=1);\n\nrequire 'vendor/autoload.php';\n\nuse Dub;\nuse Dub\\Models\\Operations;\n\n$sdk = Dub\\Dub::builder()\n    ->setSecurity(\n        'DUB_API_KEY'\n    )\n    ->build();\n\n$requestBody = new Operations\\UpdateWorkspaceRequestBody();\n\n$response = $sdk->workspaces->update(\n    idOrSlug: '<value>',\n    requestBody: $requestBody\n\n);\n\nif ($response->workspaceSchema !== null) {\n    // handle response\n}"}, {lang: python, label: updateWorkspace, source: "from dub import Dub\n\nwith Dub(\n    token=\"DUB_API_KEY\",\n) as dub:\n\n    res = dub.workspaces.update(id_or_slug=\"<value>\")\n\n    assert res is not None\n\n    # Handle response\n    print(res)"}, {"lang": "java", "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"name\\\":\\\"string\\\",\\\"slug\\\":\\\"string\\\",\\\"logo\\\":\\\"string\\\",\\\"conversionEnabled\\\":true}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.dub.co/workspaces/idOrSlug\")\n  .patch(body)\n  .addHeader(\"accept\", \"application/json\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"authorization\", \"Bearer MY_TOKEN\")\n  .build();\n\nResponse response = client.newCall(request).execute();"}]
      description: "Update a workspace by ID or slug."
      tags:
        - "Workspaces"
      security:
        - token: []
      parameters:
        - in: "path"
          name: "idOrSlug"
          description: "The ID or slug of the workspace to update."
          schema:
            type: "string"
            description: "The ID or slug of the workspace to update."
          required: true
      requestBody:
        content:
          "application/json":
            schema:
              type: "object"
              properties:
                "name":
                  type: "string"
                  minLength: 1
                  maxLength: 32
                "slug":
                  type: "string"
                  minLength: 3
                  maxLength: 48
                "logo":
                  type: "string"
                "conversionEnabled":
                  type: "boolean"
      responses:
        "200":
          description: "The updated workspace."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/WorkspaceSchema"}
        "400": {"$ref": "#/components/responses/400"}
        "401": {"$ref": "#/components/responses/401"}
        "403": {"$ref": "#/components/responses/403"}
        "404": {"$ref": "#/components/responses/404"}
        "409": {"$ref": "#/components/responses/409"}
        "410": {"$ref": "#/components/responses/410"}
        "422": {"$ref": "#/components/responses/422"}
        "429": {"$ref": "#/components/responses/429"}
        "500": {"$ref": "#/components/responses/500"}
  "/tokens/embed":
    post:
      operationId: "createEmbedToken"
      x-speakeasy-name-override: "create"
      summary: "Create a new embed token"
      x-codeSamples: [{"lang": "typescript", "label": "createEmbedToken", "source": "import { Dub } from \"dub\";\n\nconst dub = new Dub({\n  token: \"DUB_API_KEY\",\n});\n\nasync function run() {\n  const result = await dub.embedTokens.create();\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"}, {"lang": "go", "label": "createEmbedToken", "source": "package main\n\nimport(\n\t\"context\"\n\tdubgo \"github.com/dubinc/dub-go\"\n\t\"log\"\n)\n\nfunc main() {\n    ctx := context.Background()\n    \n    s := dubgo.New(\n        dubgo.WithSecurity(\"DUB_API_KEY\"),\n    )\n\n    res, err := s.EmbedTokens.Create(ctx, nil)\n    if err != nil {\n        log.Fatal(err)\n    }\n    if res != nil {\n        // handle response\n    }\n}"}, {"lang": "ruby", "label": "createEmbedToken", "source": "require 'dub'\n\n\ns = ::OpenApiSDK::Dub.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    token: \"DUB_API_KEY\",\n  )\n)\n\n\nreq = ::OpenApiSDK::Operations::CreateEmbedTokenRequestBody.new(\n  link_id: \"<id>\",\n)\n    \nres = s.embed_tokens.create(req)\n\nif ! res.object.nil?\n  # handle response\nend"}, {"lang": "php", "label": "createEmbedToken", "source": "declare(strict_types=1);\n\nrequire 'vendor/autoload.php';\n\nuse Dub;\nuse Dub\\Models\\Operations;\n\n$sdk = Dub\\Dub::builder()\n    ->setSecurity(\n        'DUB_API_KEY'\n    )\n    ->build();\n\n$request = new Operations\\CreateEmbedTokenRequestBody(\n    linkId: '<id>',\n);\n\n$response = $sdk->embedTokens->create(\n    request: $request\n);\n\nif ($response->object !== null) {\n    // handle response\n}"}, {lang: python, label: createEmbedToken, source: "from dub import Dub\n\nwith Dub(\n    token=\"DUB_API_KEY\",\n) as dub:\n\n    res = dub.embed_tokens.create()\n\n    assert res is not None\n\n    # Handle response\n    print(res)"}, {"lang": "java", "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"linkId\\\":\\\"string\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.dub.co/tokens/embed\")\n  .post(body)\n  .addHeader(\"accept\", \"application/json\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"authorization\", \"Bearer MY_TOKEN\")\n  .build();\n\nResponse response = client.newCall(request).execute();"}]
      description: "Create a new embed token for the referral link."
      tags:
        - "Embed Tokens"
      security:
        - token: []
      requestBody:
        content:
          "application/json":
            schema:
              type: "object"
              properties:
                "linkId":
                  type: "string"
                  minLength: 1
              required:
                - "linkId"
      responses:
        "201":
          description: "The created public embed token."
          content:
            "application/json":
              schema:
                type: "object"
                properties:
                  "publicToken":
                    type: "string"
                  "expires":
                    type: "string"
                required:
                  - "publicToken"
                  - "expires"
        "400": {"$ref": "#/components/responses/400"}
        "401": {"$ref": "#/components/responses/401"}
        "403": {"$ref": "#/components/responses/403"}
        "404": {"$ref": "#/components/responses/404"}
        "409": {"$ref": "#/components/responses/409"}
        "410": {"$ref": "#/components/responses/410"}
        "422": {"$ref": "#/components/responses/422"}
        "429": {"$ref": "#/components/responses/429"}
        "500": {"$ref": "#/components/responses/500"}
  "/qr":
    get:
      operationId: "getQRCode"
      x-speakeasy-name-override: "get"
      summary: "Retrieve a QR code"
      x-codeSamples: [{"lang": "typescript", "label": "getQRCode", "source": "import { Dub } from \"dub\";\n\nconst dub = new Dub({\n  token: \"DUB_API_KEY\",\n});\n\nasync function run() {\n  const result = await dub.qrCodes.get({\n    url: \"https://normal-making.name\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"}, {"lang": "go", "label": "getQRCode", "source": "package main\n\nimport(\n\t\"context\"\n\tdubgo \"github.com/dubinc/dub-go\"\n\t\"github.com/dubinc/dub-go/models/operations\"\n\t\"log\"\n)\n\nfunc main() {\n    ctx := context.Background()\n    \n    s := dubgo.New(\n        dubgo.WithSecurity(\"DUB_API_KEY\"),\n    )\n\n    res, err := s.QRCodes.Get(ctx, operations.GetQRCodeRequest{\n        URL: \"https://normal-making.name\",\n        Size: dubgo.Float64(600),\n        Level: operations.LevelL.ToPointer(),\n        FgColor: dubgo.String(\"#000000\"),\n        BgColor: dubgo.String(\"#FFFFFF\"),\n        HideLogo: dubgo.Bool(true),\n        Margin: dubgo.Float64(2),\n        IncludeMargin: dubgo.Bool(true),\n    })\n    if err != nil {\n        log.Fatal(err)\n    }\n    if res != nil {\n        // handle response\n    }\n}"}, {"lang": "ruby", "label": "getQRCode", "source": "require 'dub'\n\n\ns = ::OpenApiSDK::Dub.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    token: \"DUB_API_KEY\",\n  )\n)\n\n\nreq = ::OpenApiSDK::Operations::GetQRCodeRequest.new(\n  url: \"https://normal-making.name\",\n)\n    \nres = s.qr_codes.get(req)\n\nif ! res.res.nil?\n  # handle response\nend"}, {"lang": "php", "label": "getQRCode", "source": "declare(strict_types=1);\n\nrequire 'vendor/autoload.php';\n\nuse Dub;\nuse Dub\\Models\\Operations;\n\n$sdk = Dub\\Dub::builder()\n    ->setSecurity(\n        'DUB_API_KEY'\n    )\n    ->build();\n\n$request = new Operations\\GetQRCodeRequest(\n    url: 'https://normal-making.name',\n);\n\n$response = $sdk->qrCodes->get(\n    request: $request\n);\n\nif ($response->res !== null) {\n    // handle response\n}"}, {lang: python, label: getQRCode, source: "from dub import Dub\nfrom dub.models import operations\n\nwith Dub(\n    token=\"DUB_API_KEY\",\n) as dub:\n\n    res = dub.qr_codes.get(request={\n        \"url\": \"https://normal-making.name\",\n        \"size\": 600,\n        \"level\": operations.Level.L,\n        \"fg_color\": \"#000000\",\n        \"bg_color\": \"#FFFFFF\",\n        \"hide_logo\": True,\n        \"margin\": 2,\n        \"include_margin\": True,\n    })\n\n    assert res is not None\n\n    # Handle response\n    print(res)"}, {"lang": "java", "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.dub.co/qr\")\n  .get()\n  .addHeader(\"accept\", \"image/png\")\n  .build();\n\nResponse response = client.newCall(request).execute();"}]
      description: "Retrieve a QR code for a link."
      tags:
        - "QR Codes"
      parameters:
        - in: "query"
          name: "url"
          description: "The URL to generate a QR code for."
          schema:
            type: "string"
            description: "The URL to generate a QR code for."
          required: true
        - in: "query"
          name: "logo"
          description: "The logo to include in the QR code. Can only be used with a paid plan on Dub.co."
          schema:
            type: "string"
            description: "The logo to include in the QR code. Can only be used with a paid plan on Dub.co."
        - in: "query"
          name: "size"
          description: "The size of the QR code in pixels. Defaults to `600` if not provided."
          schema:
            type: "number"
            default: 600
            description: "The size of the QR code in pixels. Defaults to `600` if not provided."
        - in: "query"
          name: "level"
          description: "The level of error correction to use for the QR code. Defaults to `L` if not provided."
          schema:
            type: "string"
            enum:
              - "L"
              - "M"
              - "Q"
              - "H"
            default: "L"
            description: "The level of error correction to use for the QR code. Defaults to `L` if not provided."
        - in: "query"
          name: "fgColor"
          description: "The foreground color of the QR code in hex format. Defaults to `#000000` if not provided."
          schema:
            type: "string"
            default: "#000000"
            description: "The foreground color of the QR code in hex format. Defaults to `#000000` if not provided."
        - in: "query"
          name: "bgColor"
          description: "The background color of the QR code in hex format. Defaults to `#ffffff` if not provided."
          schema:
            type: "string"
            default: "#FFFFFF"
            description: "The background color of the QR code in hex format. Defaults to `#ffffff` if not provided."
        - in: "query"
          name: "hideLogo"
          description: "Whether to hide the logo in the QR code. Can only be used with a paid plan on Dub.co."
          schema:
            type: "boolean"
            default: "false"
            description: "Whether to hide the logo in the QR code. Can only be used with a paid plan on Dub.co."
        - in: "query"
          name: "margin"
          description: "The size of the margin around the QR code. Defaults to 2 if not provided."
          schema:
            type: "number"
            default: 2
            description: "The size of the margin around the QR code. Defaults to 2 if not provided."
        - in: "query"
          name: "includeMargin"
          description: "DEPRECATED: Margin is included by default. Use the `margin` prop to customize the margin size."
          schema:
            type: "boolean"
            default: "true"
            description: "DEPRECATED: Margin is included by default. Use the `margin` prop to customize the margin size."
            deprecated: true
      responses:
        "200":
          description: "The QR code"
          content:
            "image/png":
              schema:
                type: "string"
        "400": {"$ref": "#/components/responses/400"}
        "401": {"$ref": "#/components/responses/401"}
        "403": {"$ref": "#/components/responses/403"}
        "404": {"$ref": "#/components/responses/404"}
        "409": {"$ref": "#/components/responses/409"}
        "410": {"$ref": "#/components/responses/410"}
        "422": {"$ref": "#/components/responses/422"}
        "429": {"$ref": "#/components/responses/429"}
        "500": {"$ref": "#/components/responses/500"}
  "/metatags":
    get:
      operationId: "getMetatags"
      x-speakeasy-name-override: "get"
      summary: "Retrieve the metatags for a URL"
      x-codeSamples: [{"lang": "typescript", "label": "getMetatags", "source": "import { Dub } from \"dub\";\n\nconst dub = new Dub({\n  token: \"DUB_API_KEY\",\n});\n\nasync function run() {\n  const result = await dub.metatags.get({\n    url: \"https://dub.co\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"}, {"lang": "go", "label": "getMetatags", "source": "package main\n\nimport(\n\t\"context\"\n\tdubgo \"github.com/dubinc/dub-go\"\n\t\"github.com/dubinc/dub-go/models/operations\"\n\t\"log\"\n)\n\nfunc main() {\n    ctx := context.Background()\n    \n    s := dubgo.New(\n        dubgo.WithSecurity(\"DUB_API_KEY\"),\n    )\n\n    res, err := s.Metatags.Get(ctx, operations.GetMetatagsRequest{\n        URL: \"https://dub.co\",\n    })\n    if err != nil {\n        log.Fatal(err)\n    }\n    if res != nil {\n        // handle response\n    }\n}"}, {"lang": "ruby", "label": "getMetatags", "source": "require 'dub'\n\n\ns = ::OpenApiSDK::Dub.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    token: \"DUB_API_KEY\",\n  )\n)\n\n\nreq = ::OpenApiSDK::Operations::GetMetatagsRequest.new(\n  url: \"https://dub.co\",\n)\n    \nres = s.metatags.get(req)\n\nif ! res.object.nil?\n  # handle response\nend"}, {"lang": "php", "label": "getMetatags", "source": "declare(strict_types=1);\n\nrequire 'vendor/autoload.php';\n\nuse Dub;\n\n$sdk = Dub\\Dub::builder()\n    ->setSecurity(\n        'DUB_API_KEY'\n    )\n    ->build();\n\n\n\n$response = $sdk->metatags->get(\n    url: 'https://dub.co'\n);\n\nif ($response->object !== null) {\n    // handle response\n}"}, {lang: python, label: getMetatags, source: "from dub import Dub\n\nwith Dub(\n    token=\"DUB_API_KEY\",\n) as dub:\n\n    res = dub.metatags.get(request={\n        \"url\": \"https://dub.co\",\n    })\n\n    assert res is not None\n\n    # Handle response\n    print(res)"}, {"lang": "java", "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.dub.co/metatags\")\n  .get()\n  .addHeader(\"accept\", \"application/json\")\n  .build();\n\nResponse response = client.newCall(request).execute();"}]
      description: "Retrieve the metatags for a URL."
      tags:
        - "Metatags"
      parameters:
        - in: "query"
          name: "url"
          description: "The URL to retrieve metatags for."
          schema:
            type: "string"
            example: "https://dub.co"
            description: "The URL to retrieve metatags for."
          required: true
      responses:
        "200":
          description: "The retrieved metatags"
          content:
            "application/json":
              schema:
                type: "object"
                properties:
                  "title":
                    type: "string"
                    nullable: true
                    description: "The meta title tag for the URL."
                    example: "Dub.co - Link Management for Modern Marketing Teams"
                  "description":
                    type: "string"
                    nullable: true
                    description: "The meta description tag for the URL."
                    example: "Dub.co is the open-source link management infrastructure ..."
                  "image":
                    type: "string"
                    nullable: true
                    description: "The OpenGraph image for the URL."
                    example: "https://assets.dub.co/thumbnail.jpg"
                required:
                  - "title"
                  - "description"
                  - "image"
components:
  securitySchemes:
    "token":
      type: "http"
      description: "Default authentication mechanism"
      scheme: "bearer"
      x-speakeasy-example: "DUB_API_KEY"
  schemas:
    "LinkSchema":
      type: "object"
      properties:
        "id":
          type: "string"
          description: "The unique ID of the short link."
        "domain":
          type: "string"
          description: "The domain of the short link. If not provided, the primary domain for the workspace will be used (or `dub.sh` if the workspace has no domains)."
        "key":
          type: "string"
          description: "The short link slug. If not provided, a random 7-character slug will be generated."
        "url":
          type: "string"
          format: "uri"
          description: "The destination URL of the short link."
        "trackConversion":
          type: "boolean"
          default: false
          description: "Whether to track conversions for the short link."
        "externalId":
          type: "string"
          nullable: true
          description: "The ID of the link in your database. If set, it can be used to identify the link in future API requests (must be prefixed with 'ext_' when passed as a query parameter). This key is unique across your workspace."
        "tenantId":
          type: "string"
          nullable: true
          description: "The ID of the tenant that created the link inside your system. If set, it can be used to fetch all links for a tenant."
        "archived":
          type: "boolean"
          default: false
          description: "Whether the short link is archived."
        "expiresAt":
          type: "string"
          nullable: true
          description: "The date and time when the short link will expire in ISO-8601 format."
        "expiredUrl":
          type: "string"
          nullable: true
          format: "uri"
          description: "The URL to redirect to when the short link has expired."
        "password":
          type: "string"
          nullable: true
          description: "The password required to access the destination URL of the short link."
        "proxy":
          type: "boolean"
          default: false
          description: "Whether the short link uses Custom Social Media Cards feature."
        "title":
          type: "string"
          nullable: true
          description: "The title of the short link generated via `api.dub.co/metatags`. Will be used for Custom Social Media Cards if `proxy` is true."
        "description":
          type: "string"
          nullable: true
          description: "The description of the short link generated via `api.dub.co/metatags`. Will be used for Custom Social Media Cards if `proxy` is true."
        "image":
          type: "string"
          nullable: true
          description: "The image of the short link generated via `api.dub.co/metatags`. Will be used for Custom Social Media Cards if `proxy` is true."
        "video":
          type: "string"
          nullable: true
          description: "The custom link preview video (og:video). Will be used for Custom Social Media Cards if `proxy` is true. Learn more: https://d.to/og"
        "rewrite":
          type: "boolean"
          default: false
          description: "Whether the short link uses link cloaking."
        "doIndex":
          type: "boolean"
          default: false
          description: "Whether to allow search engines to index the short link."
        "ios":
          type: "string"
          nullable: true
          description: "The iOS destination URL for the short link for iOS device targeting."
        "android":
          type: "string"
          nullable: true
          description: "The Android destination URL for the short link for Android device targeting."
        "geo":
          type: "object"
          nullable: true
          properties:
            "AF":
              type: "string"
              format: "uri"
            "AL":
              type: "string"
              format: "uri"
            "DZ":
              type: "string"
              format: "uri"
            "AS":
              type: "string"
              format: "uri"
            "AD":
              type: "string"
              format: "uri"
            "AO":
              type: "string"
              format: "uri"
            "AI":
              type: "string"
              format: "uri"
            "AQ":
              type: "string"
              format: "uri"
            "AG":
              type: "string"
              format: "uri"
            "AR":
              type: "string"
              format: "uri"
            "AM":
              type: "string"
              format: "uri"
            "AW":
              type: "string"
              format: "uri"
            "AU":
              type: "string"
              format: "uri"
            "AT":
              type: "string"
              format: "uri"
            "AZ":
              type: "string"
              format: "uri"
            "BS":
              type: "string"
              format: "uri"
            "BH":
              type: "string"
              format: "uri"
            "BD":
              type: "string"
              format: "uri"
            "BB":
              type: "string"
              format: "uri"
            "BY":
              type: "string"
              format: "uri"
            "BE":
              type: "string"
              format: "uri"
            "BZ":
              type: "string"
              format: "uri"
            "BJ":
              type: "string"
              format: "uri"
            "BM":
              type: "string"
              format: "uri"
            "BT":
              type: "string"
              format: "uri"
            "BO":
              type: "string"
              format: "uri"
            "BA":
              type: "string"
              format: "uri"
            "BW":
              type: "string"
              format: "uri"
            "BV":
              type: "string"
              format: "uri"
            "BR":
              type: "string"
              format: "uri"
            "IO":
              type: "string"
              format: "uri"
            "BN":
              type: "string"
              format: "uri"
            "BG":
              type: "string"
              format: "uri"
            "BF":
              type: "string"
              format: "uri"
            "BI":
              type: "string"
              format: "uri"
            "KH":
              type: "string"
              format: "uri"
            "CM":
              type: "string"
              format: "uri"
            "CA":
              type: "string"
              format: "uri"
            "CV":
              type: "string"
              format: "uri"
            "KY":
              type: "string"
              format: "uri"
            "CF":
              type: "string"
              format: "uri"
            "TD":
              type: "string"
              format: "uri"
            "CL":
              type: "string"
              format: "uri"
            "CN":
              type: "string"
              format: "uri"
            "CX":
              type: "string"
              format: "uri"
            "CC":
              type: "string"
              format: "uri"
            "CO":
              type: "string"
              format: "uri"
            "KM":
              type: "string"
              format: "uri"
            "CG":
              type: "string"
              format: "uri"
            "CD":
              type: "string"
              format: "uri"
            "CK":
              type: "string"
              format: "uri"
            "CR":
              type: "string"
              format: "uri"
            "CI":
              type: "string"
              format: "uri"
            "HR":
              type: "string"
              format: "uri"
            "CU":
              type: "string"
              format: "uri"
            "CY":
              type: "string"
              format: "uri"
            "CZ":
              type: "string"
              format: "uri"
            "DK":
              type: "string"
              format: "uri"
            "DJ":
              type: "string"
              format: "uri"
            "DM":
              type: "string"
              format: "uri"
            "DO":
              type: "string"
              format: "uri"
            "EC":
              type: "string"
              format: "uri"
            "EG":
              type: "string"
              format: "uri"
            "SV":
              type: "string"
              format: "uri"
            "GQ":
              type: "string"
              format: "uri"
            "ER":
              type: "string"
              format: "uri"
            "EE":
              type: "string"
              format: "uri"
            "ET":
              type: "string"
              format: "uri"
            "FK":
              type: "string"
              format: "uri"
            "FO":
              type: "string"
              format: "uri"
            "FJ":
              type: "string"
              format: "uri"
            "FI":
              type: "string"
              format: "uri"
            "FR":
              type: "string"
              format: "uri"
            "GF":
              type: "string"
              format: "uri"
            "PF":
              type: "string"
              format: "uri"
            "TF":
              type: "string"
              format: "uri"
            "GA":
              type: "string"
              format: "uri"
            "GM":
              type: "string"
              format: "uri"
            "GE":
              type: "string"
              format: "uri"
            "DE":
              type: "string"
              format: "uri"
            "GH":
              type: "string"
              format: "uri"
            "GI":
              type: "string"
              format: "uri"
            "GR":
              type: "string"
              format: "uri"
            "GL":
              type: "string"
              format: "uri"
            "GD":
              type: "string"
              format: "uri"
            "GP":
              type: "string"
              format: "uri"
            "GU":
              type: "string"
              format: "uri"
            "GT":
              type: "string"
              format: "uri"
            "GN":
              type: "string"
              format: "uri"
            "GW":
              type: "string"
              format: "uri"
            "GY":
              type: "string"
              format: "uri"
            "HT":
              type: "string"
              format: "uri"
            "HM":
              type: "string"
              format: "uri"
            "VA":
              type: "string"
              format: "uri"
            "HN":
              type: "string"
              format: "uri"
            "HK":
              type: "string"
              format: "uri"
            "HU":
              type: "string"
              format: "uri"
            "IS":
              type: "string"
              format: "uri"
            "IN":
              type: "string"
              format: "uri"
            "ID":
              type: "string"
              format: "uri"
            "IR":
              type: "string"
              format: "uri"
            "IQ":
              type: "string"
              format: "uri"
            "IE":
              type: "string"
              format: "uri"
            "IL":
              type: "string"
              format: "uri"
            "IT":
              type: "string"
              format: "uri"
            "JM":
              type: "string"
              format: "uri"
            "JP":
              type: "string"
              format: "uri"
            "JO":
              type: "string"
              format: "uri"
            "KZ":
              type: "string"
              format: "uri"
            "KE":
              type: "string"
              format: "uri"
            "KI":
              type: "string"
              format: "uri"
            "KP":
              type: "string"
              format: "uri"
            "KR":
              type: "string"
              format: "uri"
            "KW":
              type: "string"
              format: "uri"
            "KG":
              type: "string"
              format: "uri"
            "LA":
              type: "string"
              format: "uri"
            "LV":
              type: "string"
              format: "uri"
            "LB":
              type: "string"
              format: "uri"
            "LS":
              type: "string"
              format: "uri"
            "LR":
              type: "string"
              format: "uri"
            "LY":
              type: "string"
              format: "uri"
            "LI":
              type: "string"
              format: "uri"
            "LT":
              type: "string"
              format: "uri"
            "LU":
              type: "string"
              format: "uri"
            "MO":
              type: "string"
              format: "uri"
            "MG":
              type: "string"
              format: "uri"
            "MW":
              type: "string"
              format: "uri"
            "MY":
              type: "string"
              format: "uri"
            "MV":
              type: "string"
              format: "uri"
            "ML":
              type: "string"
              format: "uri"
            "MT":
              type: "string"
              format: "uri"
            "MH":
              type: "string"
              format: "uri"
            "MQ":
              type: "string"
              format: "uri"
            "MR":
              type: "string"
              format: "uri"
            "MU":
              type: "string"
              format: "uri"
            "YT":
              type: "string"
              format: "uri"
            "MX":
              type: "string"
              format: "uri"
            "FM":
              type: "string"
              format: "uri"
            "MD":
              type: "string"
              format: "uri"
            "MC":
              type: "string"
              format: "uri"
            "MN":
              type: "string"
              format: "uri"
            "MS":
              type: "string"
              format: "uri"
            "MA":
              type: "string"
              format: "uri"
            "MZ":
              type: "string"
              format: "uri"
            "MM":
              type: "string"
              format: "uri"
            "NA":
              type: "string"
              format: "uri"
            "NR":
              type: "string"
              format: "uri"
            "NP":
              type: "string"
              format: "uri"
            "NL":
              type: "string"
              format: "uri"
            "NC":
              type: "string"
              format: "uri"
            "NZ":
              type: "string"
              format: "uri"
            "NI":
              type: "string"
              format: "uri"
            "NE":
              type: "string"
              format: "uri"
            "NG":
              type: "string"
              format: "uri"
            "NU":
              type: "string"
              format: "uri"
            "NF":
              type: "string"
              format: "uri"
            "MK":
              type: "string"
              format: "uri"
            "MP":
              type: "string"
              format: "uri"
            "NO":
              type: "string"
              format: "uri"
            "OM":
              type: "string"
              format: "uri"
            "PK":
              type: "string"
              format: "uri"
            "PW":
              type: "string"
              format: "uri"
            "PS":
              type: "string"
              format: "uri"
            "PA":
              type: "string"
              format: "uri"
            "PG":
              type: "string"
              format: "uri"
            "PY":
              type: "string"
              format: "uri"
            "PE":
              type: "string"
              format: "uri"
            "PH":
              type: "string"
              format: "uri"
            "PN":
              type: "string"
              format: "uri"
            "PL":
              type: "string"
              format: "uri"
            "PT":
              type: "string"
              format: "uri"
            "PR":
              type: "string"
              format: "uri"
            "QA":
              type: "string"
              format: "uri"
            "RE":
              type: "string"
              format: "uri"
            "RO":
              type: "string"
              format: "uri"
            "RU":
              type: "string"
              format: "uri"
            "RW":
              type: "string"
              format: "uri"
            "SH":
              type: "string"
              format: "uri"
            "KN":
              type: "string"
              format: "uri"
            "LC":
              type: "string"
              format: "uri"
            "PM":
              type: "string"
              format: "uri"
            "VC":
              type: "string"
              format: "uri"
            "WS":
              type: "string"
              format: "uri"
            "SM":
              type: "string"
              format: "uri"
            "ST":
              type: "string"
              format: "uri"
            "SA":
              type: "string"
              format: "uri"
            "SN":
              type: "string"
              format: "uri"
            "SC":
              type: "string"
              format: "uri"
            "SL":
              type: "string"
              format: "uri"
            "SG":
              type: "string"
              format: "uri"
            "SK":
              type: "string"
              format: "uri"
            "SI":
              type: "string"
              format: "uri"
            "SB":
              type: "string"
              format: "uri"
            "SO":
              type: "string"
              format: "uri"
            "ZA":
              type: "string"
              format: "uri"
            "GS":
              type: "string"
              format: "uri"
            "ES":
              type: "string"
              format: "uri"
            "LK":
              type: "string"
              format: "uri"
            "SD":
              type: "string"
              format: "uri"
            "SR":
              type: "string"
              format: "uri"
            "SJ":
              type: "string"
              format: "uri"
            "SZ":
              type: "string"
              format: "uri"
            "SE":
              type: "string"
              format: "uri"
            "CH":
              type: "string"
              format: "uri"
            "SY":
              type: "string"
              format: "uri"
            "TW":
              type: "string"
              format: "uri"
            "TJ":
              type: "string"
              format: "uri"
            "TZ":
              type: "string"
              format: "uri"
            "TH":
              type: "string"
              format: "uri"
            "TL":
              type: "string"
              format: "uri"
            "TG":
              type: "string"
              format: "uri"
            "TK":
              type: "string"
              format: "uri"
            "TO":
              type: "string"
              format: "uri"
            "TT":
              type: "string"
              format: "uri"
            "TN":
              type: "string"
              format: "uri"
            "TR":
              type: "string"
              format: "uri"
            "TM":
              type: "string"
              format: "uri"
            "TC":
              type: "string"
              format: "uri"
            "TV":
              type: "string"
              format: "uri"
            "UG":
              type: "string"
              format: "uri"
            "UA":
              type: "string"
              format: "uri"
            "AE":
              type: "string"
              format: "uri"
            "GB":
              type: "string"
              format: "uri"
            "US":
              type: "string"
              format: "uri"
            "UM":
              type: "string"
              format: "uri"
            "UY":
              type: "string"
              format: "uri"
            "UZ":
              type: "string"
              format: "uri"
            "VU":
              type: "string"
              format: "uri"
            "VE":
              type: "string"
              format: "uri"
            "VN":
              type: "string"
              format: "uri"
            "VG":
              type: "string"
              format: "uri"
            "VI":
              type: "string"
              format: "uri"
            "WF":
              type: "string"
              format: "uri"
            "EH":
              type: "string"
              format: "uri"
            "YE":
              type: "string"
              format: "uri"
            "ZM":
              type: "string"
              format: "uri"
            "ZW":
              type: "string"
              format: "uri"
            "AX":
              type: "string"
              format: "uri"
            "BQ":
              type: "string"
              format: "uri"
            "CW":
              type: "string"
              format: "uri"
            "GG":
              type: "string"
              format: "uri"
            "IM":
              type: "string"
              format: "uri"
            "JE":
              type: "string"
              format: "uri"
            "ME":
              type: "string"
              format: "uri"
            "BL":
              type: "string"
              format: "uri"
            "MF":
              type: "string"
              format: "uri"
            "RS":
              type: "string"
              format: "uri"
            "SX":
              type: "string"
              format: "uri"
            "SS":
              type: "string"
              format: "uri"
            "XK":
              type: "string"
              format: "uri"
          additionalProperties: false
          description: "Geo targeting information for the short link in JSON format `{[COUNTRY]: https://example.com }`. Learn more: https://d.to/geo"
        "publicStats":
          type: "boolean"
          default: false
          description: "Whether the short link's stats are publicly accessible."
        "tagId":
          type: "string"
          nullable: true
          description: "The unique ID of the tag assigned to the short link. This field is deprecated – use `tags` instead."
          deprecated: true
        "tags":
          type: "array"
          nullable: true
          items: {"$ref": "#/components/schemas/TagSchema"}
          description: "The tags assigned to the short link."
        "webhookIds":
          type: "array"
          items:
            type: "string"
          description: "The IDs of the webhooks that the short link is associated with."
        "comments":
          type: "string"
          nullable: true
          description: "The comments for the short link."
        "shortLink":
          type: "string"
          format: "uri"
          description: "The full URL of the short link, including the https protocol (e.g. `https://dub.sh/try`)."
        "qrCode":
          type: "string"
          format: "uri"
          description: "The full URL of the QR code for the short link (e.g. `https://api.dub.co/qr?url=https://dub.sh/try`)."
        "utm_source":
          type: "string"
          nullable: true
          description: "The UTM source of the short link."
        "utm_medium":
          type: "string"
          nullable: true
          description: "The UTM medium of the short link."
        "utm_campaign":
          type: "string"
          nullable: true
          description: "The UTM campaign of the short link."
        "utm_term":
          type: "string"
          nullable: true
          description: "The UTM term of the short link."
        "utm_content":
          type: "string"
          nullable: true
          description: "The UTM content of the short link."
        "userId":
          type: "string"
          nullable: true
          description: "The user ID of the creator of the short link."
        "workspaceId":
          type: "string"
          description: "The workspace ID of the short link."
        "clicks":
          type: "number"
          default: 0
          description: "The number of clicks on the short link."
        "lastClicked":
          type: "string"
          nullable: true
          description: "The date and time when the short link was last clicked."
        "leads":
          type: "number"
          default: 0
          description: "The number of leads the short links has generated."
        "sales":
          type: "number"
          default: 0
          description: "The number of sales the short links has generated."
        "saleAmount":
          type: "number"
          default: 0
          description: "The total dollar amount of sales the short links has generated (in cents)."
        "createdAt":
          type: "string"
          description: "The date and time when the short link was created."
        "updatedAt":
          type: "string"
          description: "The date and time when the short link was last updated."
        "projectId":
          type: "string"
          description: "The project ID of the short link. This field is deprecated – use `workspaceId` instead."
          deprecated: true
        "programId":
          type: "string"
          nullable: true
          description: "The ID of the program the short link is associated with."
      required:
        - "id"
        - "domain"
        - "key"
        - "url"
        - "trackConversion"
        - "externalId"
        - "tenantId"
        - "archived"
        - "expiresAt"
        - "expiredUrl"
        - "password"
        - "proxy"
        - "title"
        - "description"
        - "image"
        - "video"
        - "rewrite"
        - "doIndex"
        - "ios"
        - "android"
        - "geo"
        - "publicStats"
        - "tagId"
        - "tags"
        - "webhookIds"
        - "comments"
        - "shortLink"
        - "qrCode"
        - "utm_source"
        - "utm_medium"
        - "utm_campaign"
        - "utm_term"
        - "utm_content"
        - "userId"
        - "workspaceId"
        - "clicks"
        - "lastClicked"
        - "leads"
        - "sales"
        - "saleAmount"
        - "createdAt"
        - "updatedAt"
        - "projectId"
        - "programId"
      title: "Link"
    "WorkspaceSchema":
      type: "object"
      properties:
        "id":
          type: "string"
          description: "The unique ID of the workspace."
        "name":
          type: "string"
          description: "The name of the workspace."
        "slug":
          type: "string"
          description: "The slug of the workspace."
        "logo":
          type: "string"
          nullable: true
          default:
          description: "The logo of the workspace."
        "inviteCode":
          type: "string"
          nullable: true
          description: "The invite code of the workspace."
        "plan":
          type: "string"
          enum:
            - "free"
            - "pro"
            - "business"
            - "business plus"
            - "business extra"
            - "business max"
            - "enterprise"
          description: "The plan of the workspace."
        "stripeId":
          type: "string"
          nullable: true
          description: "The Stripe ID of the workspace."
        "billingCycleStart":
          type: "number"
          description: "The date and time when the billing cycle starts for the workspace."
        "paymentFailedAt":
          type: "string"
          nullable: true
          description: "The date and time when the payment failed for the workspace."
        "stripeConnectId":
          type: "string"
          nullable: true
          description: "The Stripe Connect ID of the workspace."
        "usage":
          type: "number"
          description: "The usage of the workspace."
        "usageLimit":
          type: "number"
          description: "The usage limit of the workspace."
        "linksUsage":
          type: "number"
          description: "The links usage of the workspace."
        "linksLimit":
          type: "number"
          description: "The links limit of the workspace."
        "salesUsage":
          type: "number"
          description: "The dollar amount of tracked revenue in the current billing cycle (in cents)."
        "salesLimit":
          type: "number"
          description: "The limit of tracked revenue in the current billing cycle (in cents)."
        "domainsLimit":
          type: "number"
          description: "The domains limit of the workspace."
        "tagsLimit":
          type: "number"
          description: "The tags limit of the workspace."
        "usersLimit":
          type: "number"
          description: "The users limit of the workspace."
        "aiUsage":
          type: "number"
          description: "The AI usage of the workspace."
        "aiLimit":
          type: "number"
          description: "The AI limit of the workspace."
        "conversionEnabled":
          type: "boolean"
          description: "Whether the workspace has conversion tracking enabled automatically for new links (d.to/conversions)."
        "dotLinkClaimed":
          type: "boolean"
          description: "Whether the workspace has claimed a free .link domain. (dub.link/free)"
        "partnersEnabled":
          type: "boolean"
          description: "Whether the workspace has Dub Partners enabled."
        "createdAt":
          type: "string"
          description: "The date and time when the workspace was created."
        "users":
          type: "array"
          items:
            type: "object"
            properties:
              "role":
                type: "string"
                enum:
                  - "owner"
                  - "member"
                description: "The role of the authenticated user in the workspace."
            required:
              - "role"
          description: "The role of the authenticated user in the workspace."
        "domains":
          type: "array"
          items:
            type: "object"
            properties:
              "slug":
                type: "string"
                description: "The domain name."
                example: "acme.com"
              "primary":
                type: "boolean"
                default: false
                description: "Whether the domain is the primary domain for the workspace."
              "verified":
                type: "boolean"
                default: false
                description: "Whether the domain is verified."
            required:
              - "slug"
              - "primary"
              - "verified"
          description: "The domains of the workspace."
        "flags":
          type: "object"
          additionalProperties:
            type: "boolean"
          description: "The feature flags of the workspace, indicating which features are enabled."
        "store":
          type: "object"
          nullable: true
          additionalProperties: {}
          description: "The miscellaneous key-value store of the workspace."
      required:
        - "id"
        - "name"
        - "slug"
        - "logo"
        - "inviteCode"
        - "plan"
        - "stripeId"
        - "billingCycleStart"
        - "paymentFailedAt"
        - "stripeConnectId"
        - "usage"
        - "usageLimit"
        - "linksUsage"
        - "linksLimit"
        - "salesUsage"
        - "salesLimit"
        - "domainsLimit"
        - "tagsLimit"
        - "usersLimit"
        - "aiUsage"
        - "aiLimit"
        - "conversionEnabled"
        - "dotLinkClaimed"
        - "partnersEnabled"
        - "createdAt"
        - "users"
        - "domains"
        - "store"
      title: "Workspace"
    "TagSchema":
      type: "object"
      properties:
        "id":
          type: "string"
          description: "The unique ID of the tag."
        "name":
          type: "string"
          description: "The name of the tag."
        "color":
          type: "string"
          enum:
            - "red"
            - "yellow"
            - "green"
            - "blue"
            - "purple"
            - "pink"
            - "brown"
          description: "The color of the tag."
      required:
        - "id"
        - "name"
        - "color"
      title: "Tag"
    "DomainSchema":
      type: "object"
      properties:
        "id":
          type: "string"
          description: "The unique identifier of the domain."
        "slug":
          type: "string"
          description: "The domain name."
          example: "acme.com"
        "verified":
          type: "boolean"
          default: false
          description: "Whether the domain is verified."
        "primary":
          type: "boolean"
          default: false
          description: "Whether the domain is the primary domain for the workspace."
        "archived":
          type: "boolean"
          description: "Whether the domain is archived."
          default: false
        "placeholder":
          type: "string"
          nullable: true
          description: "Provide context to your teammates in the link creation modal by showing them an example of a link to be shortened."
          example: "https://dub.co/help/article/what-is-dub"
        "expiredUrl":
          type: "string"
          nullable: true
          description: "The URL to redirect to when a link under this domain has expired."
          example: "https://acme.com/expired"
        "notFoundUrl":
          type: "string"
          nullable: true
          description: "The URL to redirect to when a link under this domain doesn't exist."
          example: "https://acme.com/not-found"
        "logo":
          type: "string"
          nullable: true
          description: "The logo of the domain."
        "createdAt":
          type: "string"
          description: "The date the domain was created."
        "updatedAt":
          type: "string"
          description: "The date the domain was last updated."
        "registeredDomain":
          type: "object"
          nullable: true
          properties:
            "id":
              type: "string"
              description: "The ID of the registered domain record."
            "createdAt":
              type: "string"
              description: "The date the domain was created."
            "expiresAt":
              type: "string"
              description: "The date the domain expires."
          required:
            - "id"
            - "createdAt"
            - "expiresAt"
          description: "The registered domain record."
      required:
        - "id"
        - "slug"
        - "verified"
        - "primary"
        - "archived"
        - "placeholder"
        - "expiredUrl"
        - "notFoundUrl"
        - "logo"
        - "createdAt"
        - "updatedAt"
        - "registeredDomain"
    "WebhookEvent":
      anyOf:
        - {"$ref": "#/components/schemas/LinkWebhookEvent"}
        - {"$ref": "#/components/schemas/LinkClickedEvent"}
        - {"$ref": "#/components/schemas/LeadCreatedEvent"}
        - {"$ref": "#/components/schemas/SaleCreatedEvent"}
      description: "Webhook event schema"
      x-speakeasy-include: true
    "LinkErrorSchema":
      type: "object"
      properties:
        "link":
          description: "The link that caused the error."
        "error":
          type: "string"
          description: "The error message."
        "code":
          type: "string"
          enum:
            - "bad_request"
            - "not_found"
            - "internal_server_error"
            - "unauthorized"
            - "forbidden"
            - "rate_limit_exceeded"
            - "invite_expired"
            - "invite_pending"
            - "exceeded_limit"
            - "conflict"
            - "unprocessable_entity"
          description: "The error code."
      required:
        - "error"
        - "code"
      title: "LinkError"
    "linkGeoTargeting":
      type: "object"
      nullable: true
      properties:
        "AF":
          type: "string"
        "AL":
          type: "string"
        "DZ":
          type: "string"
        "AS":
          type: "string"
        "AD":
          type: "string"
        "AO":
          type: "string"
        "AI":
          type: "string"
        "AQ":
          type: "string"
        "AG":
          type: "string"
        "AR":
          type: "string"
        "AM":
          type: "string"
        "AW":
          type: "string"
        "AU":
          type: "string"
        "AT":
          type: "string"
        "AZ":
          type: "string"
        "BS":
          type: "string"
        "BH":
          type: "string"
        "BD":
          type: "string"
        "BB":
          type: "string"
        "BY":
          type: "string"
        "BE":
          type: "string"
        "BZ":
          type: "string"
        "BJ":
          type: "string"
        "BM":
          type: "string"
        "BT":
          type: "string"
        "BO":
          type: "string"
        "BA":
          type: "string"
        "BW":
          type: "string"
        "BV":
          type: "string"
        "BR":
          type: "string"
        "IO":
          type: "string"
        "BN":
          type: "string"
        "BG":
          type: "string"
        "BF":
          type: "string"
        "BI":
          type: "string"
        "KH":
          type: "string"
        "CM":
          type: "string"
        "CA":
          type: "string"
        "CV":
          type: "string"
        "KY":
          type: "string"
        "CF":
          type: "string"
        "TD":
          type: "string"
        "CL":
          type: "string"
        "CN":
          type: "string"
        "CX":
          type: "string"
        "CC":
          type: "string"
        "CO":
          type: "string"
        "KM":
          type: "string"
        "CG":
          type: "string"
        "CD":
          type: "string"
        "CK":
          type: "string"
        "CR":
          type: "string"
        "CI":
          type: "string"
        "HR":
          type: "string"
        "CU":
          type: "string"
        "CY":
          type: "string"
        "CZ":
          type: "string"
        "DK":
          type: "string"
        "DJ":
          type: "string"
        "DM":
          type: "string"
        "DO":
          type: "string"
        "EC":
          type: "string"
        "EG":
          type: "string"
        "SV":
          type: "string"
        "GQ":
          type: "string"
        "ER":
          type: "string"
        "EE":
          type: "string"
        "ET":
          type: "string"
        "FK":
          type: "string"
        "FO":
          type: "string"
        "FJ":
          type: "string"
        "FI":
          type: "string"
        "FR":
          type: "string"
        "GF":
          type: "string"
        "PF":
          type: "string"
        "TF":
          type: "string"
        "GA":
          type: "string"
        "GM":
          type: "string"
        "GE":
          type: "string"
        "DE":
          type: "string"
        "GH":
          type: "string"
        "GI":
          type: "string"
        "GR":
          type: "string"
        "GL":
          type: "string"
        "GD":
          type: "string"
        "GP":
          type: "string"
        "GU":
          type: "string"
        "GT":
          type: "string"
        "GN":
          type: "string"
        "GW":
          type: "string"
        "GY":
          type: "string"
        "HT":
          type: "string"
        "HM":
          type: "string"
        "VA":
          type: "string"
        "HN":
          type: "string"
        "HK":
          type: "string"
        "HU":
          type: "string"
        "IS":
          type: "string"
        "IN":
          type: "string"
        "ID":
          type: "string"
        "IR":
          type: "string"
        "IQ":
          type: "string"
        "IE":
          type: "string"
        "IL":
          type: "string"
        "IT":
          type: "string"
        "JM":
          type: "string"
        "JP":
          type: "string"
        "JO":
          type: "string"
        "KZ":
          type: "string"
        "KE":
          type: "string"
        "KI":
          type: "string"
        "KP":
          type: "string"
        "KR":
          type: "string"
        "KW":
          type: "string"
        "KG":
          type: "string"
        "LA":
          type: "string"
        "LV":
          type: "string"
        "LB":
          type: "string"
        "LS":
          type: "string"
        "LR":
          type: "string"
        "LY":
          type: "string"
        "LI":
          type: "string"
        "LT":
          type: "string"
        "LU":
          type: "string"
        "MO":
          type: "string"
        "MG":
          type: "string"
        "MW":
          type: "string"
        "MY":
          type: "string"
        "MV":
          type: "string"
        "ML":
          type: "string"
        "MT":
          type: "string"
        "MH":
          type: "string"
        "MQ":
          type: "string"
        "MR":
          type: "string"
        "MU":
          type: "string"
        "YT":
          type: "string"
        "MX":
          type: "string"
        "FM":
          type: "string"
        "MD":
          type: "string"
        "MC":
          type: "string"
        "MN":
          type: "string"
        "MS":
          type: "string"
        "MA":
          type: "string"
        "MZ":
          type: "string"
        "MM":
          type: "string"
        "NA":
          type: "string"
        "NR":
          type: "string"
        "NP":
          type: "string"
        "NL":
          type: "string"
        "NC":
          type: "string"
        "NZ":
          type: "string"
        "NI":
          type: "string"
        "NE":
          type: "string"
        "NG":
          type: "string"
        "NU":
          type: "string"
        "NF":
          type: "string"
        "MK":
          type: "string"
        "MP":
          type: "string"
        "NO":
          type: "string"
        "OM":
          type: "string"
        "PK":
          type: "string"
        "PW":
          type: "string"
        "PS":
          type: "string"
        "PA":
          type: "string"
        "PG":
          type: "string"
        "PY":
          type: "string"
        "PE":
          type: "string"
        "PH":
          type: "string"
        "PN":
          type: "string"
        "PL":
          type: "string"
        "PT":
          type: "string"
        "PR":
          type: "string"
        "QA":
          type: "string"
        "RE":
          type: "string"
        "RO":
          type: "string"
        "RU":
          type: "string"
        "RW":
          type: "string"
        "SH":
          type: "string"
        "KN":
          type: "string"
        "LC":
          type: "string"
        "PM":
          type: "string"
        "VC":
          type: "string"
        "WS":
          type: "string"
        "SM":
          type: "string"
        "ST":
          type: "string"
        "SA":
          type: "string"
        "SN":
          type: "string"
        "SC":
          type: "string"
        "SL":
          type: "string"
        "SG":
          type: "string"
        "SK":
          type: "string"
        "SI":
          type: "string"
        "SB":
          type: "string"
        "SO":
          type: "string"
        "ZA":
          type: "string"
        "GS":
          type: "string"
        "ES":
          type: "string"
        "LK":
          type: "string"
        "SD":
          type: "string"
        "SR":
          type: "string"
        "SJ":
          type: "string"
        "SZ":
          type: "string"
        "SE":
          type: "string"
        "CH":
          type: "string"
        "SY":
          type: "string"
        "TW":
          type: "string"
        "TJ":
          type: "string"
        "TZ":
          type: "string"
        "TH":
          type: "string"
        "TL":
          type: "string"
        "TG":
          type: "string"
        "TK":
          type: "string"
        "TO":
          type: "string"
        "TT":
          type: "string"
        "TN":
          type: "string"
        "TR":
          type: "string"
        "TM":
          type: "string"
        "TC":
          type: "string"
        "TV":
          type: "string"
        "UG":
          type: "string"
        "UA":
          type: "string"
        "AE":
          type: "string"
        "GB":
          type: "string"
        "US":
          type: "string"
        "UM":
          type: "string"
        "UY":
          type: "string"
        "UZ":
          type: "string"
        "VU":
          type: "string"
        "VE":
          type: "string"
        "VN":
          type: "string"
        "VG":
          type: "string"
        "VI":
          type: "string"
        "WF":
          type: "string"
        "EH":
          type: "string"
        "YE":
          type: "string"
        "ZM":
          type: "string"
        "ZW":
          type: "string"
        "AX":
          type: "string"
        "BQ":
          type: "string"
        "CW":
          type: "string"
        "GG":
          type: "string"
        "IM":
          type: "string"
        "JE":
          type: "string"
        "ME":
          type: "string"
        "BL":
          type: "string"
        "MF":
          type: "string"
        "RS":
          type: "string"
        "SX":
          type: "string"
        "SS":
          type: "string"
        "XK":
          type: "string"
      additionalProperties: false
      description: "Geo targeting information for the short link in JSON format `{[COUNTRY]: https://example.com }`."
    "countryCode":
      type: "string"
      enum:
        - "AF"
        - "AL"
        - "DZ"
        - "AS"
        - "AD"
        - "AO"
        - "AI"
        - "AQ"
        - "AG"
        - "AR"
        - "AM"
        - "AW"
        - "AU"
        - "AT"
        - "AZ"
        - "BS"
        - "BH"
        - "BD"
        - "BB"
        - "BY"
        - "BE"
        - "BZ"
        - "BJ"
        - "BM"
        - "BT"
        - "BO"
        - "BA"
        - "BW"
        - "BV"
        - "BR"
        - "IO"
        - "BN"
        - "BG"
        - "BF"
        - "BI"
        - "KH"
        - "CM"
        - "CA"
        - "CV"
        - "KY"
        - "CF"
        - "TD"
        - "CL"
        - "CN"
        - "CX"
        - "CC"
        - "CO"
        - "KM"
        - "CG"
        - "CD"
        - "CK"
        - "CR"
        - "CI"
        - "HR"
        - "CU"
        - "CY"
        - "CZ"
        - "DK"
        - "DJ"
        - "DM"
        - "DO"
        - "EC"
        - "EG"
        - "SV"
        - "GQ"
        - "ER"
        - "EE"
        - "ET"
        - "FK"
        - "FO"
        - "FJ"
        - "FI"
        - "FR"
        - "GF"
        - "PF"
        - "TF"
        - "GA"
        - "GM"
        - "GE"
        - "DE"
        - "GH"
        - "GI"
        - "GR"
        - "GL"
        - "GD"
        - "GP"
        - "GU"
        - "GT"
        - "GN"
        - "GW"
        - "GY"
        - "HT"
        - "HM"
        - "VA"
        - "HN"
        - "HK"
        - "HU"
        - "IS"
        - "IN"
        - "ID"
        - "IR"
        - "IQ"
        - "IE"
        - "IL"
        - "IT"
        - "JM"
        - "JP"
        - "JO"
        - "KZ"
        - "KE"
        - "KI"
        - "KP"
        - "KR"
        - "KW"
        - "KG"
        - "LA"
        - "LV"
        - "LB"
        - "LS"
        - "LR"
        - "LY"
        - "LI"
        - "LT"
        - "LU"
        - "MO"
        - "MG"
        - "MW"
        - "MY"
        - "MV"
        - "ML"
        - "MT"
        - "MH"
        - "MQ"
        - "MR"
        - "MU"
        - "YT"
        - "MX"
        - "FM"
        - "MD"
        - "MC"
        - "MN"
        - "MS"
        - "MA"
        - "MZ"
        - "MM"
        - "NA"
        - "NR"
        - "NP"
        - "NL"
        - "NC"
        - "NZ"
        - "NI"
        - "NE"
        - "NG"
        - "NU"
        - "NF"
        - "MK"
        - "MP"
        - "NO"
        - "OM"
        - "PK"
        - "PW"
        - "PS"
        - "PA"
        - "PG"
        - "PY"
        - "PE"
        - "PH"
        - "PN"
        - "PL"
        - "PT"
        - "PR"
        - "QA"
        - "RE"
        - "RO"
        - "RU"
        - "RW"
        - "SH"
        - "KN"
        - "LC"
        - "PM"
        - "VC"
        - "WS"
        - "SM"
        - "ST"
        - "SA"
        - "SN"
        - "SC"
        - "SL"
        - "SG"
        - "SK"
        - "SI"
        - "SB"
        - "SO"
        - "ZA"
        - "GS"
        - "ES"
        - "LK"
        - "SD"
        - "SR"
        - "SJ"
        - "SZ"
        - "SE"
        - "CH"
        - "SY"
        - "TW"
        - "TJ"
        - "TZ"
        - "TH"
        - "TL"
        - "TG"
        - "TK"
        - "TO"
        - "TT"
        - "TN"
        - "TR"
        - "TM"
        - "TC"
        - "TV"
        - "UG"
        - "UA"
        - "AE"
        - "GB"
        - "US"
        - "UM"
        - "UY"
        - "UZ"
        - "VU"
        - "VE"
        - "VN"
        - "VG"
        - "VI"
        - "WF"
        - "EH"
        - "YE"
        - "ZM"
        - "ZW"
        - "AX"
        - "BQ"
        - "CW"
        - "GG"
        - "IM"
        - "JE"
        - "ME"
        - "BL"
        - "MF"
        - "RS"
        - "SX"
        - "SS"
        - "XK"
      description: "The country to retrieve analytics for."
    "regionCode":
      type: "string"
      description: "The ISO 3166-2 region code to retrieve analytics for."
    "continentCode":
      type: "string"
      enum:
        - "AF"
        - "AN"
        - "AS"
        - "EU"
        - "NA"
        - "OC"
        - "SA"
      description: "The continent to retrieve analytics for."
    "AnalyticsCount":
      type: "object"
      properties:
        "clicks":
          type: "number"
          description: "The total number of clicks"
          default: 0
        "leads":
          type: "number"
          description: "The total number of leads"
          default: 0
        "sales":
          type: "number"
          description: "The total number of sales"
          default: 0
        "saleAmount":
          type: "number"
          description: "The total amount of sales, in cents"
          default: 0
      required:
        - "clicks"
        - "leads"
        - "sales"
        - "saleAmount"
      title: "AnalyticsCount"
    "AnalyticsTimeseries":
      type: "object"
      properties:
        "start":
          type: "string"
          description: "The starting timestamp of the interval"
        "clicks":
          type: "number"
          description: "The number of clicks in the interval"
          default: 0
        "leads":
          type: "number"
          description: "The number of leads in the interval"
          default: 0
        "sales":
          type: "number"
          description: "The number of sales in the interval"
          default: 0
        "saleAmount":
          type: "number"
          description: "The total amount of sales in the interval, in cents"
          default: 0
      required:
        - "start"
        - "clicks"
        - "leads"
        - "sales"
        - "saleAmount"
    "AnalyticsContinents":
      type: "object"
      properties:
        "continent":
          type: "string"
          enum:
            - "AF"
            - "AN"
            - "AS"
            - "EU"
            - "NA"
            - "OC"
            - "SA"
          description: "The 2-letter ISO 3166-1 code representing the continent associated with the location of the user."
        "clicks":
          type: "number"
          description: "The number of clicks from this continent"
          default: 0
        "leads":
          type: "number"
          description: "The number of leads from this continent"
          default: 0
        "sales":
          type: "number"
          description: "The number of sales from this continent"
          default: 0
        "saleAmount":
          type: "number"
          description: "The total amount of sales from this continent, in cents"
          default: 0
      required:
        - "continent"
        - "clicks"
        - "leads"
        - "sales"
        - "saleAmount"
    "AnalyticsCountries":
      type: "object"
      properties:
        "country":
          type: "string"
          enum:
            - "AF"
            - "AL"
            - "DZ"
            - "AS"
            - "AD"
            - "AO"
            - "AI"
            - "AQ"
            - "AG"
            - "AR"
            - "AM"
            - "AW"
            - "AU"
            - "AT"
            - "AZ"
            - "BS"
            - "BH"
            - "BD"
            - "BB"
            - "BY"
            - "BE"
            - "BZ"
            - "BJ"
            - "BM"
            - "BT"
            - "BO"
            - "BA"
            - "BW"
            - "BV"
            - "BR"
            - "IO"
            - "BN"
            - "BG"
            - "BF"
            - "BI"
            - "KH"
            - "CM"
            - "CA"
            - "CV"
            - "KY"
            - "CF"
            - "TD"
            - "CL"
            - "CN"
            - "CX"
            - "CC"
            - "CO"
            - "KM"
            - "CG"
            - "CD"
            - "CK"
            - "CR"
            - "CI"
            - "HR"
            - "CU"
            - "CY"
            - "CZ"
            - "DK"
            - "DJ"
            - "DM"
            - "DO"
            - "EC"
            - "EG"
            - "SV"
            - "GQ"
            - "ER"
            - "EE"
            - "ET"
            - "FK"
            - "FO"
            - "FJ"
            - "FI"
            - "FR"
            - "GF"
            - "PF"
            - "TF"
            - "GA"
            - "GM"
            - "GE"
            - "DE"
            - "GH"
            - "GI"
            - "GR"
            - "GL"
            - "GD"
            - "GP"
            - "GU"
            - "GT"
            - "GN"
            - "GW"
            - "GY"
            - "HT"
            - "HM"
            - "VA"
            - "HN"
            - "HK"
            - "HU"
            - "IS"
            - "IN"
            - "ID"
            - "IR"
            - "IQ"
            - "IE"
            - "IL"
            - "IT"
            - "JM"
            - "JP"
            - "JO"
            - "KZ"
            - "KE"
            - "KI"
            - "KP"
            - "KR"
            - "KW"
            - "KG"
            - "LA"
            - "LV"
            - "LB"
            - "LS"
            - "LR"
            - "LY"
            - "LI"
            - "LT"
            - "LU"
            - "MO"
            - "MG"
            - "MW"
            - "MY"
            - "MV"
            - "ML"
            - "MT"
            - "MH"
            - "MQ"
            - "MR"
            - "MU"
            - "YT"
            - "MX"
            - "FM"
            - "MD"
            - "MC"
            - "MN"
            - "MS"
            - "MA"
            - "MZ"
            - "MM"
            - "NA"
            - "NR"
            - "NP"
            - "NL"
            - "NC"
            - "NZ"
            - "NI"
            - "NE"
            - "NG"
            - "NU"
            - "NF"
            - "MK"
            - "MP"
            - "NO"
            - "OM"
            - "PK"
            - "PW"
            - "PS"
            - "PA"
            - "PG"
            - "PY"
            - "PE"
            - "PH"
            - "PN"
            - "PL"
            - "PT"
            - "PR"
            - "QA"
            - "RE"
            - "RO"
            - "RU"
            - "RW"
            - "SH"
            - "KN"
            - "LC"
            - "PM"
            - "VC"
            - "WS"
            - "SM"
            - "ST"
            - "SA"
            - "SN"
            - "SC"
            - "SL"
            - "SG"
            - "SK"
            - "SI"
            - "SB"
            - "SO"
            - "ZA"
            - "GS"
            - "ES"
            - "LK"
            - "SD"
            - "SR"
            - "SJ"
            - "SZ"
            - "SE"
            - "CH"
            - "SY"
            - "TW"
            - "TJ"
            - "TZ"
            - "TH"
            - "TL"
            - "TG"
            - "TK"
            - "TO"
            - "TT"
            - "TN"
            - "TR"
            - "TM"
            - "TC"
            - "TV"
            - "UG"
            - "UA"
            - "AE"
            - "GB"
            - "US"
            - "UM"
            - "UY"
            - "UZ"
            - "VU"
            - "VE"
            - "VN"
            - "VG"
            - "VI"
            - "WF"
            - "EH"
            - "YE"
            - "ZM"
            - "ZW"
            - "AX"
            - "BQ"
            - "CW"
            - "GG"
            - "IM"
            - "JE"
            - "ME"
            - "BL"
            - "MF"
            - "RS"
            - "SX"
            - "SS"
            - "XK"
          description: "The 2-letter ISO 3166-1 country code for the country associated with the location of the user. Learn more: https://d.to/geo"
        "city":
          type: "string"
          enum:
            - "*"
          default: "*"
        "clicks":
          type: "number"
          description: "The number of clicks from this country"
          default: 0
        "leads":
          type: "number"
          description: "The number of leads from this country"
          default: 0
        "sales":
          type: "number"
          description: "The number of sales from this country"
          default: 0
        "saleAmount":
          type: "number"
          description: "The total amount of sales from this country, in cents"
          default: 0
      required:
        - "country"
        - "city"
        - "clicks"
        - "leads"
        - "sales"
        - "saleAmount"
    "AnalyticsCities":
      type: "object"
      properties:
        "city":
          type: "string"
          description: "The name of the city"
        "country":
          type: "string"
          enum:
            - "AF"
            - "AL"
            - "DZ"
            - "AS"
            - "AD"
            - "AO"
            - "AI"
            - "AQ"
            - "AG"
            - "AR"
            - "AM"
            - "AW"
            - "AU"
            - "AT"
            - "AZ"
            - "BS"
            - "BH"
            - "BD"
            - "BB"
            - "BY"
            - "BE"
            - "BZ"
            - "BJ"
            - "BM"
            - "BT"
            - "BO"
            - "BA"
            - "BW"
            - "BV"
            - "BR"
            - "IO"
            - "BN"
            - "BG"
            - "BF"
            - "BI"
            - "KH"
            - "CM"
            - "CA"
            - "CV"
            - "KY"
            - "CF"
            - "TD"
            - "CL"
            - "CN"
            - "CX"
            - "CC"
            - "CO"
            - "KM"
            - "CG"
            - "CD"
            - "CK"
            - "CR"
            - "CI"
            - "HR"
            - "CU"
            - "CY"
            - "CZ"
            - "DK"
            - "DJ"
            - "DM"
            - "DO"
            - "EC"
            - "EG"
            - "SV"
            - "GQ"
            - "ER"
            - "EE"
            - "ET"
            - "FK"
            - "FO"
            - "FJ"
            - "FI"
            - "FR"
            - "GF"
            - "PF"
            - "TF"
            - "GA"
            - "GM"
            - "GE"
            - "DE"
            - "GH"
            - "GI"
            - "GR"
            - "GL"
            - "GD"
            - "GP"
            - "GU"
            - "GT"
            - "GN"
            - "GW"
            - "GY"
            - "HT"
            - "HM"
            - "VA"
            - "HN"
            - "HK"
            - "HU"
            - "IS"
            - "IN"
            - "ID"
            - "IR"
            - "IQ"
            - "IE"
            - "IL"
            - "IT"
            - "JM"
            - "JP"
            - "JO"
            - "KZ"
            - "KE"
            - "KI"
            - "KP"
            - "KR"
            - "KW"
            - "KG"
            - "LA"
            - "LV"
            - "LB"
            - "LS"
            - "LR"
            - "LY"
            - "LI"
            - "LT"
            - "LU"
            - "MO"
            - "MG"
            - "MW"
            - "MY"
            - "MV"
            - "ML"
            - "MT"
            - "MH"
            - "MQ"
            - "MR"
            - "MU"
            - "YT"
            - "MX"
            - "FM"
            - "MD"
            - "MC"
            - "MN"
            - "MS"
            - "MA"
            - "MZ"
            - "MM"
            - "NA"
            - "NR"
            - "NP"
            - "NL"
            - "NC"
            - "NZ"
            - "NI"
            - "NE"
            - "NG"
            - "NU"
            - "NF"
            - "MK"
            - "MP"
            - "NO"
            - "OM"
            - "PK"
            - "PW"
            - "PS"
            - "PA"
            - "PG"
            - "PY"
            - "PE"
            - "PH"
            - "PN"
            - "PL"
            - "PT"
            - "PR"
            - "QA"
            - "RE"
            - "RO"
            - "RU"
            - "RW"
            - "SH"
            - "KN"
            - "LC"
            - "PM"
            - "VC"
            - "WS"
            - "SM"
            - "ST"
            - "SA"
            - "SN"
            - "SC"
            - "SL"
            - "SG"
            - "SK"
            - "SI"
            - "SB"
            - "SO"
            - "ZA"
            - "GS"
            - "ES"
            - "LK"
            - "SD"
            - "SR"
            - "SJ"
            - "SZ"
            - "SE"
            - "CH"
            - "SY"
            - "TW"
            - "TJ"
            - "TZ"
            - "TH"
            - "TL"
            - "TG"
            - "TK"
            - "TO"
            - "TT"
            - "TN"
            - "TR"
            - "TM"
            - "TC"
            - "TV"
            - "UG"
            - "UA"
            - "AE"
            - "GB"
            - "US"
            - "UM"
            - "UY"
            - "UZ"
            - "VU"
            - "VE"
            - "VN"
            - "VG"
            - "VI"
            - "WF"
            - "EH"
            - "YE"
            - "ZM"
            - "ZW"
            - "AX"
            - "BQ"
            - "CW"
            - "GG"
            - "IM"
            - "JE"
            - "ME"
            - "BL"
            - "MF"
            - "RS"
            - "SX"
            - "SS"
            - "XK"
          description: "The 2-letter country code of the city: https://d.to/geo"
        "clicks":
          type: "number"
          description: "The number of clicks from this city"
          default: 0
        "leads":
          type: "number"
          description: "The number of leads from this city"
          default: 0
        "sales":
          type: "number"
          description: "The number of sales from this city"
          default: 0
        "saleAmount":
          type: "number"
          description: "The total amount of sales from this city, in cents"
          default: 0
      required:
        - "city"
        - "country"
        - "clicks"
        - "leads"
        - "sales"
        - "saleAmount"
    "AnalyticsDevices":
      type: "object"
      properties:
        "device":
          type: "string"
          description: "The name of the device"
        "clicks":
          type: "number"
          description: "The number of clicks from this device"
          default: 0
        "leads":
          type: "number"
          description: "The number of leads from this device"
          default: 0
        "sales":
          type: "number"
          description: "The number of sales from this device"
          default: 0
        "saleAmount":
          type: "number"
          description: "The total amount of sales from this device, in cents"
          default: 0
      required:
        - "device"
        - "clicks"
        - "leads"
        - "sales"
        - "saleAmount"
    "AnalyticsBrowsers":
      type: "object"
      properties:
        "browser":
          type: "string"
          description: "The name of the browser"
        "clicks":
          type: "number"
          description: "The number of clicks from this browser"
          default: 0
        "leads":
          type: "number"
          description: "The number of leads from this browser"
          default: 0
        "sales":
          type: "number"
          description: "The number of sales from this browser"
          default: 0
        "saleAmount":
          type: "number"
          description: "The total amount of sales from this browser, in cents"
          default: 0
      required:
        - "browser"
        - "clicks"
        - "leads"
        - "sales"
        - "saleAmount"
    "AnalyticsOS":
      type: "object"
      properties:
        "os":
          type: "string"
          description: "The name of the OS"
        "clicks":
          type: "number"
          description: "The number of clicks from this OS"
          default: 0
        "leads":
          type: "number"
          description: "The number of leads from this OS"
          default: 0
        "sales":
          type: "number"
          description: "The number of sales from this OS"
          default: 0
        "saleAmount":
          type: "number"
          description: "The total amount of sales from this OS, in cents"
          default: 0
      required:
        - "os"
        - "clicks"
        - "leads"
        - "sales"
        - "saleAmount"
    "AnalyticsTriggers":
      type: "object"
      properties:
        "trigger":
          type: "string"
          enum:
            - "qr"
            - "link"
          description: "The type of trigger method: link click or QR scan"
        "clicks":
          type: "number"
          description: "The number of clicks from this trigger method"
          default: 0
        "leads":
          type: "number"
          description: "The number of leads from this trigger method"
          default: 0
        "sales":
          type: "number"
          description: "The number of sales from this trigger method"
          default: 0
        "saleAmount":
          type: "number"
          description: "The total amount of sales from this trigger method, in cents"
          default: 0
      required:
        - "trigger"
        - "clicks"
        - "leads"
        - "sales"
        - "saleAmount"
    "AnalyticsReferers":
      type: "object"
      properties:
        "referer":
          type: "string"
          description: "The name of the referer. If unknown, this will be `(direct)`"
        "clicks":
          type: "number"
          description: "The number of clicks from this referer"
          default: 0
        "leads":
          type: "number"
          description: "The number of leads from this referer"
          default: 0
        "sales":
          type: "number"
          description: "The number of sales from this referer"
          default: 0
        "saleAmount":
          type: "number"
          description: "The total amount of sales from this referer, in cents"
          default: 0
      required:
        - "referer"
        - "clicks"
        - "leads"
        - "sales"
        - "saleAmount"
    "AnalyticsRefererUrls":
      type: "object"
      properties:
        "refererUrl":
          type: "string"
          description: "The full URL of the referer. If unknown, this will be `(direct)`"
        "clicks":
          type: "number"
          description: "The number of clicks from this referer to this URL"
          default: 0
        "leads":
          type: "number"
          description: "The number of leads from this referer to this URL"
          default: 0
        "sales":
          type: "number"
          description: "The number of sales from this referer to this URL"
          default: 0
        "saleAmount":
          type: "number"
          description: "The total amount of sales from this referer to this URL, in cents"
          default: 0
      required:
        - "refererUrl"
        - "clicks"
        - "leads"
        - "sales"
        - "saleAmount"
    "AnalyticsTopLinks":
      type: "object"
      properties:
        "link":
          type: "string"
          description: "The unique ID of the short link"
          deprecated: true
        "id":
          type: "string"
          description: "The unique ID of the short link"
        "domain":
          type: "string"
          description: "The domain of the short link"
        "key":
          type: "string"
          description: "The key of the short link"
        "shortLink":
          type: "string"
          description: "The short link URL"
        "url":
          type: "string"
          description: "The destination URL of the short link"
        "createdAt":
          type: "string"
          description: "The creation timestamp of the short link"
        "clicks":
          type: "number"
          description: "The number of clicks from this link"
          default: 0
        "leads":
          type: "number"
          description: "The number of leads from this link"
          default: 0
        "sales":
          type: "number"
          description: "The number of sales from this link"
          default: 0
        "saleAmount":
          type: "number"
          description: "The total amount of sales from this link, in cents"
          default: 0
      required:
        - "link"
        - "id"
        - "domain"
        - "key"
        - "shortLink"
        - "url"
        - "createdAt"
        - "clicks"
        - "leads"
        - "sales"
        - "saleAmount"
    "AnalyticsTopUrls":
      type: "object"
      properties:
        "url":
          type: "string"
          description: "The destination URL"
        "clicks":
          type: "number"
          description: "The number of clicks from this URL"
          default: 0
        "leads":
          type: "number"
          description: "The number of leads from this URL"
          default: 0
        "sales":
          type: "number"
          description: "The number of sales from this URL"
          default: 0
        "saleAmount":
          type: "number"
          description: "The total amount of sales from this URL, in cents"
          default: 0
      required:
        - "url"
        - "clicks"
        - "leads"
        - "sales"
        - "saleAmount"
    "ClickEvent":
      type: "object"
      properties:
        "event":
          type: "string"
          enum:
            - "click"
        "timestamp":
          type: "string"
        "click":
          type: "object"
          properties:
            "id":
              type: "string"
            "url":
              type: "string"
            "country":
              type: "string"
            "city":
              type: "string"
            "region":
              type: "string"
            "continent":
              type: "string"
            "device":
              type: "string"
            "browser":
              type: "string"
            "os":
              type: "string"
            "referer":
              type: "string"
            "refererUrl":
              type: "string"
            "qr":
              type: "boolean"
            "ip":
              type: "string"
          required:
            - "id"
            - "url"
            - "country"
            - "city"
            - "region"
            - "continent"
            - "device"
            - "browser"
            - "os"
            - "referer"
            - "refererUrl"
            - "ip"
        "link":
          type: "object"
          properties:
            "id":
              type: "string"
              description: "The unique ID of the short link."
            "domain":
              type: "string"
              description: "The domain of the short link. If not provided, the primary domain for the workspace will be used (or `dub.sh` if the workspace has no domains)."
            "key":
              type: "string"
              description: "The short link slug. If not provided, a random 7-character slug will be generated."
            "url":
              type: "string"
            "trackConversion":
              type: "boolean"
            "externalId":
              type: "string"
              nullable: true
              description: "The ID of the link in your database. If set, it can be used to identify the link in future API requests (must be prefixed with 'ext_' when passed as a query parameter). This key is unique across your workspace."
            "tenantId":
              type: "string"
              nullable: true
              description: "The ID of the tenant that created the link inside your system. If set, it can be used to fetch all links for a tenant."
            "archived":
              type: "boolean"
            "expiresAt":
              type: "string"
            "expiredUrl":
              type: "string"
              nullable: true
            "password":
              type: "string"
              nullable: true
              description: "The password required to access the destination URL of the short link."
            "proxy":
              type: "boolean"
            "title":
              type: "string"
              nullable: true
              description: "The title of the short link generated via `api.dub.co/metatags`. Will be used for Custom Social Media Cards if `proxy` is true."
            "description":
              type: "string"
              nullable: true
              description: "The description of the short link generated via `api.dub.co/metatags`. Will be used for Custom Social Media Cards if `proxy` is true."
            "image":
              type: "string"
              nullable: true
              description: "The image of the short link generated via `api.dub.co/metatags`. Will be used for Custom Social Media Cards if `proxy` is true."
            "video":
              type: "string"
              nullable: true
              description: "The custom link preview video (og:video). Will be used for Custom Social Media Cards if `proxy` is true. Learn more: https://d.to/og"
            "rewrite":
              type: "boolean"
            "doIndex":
              type: "boolean"
            "ios":
              type: "string"
              nullable: true
              description: "The iOS destination URL for the short link for iOS device targeting."
            "android":
              type: "string"
              nullable: true
              description: "The Android destination URL for the short link for Android device targeting."
            "geo":
              type: "object"
              nullable: true
              properties:
                "AF":
                  type: "string"
                  format: "uri"
                "AL":
                  type: "string"
                  format: "uri"
                "DZ":
                  type: "string"
                  format: "uri"
                "AS":
                  type: "string"
                  format: "uri"
                "AD":
                  type: "string"
                  format: "uri"
                "AO":
                  type: "string"
                  format: "uri"
                "AI":
                  type: "string"
                  format: "uri"
                "AQ":
                  type: "string"
                  format: "uri"
                "AG":
                  type: "string"
                  format: "uri"
                "AR":
                  type: "string"
                  format: "uri"
                "AM":
                  type: "string"
                  format: "uri"
                "AW":
                  type: "string"
                  format: "uri"
                "AU":
                  type: "string"
                  format: "uri"
                "AT":
                  type: "string"
                  format: "uri"
                "AZ":
                  type: "string"
                  format: "uri"
                "BS":
                  type: "string"
                  format: "uri"
                "BH":
                  type: "string"
                  format: "uri"
                "BD":
                  type: "string"
                  format: "uri"
                "BB":
                  type: "string"
                  format: "uri"
                "BY":
                  type: "string"
                  format: "uri"
                "BE":
                  type: "string"
                  format: "uri"
                "BZ":
                  type: "string"
                  format: "uri"
                "BJ":
                  type: "string"
                  format: "uri"
                "BM":
                  type: "string"
                  format: "uri"
                "BT":
                  type: "string"
                  format: "uri"
                "BO":
                  type: "string"
                  format: "uri"
                "BA":
                  type: "string"
                  format: "uri"
                "BW":
                  type: "string"
                  format: "uri"
                "BV":
                  type: "string"
                  format: "uri"
                "BR":
                  type: "string"
                  format: "uri"
                "IO":
                  type: "string"
                  format: "uri"
                "BN":
                  type: "string"
                  format: "uri"
                "BG":
                  type: "string"
                  format: "uri"
                "BF":
                  type: "string"
                  format: "uri"
                "BI":
                  type: "string"
                  format: "uri"
                "KH":
                  type: "string"
                  format: "uri"
                "CM":
                  type: "string"
                  format: "uri"
                "CA":
                  type: "string"
                  format: "uri"
                "CV":
                  type: "string"
                  format: "uri"
                "KY":
                  type: "string"
                  format: "uri"
                "CF":
                  type: "string"
                  format: "uri"
                "TD":
                  type: "string"
                  format: "uri"
                "CL":
                  type: "string"
                  format: "uri"
                "CN":
                  type: "string"
                  format: "uri"
                "CX":
                  type: "string"
                  format: "uri"
                "CC":
                  type: "string"
                  format: "uri"
                "CO":
                  type: "string"
                  format: "uri"
                "KM":
                  type: "string"
                  format: "uri"
                "CG":
                  type: "string"
                  format: "uri"
                "CD":
                  type: "string"
                  format: "uri"
                "CK":
                  type: "string"
                  format: "uri"
                "CR":
                  type: "string"
                  format: "uri"
                "CI":
                  type: "string"
                  format: "uri"
                "HR":
                  type: "string"
                  format: "uri"
                "CU":
                  type: "string"
                  format: "uri"
                "CY":
                  type: "string"
                  format: "uri"
                "CZ":
                  type: "string"
                  format: "uri"
                "DK":
                  type: "string"
                  format: "uri"
                "DJ":
                  type: "string"
                  format: "uri"
                "DM":
                  type: "string"
                  format: "uri"
                "DO":
                  type: "string"
                  format: "uri"
                "EC":
                  type: "string"
                  format: "uri"
                "EG":
                  type: "string"
                  format: "uri"
                "SV":
                  type: "string"
                  format: "uri"
                "GQ":
                  type: "string"
                  format: "uri"
                "ER":
                  type: "string"
                  format: "uri"
                "EE":
                  type: "string"
                  format: "uri"
                "ET":
                  type: "string"
                  format: "uri"
                "FK":
                  type: "string"
                  format: "uri"
                "FO":
                  type: "string"
                  format: "uri"
                "FJ":
                  type: "string"
                  format: "uri"
                "FI":
                  type: "string"
                  format: "uri"
                "FR":
                  type: "string"
                  format: "uri"
                "GF":
                  type: "string"
                  format: "uri"
                "PF":
                  type: "string"
                  format: "uri"
                "TF":
                  type: "string"
                  format: "uri"
                "GA":
                  type: "string"
                  format: "uri"
                "GM":
                  type: "string"
                  format: "uri"
                "GE":
                  type: "string"
                  format: "uri"
                "DE":
                  type: "string"
                  format: "uri"
                "GH":
                  type: "string"
                  format: "uri"
                "GI":
                  type: "string"
                  format: "uri"
                "GR":
                  type: "string"
                  format: "uri"
                "GL":
                  type: "string"
                  format: "uri"
                "GD":
                  type: "string"
                  format: "uri"
                "GP":
                  type: "string"
                  format: "uri"
                "GU":
                  type: "string"
                  format: "uri"
                "GT":
                  type: "string"
                  format: "uri"
                "GN":
                  type: "string"
                  format: "uri"
                "GW":
                  type: "string"
                  format: "uri"
                "GY":
                  type: "string"
                  format: "uri"
                "HT":
                  type: "string"
                  format: "uri"
                "HM":
                  type: "string"
                  format: "uri"
                "VA":
                  type: "string"
                  format: "uri"
                "HN":
                  type: "string"
                  format: "uri"
                "HK":
                  type: "string"
                  format: "uri"
                "HU":
                  type: "string"
                  format: "uri"
                "IS":
                  type: "string"
                  format: "uri"
                "IN":
                  type: "string"
                  format: "uri"
                "ID":
                  type: "string"
                  format: "uri"
                "IR":
                  type: "string"
                  format: "uri"
                "IQ":
                  type: "string"
                  format: "uri"
                "IE":
                  type: "string"
                  format: "uri"
                "IL":
                  type: "string"
                  format: "uri"
                "IT":
                  type: "string"
                  format: "uri"
                "JM":
                  type: "string"
                  format: "uri"
                "JP":
                  type: "string"
                  format: "uri"
                "JO":
                  type: "string"
                  format: "uri"
                "KZ":
                  type: "string"
                  format: "uri"
                "KE":
                  type: "string"
                  format: "uri"
                "KI":
                  type: "string"
                  format: "uri"
                "KP":
                  type: "string"
                  format: "uri"
                "KR":
                  type: "string"
                  format: "uri"
                "KW":
                  type: "string"
                  format: "uri"
                "KG":
                  type: "string"
                  format: "uri"
                "LA":
                  type: "string"
                  format: "uri"
                "LV":
                  type: "string"
                  format: "uri"
                "LB":
                  type: "string"
                  format: "uri"
                "LS":
                  type: "string"
                  format: "uri"
                "LR":
                  type: "string"
                  format: "uri"
                "LY":
                  type: "string"
                  format: "uri"
                "LI":
                  type: "string"
                  format: "uri"
                "LT":
                  type: "string"
                  format: "uri"
                "LU":
                  type: "string"
                  format: "uri"
                "MO":
                  type: "string"
                  format: "uri"
                "MG":
                  type: "string"
                  format: "uri"
                "MW":
                  type: "string"
                  format: "uri"
                "MY":
                  type: "string"
                  format: "uri"
                "MV":
                  type: "string"
                  format: "uri"
                "ML":
                  type: "string"
                  format: "uri"
                "MT":
                  type: "string"
                  format: "uri"
                "MH":
                  type: "string"
                  format: "uri"
                "MQ":
                  type: "string"
                  format: "uri"
                "MR":
                  type: "string"
                  format: "uri"
                "MU":
                  type: "string"
                  format: "uri"
                "YT":
                  type: "string"
                  format: "uri"
                "MX":
                  type: "string"
                  format: "uri"
                "FM":
                  type: "string"
                  format: "uri"
                "MD":
                  type: "string"
                  format: "uri"
                "MC":
                  type: "string"
                  format: "uri"
                "MN":
                  type: "string"
                  format: "uri"
                "MS":
                  type: "string"
                  format: "uri"
                "MA":
                  type: "string"
                  format: "uri"
                "MZ":
                  type: "string"
                  format: "uri"
                "MM":
                  type: "string"
                  format: "uri"
                "NA":
                  type: "string"
                  format: "uri"
                "NR":
                  type: "string"
                  format: "uri"
                "NP":
                  type: "string"
                  format: "uri"
                "NL":
                  type: "string"
                  format: "uri"
                "NC":
                  type: "string"
                  format: "uri"
                "NZ":
                  type: "string"
                  format: "uri"
                "NI":
                  type: "string"
                  format: "uri"
                "NE":
                  type: "string"
                  format: "uri"
                "NG":
                  type: "string"
                  format: "uri"
                "NU":
                  type: "string"
                  format: "uri"
                "NF":
                  type: "string"
                  format: "uri"
                "MK":
                  type: "string"
                  format: "uri"
                "MP":
                  type: "string"
                  format: "uri"
                "NO":
                  type: "string"
                  format: "uri"
                "OM":
                  type: "string"
                  format: "uri"
                "PK":
                  type: "string"
                  format: "uri"
                "PW":
                  type: "string"
                  format: "uri"
                "PS":
                  type: "string"
                  format: "uri"
                "PA":
                  type: "string"
                  format: "uri"
                "PG":
                  type: "string"
                  format: "uri"
                "PY":
                  type: "string"
                  format: "uri"
                "PE":
                  type: "string"
                  format: "uri"
                "PH":
                  type: "string"
                  format: "uri"
                "PN":
                  type: "string"
                  format: "uri"
                "PL":
                  type: "string"
                  format: "uri"
                "PT":
                  type: "string"
                  format: "uri"
                "PR":
                  type: "string"
                  format: "uri"
                "QA":
                  type: "string"
                  format: "uri"
                "RE":
                  type: "string"
                  format: "uri"
                "RO":
                  type: "string"
                  format: "uri"
                "RU":
                  type: "string"
                  format: "uri"
                "RW":
                  type: "string"
                  format: "uri"
                "SH":
                  type: "string"
                  format: "uri"
                "KN":
                  type: "string"
                  format: "uri"
                "LC":
                  type: "string"
                  format: "uri"
                "PM":
                  type: "string"
                  format: "uri"
                "VC":
                  type: "string"
                  format: "uri"
                "WS":
                  type: "string"
                  format: "uri"
                "SM":
                  type: "string"
                  format: "uri"
                "ST":
                  type: "string"
                  format: "uri"
                "SA":
                  type: "string"
                  format: "uri"
                "SN":
                  type: "string"
                  format: "uri"
                "SC":
                  type: "string"
                  format: "uri"
                "SL":
                  type: "string"
                  format: "uri"
                "SG":
                  type: "string"
                  format: "uri"
                "SK":
                  type: "string"
                  format: "uri"
                "SI":
                  type: "string"
                  format: "uri"
                "SB":
                  type: "string"
                  format: "uri"
                "SO":
                  type: "string"
                  format: "uri"
                "ZA":
                  type: "string"
                  format: "uri"
                "GS":
                  type: "string"
                  format: "uri"
                "ES":
                  type: "string"
                  format: "uri"
                "LK":
                  type: "string"
                  format: "uri"
                "SD":
                  type: "string"
                  format: "uri"
                "SR":
                  type: "string"
                  format: "uri"
                "SJ":
                  type: "string"
                  format: "uri"
                "SZ":
                  type: "string"
                  format: "uri"
                "SE":
                  type: "string"
                  format: "uri"
                "CH":
                  type: "string"
                  format: "uri"
                "SY":
                  type: "string"
                  format: "uri"
                "TW":
                  type: "string"
                  format: "uri"
                "TJ":
                  type: "string"
                  format: "uri"
                "TZ":
                  type: "string"
                  format: "uri"
                "TH":
                  type: "string"
                  format: "uri"
                "TL":
                  type: "string"
                  format: "uri"
                "TG":
                  type: "string"
                  format: "uri"
                "TK":
                  type: "string"
                  format: "uri"
                "TO":
                  type: "string"
                  format: "uri"
                "TT":
                  type: "string"
                  format: "uri"
                "TN":
                  type: "string"
                  format: "uri"
                "TR":
                  type: "string"
                  format: "uri"
                "TM":
                  type: "string"
                  format: "uri"
                "TC":
                  type: "string"
                  format: "uri"
                "TV":
                  type: "string"
                  format: "uri"
                "UG":
                  type: "string"
                  format: "uri"
                "UA":
                  type: "string"
                  format: "uri"
                "AE":
                  type: "string"
                  format: "uri"
                "GB":
                  type: "string"
                  format: "uri"
                "US":
                  type: "string"
                  format: "uri"
                "UM":
                  type: "string"
                  format: "uri"
                "UY":
                  type: "string"
                  format: "uri"
                "UZ":
                  type: "string"
                  format: "uri"
                "VU":
                  type: "string"
                  format: "uri"
                "VE":
                  type: "string"
                  format: "uri"
                "VN":
                  type: "string"
                  format: "uri"
                "VG":
                  type: "string"
                  format: "uri"
                "VI":
                  type: "string"
                  format: "uri"
                "WF":
                  type: "string"
                  format: "uri"
                "EH":
                  type: "string"
                  format: "uri"
                "YE":
                  type: "string"
                  format: "uri"
                "ZM":
                  type: "string"
                  format: "uri"
                "ZW":
                  type: "string"
                  format: "uri"
                "AX":
                  type: "string"
                  format: "uri"
                "BQ":
                  type: "string"
                  format: "uri"
                "CW":
                  type: "string"
                  format: "uri"
                "GG":
                  type: "string"
                  format: "uri"
                "IM":
                  type: "string"
                  format: "uri"
                "JE":
                  type: "string"
                  format: "uri"
                "ME":
                  type: "string"
                  format: "uri"
                "BL":
                  type: "string"
                  format: "uri"
                "MF":
                  type: "string"
                  format: "uri"
                "RS":
                  type: "string"
                  format: "uri"
                "SX":
                  type: "string"
                  format: "uri"
                "SS":
                  type: "string"
                  format: "uri"
                "XK":
                  type: "string"
                  format: "uri"
              additionalProperties: false
              description: "Geo targeting information for the short link in JSON format `{[COUNTRY]: https://example.com }`. Learn more: https://d.to/geo"
            "publicStats":
              type: "boolean"
            "tagId":
              type: "string"
              nullable: true
              description: "The unique ID of the tag assigned to the short link. This field is deprecated – use `tags` instead."
              deprecated: true
            "tags":
              type: "array"
              nullable: true
              items: {"$ref": "#/components/schemas/TagSchema"}
              description: "The tags assigned to the short link."
            "webhookIds":
              type: "array"
              items:
                type: "string"
              description: "The IDs of the webhooks that the short link is associated with."
            "comments":
              type: "string"
              nullable: true
              description: "The comments for the short link."
            "shortLink":
              type: "string"
              format: "uri"
              description: "The full URL of the short link, including the https protocol (e.g. `https://dub.sh/try`)."
            "qrCode":
              type: "string"
              format: "uri"
              description: "The full URL of the QR code for the short link (e.g. `https://api.dub.co/qr?url=https://dub.sh/try`)."
            "utm_source":
              type: "string"
              nullable: true
              description: "The UTM source of the short link."
            "utm_medium":
              type: "string"
              nullable: true
              description: "The UTM medium of the short link."
            "utm_campaign":
              type: "string"
              nullable: true
              description: "The UTM campaign of the short link."
            "utm_term":
              type: "string"
              nullable: true
              description: "The UTM term of the short link."
            "utm_content":
              type: "string"
              nullable: true
              description: "The UTM content of the short link."
            "userId":
              type: "string"
              nullable: true
            "workspaceId":
              type: "string"
              description: "The workspace ID of the short link."
            "clicks":
              type: "number"
              default: 0
              description: "The number of clicks on the short link."
            "lastClicked":
              type: "string"
            "leads":
              type: "number"
              default: 0
              description: "The number of leads the short links has generated."
            "sales":
              type: "number"
              default: 0
              description: "The number of sales the short links has generated."
            "saleAmount":
              type: "number"
              default: 0
              description: "The total dollar amount of sales the short links has generated (in cents)."
            "createdAt":
              type: "string"
            "updatedAt":
              type: "string"
            "projectId":
              type: "string"
              description: "The project ID of the short link. This field is deprecated – use `workspaceId` instead."
              deprecated: true
            "programId":
              type: "string"
              nullable: true
              description: "The ID of the program the short link is associated with."
          required:
            - "id"
            - "domain"
            - "key"
            - "url"
            - "externalId"
            - "tenantId"
            - "expiresAt"
            - "expiredUrl"
            - "password"
            - "title"
            - "description"
            - "image"
            - "video"
            - "ios"
            - "android"
            - "geo"
            - "tagId"
            - "tags"
            - "webhookIds"
            - "comments"
            - "shortLink"
            - "qrCode"
            - "utm_source"
            - "utm_medium"
            - "utm_campaign"
            - "utm_term"
            - "utm_content"
            - "userId"
            - "workspaceId"
            - "clicks"
            - "lastClicked"
            - "leads"
            - "sales"
            - "saleAmount"
            - "createdAt"
            - "updatedAt"
            - "projectId"
            - "programId"
        "click_id":
          type: "string"
          description: "Deprecated. Use `click.id` instead."
          deprecated: true
        "link_id":
          type: "string"
          description: "Deprecated. Use `link.id` instead."
          deprecated: true
        "domain":
          type: "string"
          description: "Deprecated. Use `link.domain` instead."
          deprecated: true
        "key":
          type: "string"
          description: "Deprecated. Use `link.key` instead."
          deprecated: true
        "url":
          type: "string"
          description: "Deprecated. Use `click.url` instead."
          deprecated: true
        "continent":
          type: "string"
          description: "Deprecated. Use `click.continent` instead."
          deprecated: true
        "country":
          type: "string"
          description: "Deprecated. Use `click.country` instead."
          deprecated: true
        "city":
          type: "string"
          description: "Deprecated. Use `click.city` instead."
          deprecated: true
        "device":
          type: "string"
          description: "Deprecated. Use `click.device` instead."
          deprecated: true
        "browser":
          type: "string"
          description: "Deprecated. Use `click.browser` instead."
          deprecated: true
        "os":
          type: "string"
          description: "Deprecated. Use `click.os` instead."
          deprecated: true
        "qr":
          type: "number"
          description: "Deprecated. Use `click.qr` instead."
          deprecated: true
        "ip":
          type: "string"
          description: "Deprecated. Use `click.ip` instead."
          deprecated: true
      required:
        - "event"
        - "click"
        - "link"
        - "click_id"
        - "link_id"
        - "domain"
        - "key"
        - "url"
        - "continent"
        - "country"
        - "city"
        - "device"
        - "browser"
        - "os"
        - "qr"
        - "ip"
    "LeadEvent":
      type: "object"
      properties:
        "event":
          type: "string"
          enum:
            - "lead"
        "timestamp":
          type: "string"
        "eventId":
          type: "string"
        "eventName":
          type: "string"
        "click":
          type: "object"
          properties:
            "id":
              type: "string"
            "url":
              type: "string"
            "country":
              type: "string"
            "city":
              type: "string"
            "region":
              type: "string"
            "continent":
              type: "string"
            "device":
              type: "string"
            "browser":
              type: "string"
            "os":
              type: "string"
            "referer":
              type: "string"
            "refererUrl":
              type: "string"
            "qr":
              type: "boolean"
            "ip":
              type: "string"
          required:
            - "id"
            - "url"
            - "country"
            - "city"
            - "region"
            - "continent"
            - "device"
            - "browser"
            - "os"
            - "referer"
            - "refererUrl"
            - "ip"
        "link":
          type: "object"
          properties:
            "id":
              type: "string"
              description: "The unique ID of the short link."
            "domain":
              type: "string"
              description: "The domain of the short link. If not provided, the primary domain for the workspace will be used (or `dub.sh` if the workspace has no domains)."
            "key":
              type: "string"
              description: "The short link slug. If not provided, a random 7-character slug will be generated."
            "url":
              type: "string"
            "trackConversion":
              type: "boolean"
            "externalId":
              type: "string"
              nullable: true
              description: "The ID of the link in your database. If set, it can be used to identify the link in future API requests (must be prefixed with 'ext_' when passed as a query parameter). This key is unique across your workspace."
            "tenantId":
              type: "string"
              nullable: true
              description: "The ID of the tenant that created the link inside your system. If set, it can be used to fetch all links for a tenant."
            "archived":
              type: "boolean"
            "expiresAt":
              type: "string"
            "expiredUrl":
              type: "string"
              nullable: true
            "password":
              type: "string"
              nullable: true
              description: "The password required to access the destination URL of the short link."
            "proxy":
              type: "boolean"
            "title":
              type: "string"
              nullable: true
              description: "The title of the short link generated via `api.dub.co/metatags`. Will be used for Custom Social Media Cards if `proxy` is true."
            "description":
              type: "string"
              nullable: true
              description: "The description of the short link generated via `api.dub.co/metatags`. Will be used for Custom Social Media Cards if `proxy` is true."
            "image":
              type: "string"
              nullable: true
              description: "The image of the short link generated via `api.dub.co/metatags`. Will be used for Custom Social Media Cards if `proxy` is true."
            "video":
              type: "string"
              nullable: true
              description: "The custom link preview video (og:video). Will be used for Custom Social Media Cards if `proxy` is true. Learn more: https://d.to/og"
            "rewrite":
              type: "boolean"
            "doIndex":
              type: "boolean"
            "ios":
              type: "string"
              nullable: true
              description: "The iOS destination URL for the short link for iOS device targeting."
            "android":
              type: "string"
              nullable: true
              description: "The Android destination URL for the short link for Android device targeting."
            "geo":
              type: "object"
              nullable: true
              properties:
                "AF":
                  type: "string"
                  format: "uri"
                "AL":
                  type: "string"
                  format: "uri"
                "DZ":
                  type: "string"
                  format: "uri"
                "AS":
                  type: "string"
                  format: "uri"
                "AD":
                  type: "string"
                  format: "uri"
                "AO":
                  type: "string"
                  format: "uri"
                "AI":
                  type: "string"
                  format: "uri"
                "AQ":
                  type: "string"
                  format: "uri"
                "AG":
                  type: "string"
                  format: "uri"
                "AR":
                  type: "string"
                  format: "uri"
                "AM":
                  type: "string"
                  format: "uri"
                "AW":
                  type: "string"
                  format: "uri"
                "AU":
                  type: "string"
                  format: "uri"
                "AT":
                  type: "string"
                  format: "uri"
                "AZ":
                  type: "string"
                  format: "uri"
                "BS":
                  type: "string"
                  format: "uri"
                "BH":
                  type: "string"
                  format: "uri"
                "BD":
                  type: "string"
                  format: "uri"
                "BB":
                  type: "string"
                  format: "uri"
                "BY":
                  type: "string"
                  format: "uri"
                "BE":
                  type: "string"
                  format: "uri"
                "BZ":
                  type: "string"
                  format: "uri"
                "BJ":
                  type: "string"
                  format: "uri"
                "BM":
                  type: "string"
                  format: "uri"
                "BT":
                  type: "string"
                  format: "uri"
                "BO":
                  type: "string"
                  format: "uri"
                "BA":
                  type: "string"
                  format: "uri"
                "BW":
                  type: "string"
                  format: "uri"
                "BV":
                  type: "string"
                  format: "uri"
                "BR":
                  type: "string"
                  format: "uri"
                "IO":
                  type: "string"
                  format: "uri"
                "BN":
                  type: "string"
                  format: "uri"
                "BG":
                  type: "string"
                  format: "uri"
                "BF":
                  type: "string"
                  format: "uri"
                "BI":
                  type: "string"
                  format: "uri"
                "KH":
                  type: "string"
                  format: "uri"
                "CM":
                  type: "string"
                  format: "uri"
                "CA":
                  type: "string"
                  format: "uri"
                "CV":
                  type: "string"
                  format: "uri"
                "KY":
                  type: "string"
                  format: "uri"
                "CF":
                  type: "string"
                  format: "uri"
                "TD":
                  type: "string"
                  format: "uri"
                "CL":
                  type: "string"
                  format: "uri"
                "CN":
                  type: "string"
                  format: "uri"
                "CX":
                  type: "string"
                  format: "uri"
                "CC":
                  type: "string"
                  format: "uri"
                "CO":
                  type: "string"
                  format: "uri"
                "KM":
                  type: "string"
                  format: "uri"
                "CG":
                  type: "string"
                  format: "uri"
                "CD":
                  type: "string"
                  format: "uri"
                "CK":
                  type: "string"
                  format: "uri"
                "CR":
                  type: "string"
                  format: "uri"
                "CI":
                  type: "string"
                  format: "uri"
                "HR":
                  type: "string"
                  format: "uri"
                "CU":
                  type: "string"
                  format: "uri"
                "CY":
                  type: "string"
                  format: "uri"
                "CZ":
                  type: "string"
                  format: "uri"
                "DK":
                  type: "string"
                  format: "uri"
                "DJ":
                  type: "string"
                  format: "uri"
                "DM":
                  type: "string"
                  format: "uri"
                "DO":
                  type: "string"
                  format: "uri"
                "EC":
                  type: "string"
                  format: "uri"
                "EG":
                  type: "string"
                  format: "uri"
                "SV":
                  type: "string"
                  format: "uri"
                "GQ":
                  type: "string"
                  format: "uri"
                "ER":
                  type: "string"
                  format: "uri"
                "EE":
                  type: "string"
                  format: "uri"
                "ET":
                  type: "string"
                  format: "uri"
                "FK":
                  type: "string"
                  format: "uri"
                "FO":
                  type: "string"
                  format: "uri"
                "FJ":
                  type: "string"
                  format: "uri"
                "FI":
                  type: "string"
                  format: "uri"
                "FR":
                  type: "string"
                  format: "uri"
                "GF":
                  type: "string"
                  format: "uri"
                "PF":
                  type: "string"
                  format: "uri"
                "TF":
                  type: "string"
                  format: "uri"
                "GA":
                  type: "string"
                  format: "uri"
                "GM":
                  type: "string"
                  format: "uri"
                "GE":
                  type: "string"
                  format: "uri"
                "DE":
                  type: "string"
                  format: "uri"
                "GH":
                  type: "string"
                  format: "uri"
                "GI":
                  type: "string"
                  format: "uri"
                "GR":
                  type: "string"
                  format: "uri"
                "GL":
                  type: "string"
                  format: "uri"
                "GD":
                  type: "string"
                  format: "uri"
                "GP":
                  type: "string"
                  format: "uri"
                "GU":
                  type: "string"
                  format: "uri"
                "GT":
                  type: "string"
                  format: "uri"
                "GN":
                  type: "string"
                  format: "uri"
                "GW":
                  type: "string"
                  format: "uri"
                "GY":
                  type: "string"
                  format: "uri"
                "HT":
                  type: "string"
                  format: "uri"
                "HM":
                  type: "string"
                  format: "uri"
                "VA":
                  type: "string"
                  format: "uri"
                "HN":
                  type: "string"
                  format: "uri"
                "HK":
                  type: "string"
                  format: "uri"
                "HU":
                  type: "string"
                  format: "uri"
                "IS":
                  type: "string"
                  format: "uri"
                "IN":
                  type: "string"
                  format: "uri"
                "ID":
                  type: "string"
                  format: "uri"
                "IR":
                  type: "string"
                  format: "uri"
                "IQ":
                  type: "string"
                  format: "uri"
                "IE":
                  type: "string"
                  format: "uri"
                "IL":
                  type: "string"
                  format: "uri"
                "IT":
                  type: "string"
                  format: "uri"
                "JM":
                  type: "string"
                  format: "uri"
                "JP":
                  type: "string"
                  format: "uri"
                "JO":
                  type: "string"
                  format: "uri"
                "KZ":
                  type: "string"
                  format: "uri"
                "KE":
                  type: "string"
                  format: "uri"
                "KI":
                  type: "string"
                  format: "uri"
                "KP":
                  type: "string"
                  format: "uri"
                "KR":
                  type: "string"
                  format: "uri"
                "KW":
                  type: "string"
                  format: "uri"
                "KG":
                  type: "string"
                  format: "uri"
                "LA":
                  type: "string"
                  format: "uri"
                "LV":
                  type: "string"
                  format: "uri"
                "LB":
                  type: "string"
                  format: "uri"
                "LS":
                  type: "string"
                  format: "uri"
                "LR":
                  type: "string"
                  format: "uri"
                "LY":
                  type: "string"
                  format: "uri"
                "LI":
                  type: "string"
                  format: "uri"
                "LT":
                  type: "string"
                  format: "uri"
                "LU":
                  type: "string"
                  format: "uri"
                "MO":
                  type: "string"
                  format: "uri"
                "MG":
                  type: "string"
                  format: "uri"
                "MW":
                  type: "string"
                  format: "uri"
                "MY":
                  type: "string"
                  format: "uri"
                "MV":
                  type: "string"
                  format: "uri"
                "ML":
                  type: "string"
                  format: "uri"
                "MT":
                  type: "string"
                  format: "uri"
                "MH":
                  type: "string"
                  format: "uri"
                "MQ":
                  type: "string"
                  format: "uri"
                "MR":
                  type: "string"
                  format: "uri"
                "MU":
                  type: "string"
                  format: "uri"
                "YT":
                  type: "string"
                  format: "uri"
                "MX":
                  type: "string"
                  format: "uri"
                "FM":
                  type: "string"
                  format: "uri"
                "MD":
                  type: "string"
                  format: "uri"
                "MC":
                  type: "string"
                  format: "uri"
                "MN":
                  type: "string"
                  format: "uri"
                "MS":
                  type: "string"
                  format: "uri"
                "MA":
                  type: "string"
                  format: "uri"
                "MZ":
                  type: "string"
                  format: "uri"
                "MM":
                  type: "string"
                  format: "uri"
                "NA":
                  type: "string"
                  format: "uri"
                "NR":
                  type: "string"
                  format: "uri"
                "NP":
                  type: "string"
                  format: "uri"
                "NL":
                  type: "string"
                  format: "uri"
                "NC":
                  type: "string"
                  format: "uri"
                "NZ":
                  type: "string"
                  format: "uri"
                "NI":
                  type: "string"
                  format: "uri"
                "NE":
                  type: "string"
                  format: "uri"
                "NG":
                  type: "string"
                  format: "uri"
                "NU":
                  type: "string"
                  format: "uri"
                "NF":
                  type: "string"
                  format: "uri"
                "MK":
                  type: "string"
                  format: "uri"
                "MP":
                  type: "string"
                  format: "uri"
                "NO":
                  type: "string"
                  format: "uri"
                "OM":
                  type: "string"
                  format: "uri"
                "PK":
                  type: "string"
                  format: "uri"
                "PW":
                  type: "string"
                  format: "uri"
                "PS":
                  type: "string"
                  format: "uri"
                "PA":
                  type: "string"
                  format: "uri"
                "PG":
                  type: "string"
                  format: "uri"
                "PY":
                  type: "string"
                  format: "uri"
                "PE":
                  type: "string"
                  format: "uri"
                "PH":
                  type: "string"
                  format: "uri"
                "PN":
                  type: "string"
                  format: "uri"
                "PL":
                  type: "string"
                  format: "uri"
                "PT":
                  type: "string"
                  format: "uri"
                "PR":
                  type: "string"
                  format: "uri"
                "QA":
                  type: "string"
                  format: "uri"
                "RE":
                  type: "string"
                  format: "uri"
                "RO":
                  type: "string"
                  format: "uri"
                "RU":
                  type: "string"
                  format: "uri"
                "RW":
                  type: "string"
                  format: "uri"
                "SH":
                  type: "string"
                  format: "uri"
                "KN":
                  type: "string"
                  format: "uri"
                "LC":
                  type: "string"
                  format: "uri"
                "PM":
                  type: "string"
                  format: "uri"
                "VC":
                  type: "string"
                  format: "uri"
                "WS":
                  type: "string"
                  format: "uri"
                "SM":
                  type: "string"
                  format: "uri"
                "ST":
                  type: "string"
                  format: "uri"
                "SA":
                  type: "string"
                  format: "uri"
                "SN":
                  type: "string"
                  format: "uri"
                "SC":
                  type: "string"
                  format: "uri"
                "SL":
                  type: "string"
                  format: "uri"
                "SG":
                  type: "string"
                  format: "uri"
                "SK":
                  type: "string"
                  format: "uri"
                "SI":
                  type: "string"
                  format: "uri"
                "SB":
                  type: "string"
                  format: "uri"
                "SO":
                  type: "string"
                  format: "uri"
                "ZA":
                  type: "string"
                  format: "uri"
                "GS":
                  type: "string"
                  format: "uri"
                "ES":
                  type: "string"
                  format: "uri"
                "LK":
                  type: "string"
                  format: "uri"
                "SD":
                  type: "string"
                  format: "uri"
                "SR":
                  type: "string"
                  format: "uri"
                "SJ":
                  type: "string"
                  format: "uri"
                "SZ":
                  type: "string"
                  format: "uri"
                "SE":
                  type: "string"
                  format: "uri"
                "CH":
                  type: "string"
                  format: "uri"
                "SY":
                  type: "string"
                  format: "uri"
                "TW":
                  type: "string"
                  format: "uri"
                "TJ":
                  type: "string"
                  format: "uri"
                "TZ":
                  type: "string"
                  format: "uri"
                "TH":
                  type: "string"
                  format: "uri"
                "TL":
                  type: "string"
                  format: "uri"
                "TG":
                  type: "string"
                  format: "uri"
                "TK":
                  type: "string"
                  format: "uri"
                "TO":
                  type: "string"
                  format: "uri"
                "TT":
                  type: "string"
                  format: "uri"
                "TN":
                  type: "string"
                  format: "uri"
                "TR":
                  type: "string"
                  format: "uri"
                "TM":
                  type: "string"
                  format: "uri"
                "TC":
                  type: "string"
                  format: "uri"
                "TV":
                  type: "string"
                  format: "uri"
                "UG":
                  type: "string"
                  format: "uri"
                "UA":
                  type: "string"
                  format: "uri"
                "AE":
                  type: "string"
                  format: "uri"
                "GB":
                  type: "string"
                  format: "uri"
                "US":
                  type: "string"
                  format: "uri"
                "UM":
                  type: "string"
                  format: "uri"
                "UY":
                  type: "string"
                  format: "uri"
                "UZ":
                  type: "string"
                  format: "uri"
                "VU":
                  type: "string"
                  format: "uri"
                "VE":
                  type: "string"
                  format: "uri"
                "VN":
                  type: "string"
                  format: "uri"
                "VG":
                  type: "string"
                  format: "uri"
                "VI":
                  type: "string"
                  format: "uri"
                "WF":
                  type: "string"
                  format: "uri"
                "EH":
                  type: "string"
                  format: "uri"
                "YE":
                  type: "string"
                  format: "uri"
                "ZM":
                  type: "string"
                  format: "uri"
                "ZW":
                  type: "string"
                  format: "uri"
                "AX":
                  type: "string"
                  format: "uri"
                "BQ":
                  type: "string"
                  format: "uri"
                "CW":
                  type: "string"
                  format: "uri"
                "GG":
                  type: "string"
                  format: "uri"
                "IM":
                  type: "string"
                  format: "uri"
                "JE":
                  type: "string"
                  format: "uri"
                "ME":
                  type: "string"
                  format: "uri"
                "BL":
                  type: "string"
                  format: "uri"
                "MF":
                  type: "string"
                  format: "uri"
                "RS":
                  type: "string"
                  format: "uri"
                "SX":
                  type: "string"
                  format: "uri"
                "SS":
                  type: "string"
                  format: "uri"
                "XK":
                  type: "string"
                  format: "uri"
              additionalProperties: false
              description: "Geo targeting information for the short link in JSON format `{[COUNTRY]: https://example.com }`. Learn more: https://d.to/geo"
            "publicStats":
              type: "boolean"
            "tagId":
              type: "string"
              nullable: true
              description: "The unique ID of the tag assigned to the short link. This field is deprecated – use `tags` instead."
              deprecated: true
            "tags":
              type: "array"
              nullable: true
              items: {"$ref": "#/components/schemas/TagSchema"}
              description: "The tags assigned to the short link."
            "webhookIds":
              type: "array"
              items:
                type: "string"
              description: "The IDs of the webhooks that the short link is associated with."
            "comments":
              type: "string"
              nullable: true
              description: "The comments for the short link."
            "shortLink":
              type: "string"
              format: "uri"
              description: "The full URL of the short link, including the https protocol (e.g. `https://dub.sh/try`)."
            "qrCode":
              type: "string"
              format: "uri"
              description: "The full URL of the QR code for the short link (e.g. `https://api.dub.co/qr?url=https://dub.sh/try`)."
            "utm_source":
              type: "string"
              nullable: true
              description: "The UTM source of the short link."
            "utm_medium":
              type: "string"
              nullable: true
              description: "The UTM medium of the short link."
            "utm_campaign":
              type: "string"
              nullable: true
              description: "The UTM campaign of the short link."
            "utm_term":
              type: "string"
              nullable: true
              description: "The UTM term of the short link."
            "utm_content":
              type: "string"
              nullable: true
              description: "The UTM content of the short link."
            "userId":
              type: "string"
              nullable: true
            "workspaceId":
              type: "string"
              description: "The workspace ID of the short link."
            "clicks":
              type: "number"
              default: 0
              description: "The number of clicks on the short link."
            "lastClicked":
              type: "string"
            "leads":
              type: "number"
              default: 0
              description: "The number of leads the short links has generated."
            "sales":
              type: "number"
              default: 0
              description: "The number of sales the short links has generated."
            "saleAmount":
              type: "number"
              default: 0
              description: "The total dollar amount of sales the short links has generated (in cents)."
            "createdAt":
              type: "string"
            "updatedAt":
              type: "string"
            "projectId":
              type: "string"
              description: "The project ID of the short link. This field is deprecated – use `workspaceId` instead."
              deprecated: true
            "programId":
              type: "string"
              nullable: true
              description: "The ID of the program the short link is associated with."
          required:
            - "id"
            - "domain"
            - "key"
            - "url"
            - "externalId"
            - "tenantId"
            - "expiresAt"
            - "expiredUrl"
            - "password"
            - "title"
            - "description"
            - "image"
            - "video"
            - "ios"
            - "android"
            - "geo"
            - "tagId"
            - "tags"
            - "webhookIds"
            - "comments"
            - "shortLink"
            - "qrCode"
            - "utm_source"
            - "utm_medium"
            - "utm_campaign"
            - "utm_term"
            - "utm_content"
            - "userId"
            - "workspaceId"
            - "clicks"
            - "lastClicked"
            - "leads"
            - "sales"
            - "saleAmount"
            - "createdAt"
            - "updatedAt"
            - "projectId"
            - "programId"
        "customer":
          type: "object"
          properties:
            "id":
              type: "string"
              description: "The unique identifier of the customer in Dub."
            "externalId":
              type: "string"
              description: "Unique identifier for the customer in the client's app."
            "name":
              type: "string"
              description: "Name of the customer."
            "email":
              type: "string"
              nullable: true
              description: "Email of the customer."
            "avatar":
              type: "string"
              nullable: true
              description: "Avatar URL of the customer."
            "country":
              type: "string"
              nullable: true
              description: "Country of the customer."
            "createdAt":
              type: "string"
              description: "The date the customer was created."
            "link":
              type: "object"
              nullable: true
              properties:
                "id":
                  type: "string"
                  description: "The unique ID of the short link."
                "domain":
                  type: "string"
                  description: "The domain of the short link. If not provided, the primary domain for the workspace will be used (or `dub.sh` if the workspace has no domains)."
                "key":
                  type: "string"
                  description: "The short link slug. If not provided, a random 7-character slug will be generated."
                "shortLink":
                  type: "string"
                  format: "uri"
                  description: "The full URL of the short link, including the https protocol (e.g. `https://dub.sh/try`)."
                "programId":
                  type: "string"
                  nullable: true
                  description: "The ID of the program the short link is associated with."
              required:
                - "id"
                - "domain"
                - "key"
                - "shortLink"
                - "programId"
            "partner":
              type: "object"
              nullable: true
              properties:
                "id":
                  type: "string"
                "name":
                  type: "string"
                "email":
                  type: "string"
                "image":
                  type: "string"
                  nullable: true
              required:
                - "id"
                - "name"
                - "email"
            "discount":
              type: "object"
              nullable: true
              properties:
                "id":
                  type: "string"
                "couponId":
                  type: "string"
                  nullable: true
                "couponTestId":
                  type: "string"
                  nullable: true
                "amount":
                  type: "number"
                "type":
                  type: "string"
                  enum:
                    - "percentage"
                    - "flat"
                "duration":
                  type: "number"
                  nullable: true
                "interval":
                  type: "string"
                  nullable: true
                  enum:
                    - "month"
                    - "year"
                    - null
              required:
                - "id"
                - "couponId"
                - "couponTestId"
                - "amount"
                - "type"
                - "duration"
                - "interval"
          required:
            - "id"
            - "externalId"
            - "name"
            - "createdAt"
        "click_id":
          type: "string"
          description: "Deprecated. Use `click.id` instead."
          deprecated: true
        "link_id":
          type: "string"
          description: "Deprecated. Use `link.id` instead."
          deprecated: true
        "domain":
          type: "string"
          description: "Deprecated. Use `link.domain` instead."
          deprecated: true
        "key":
          type: "string"
          description: "Deprecated. Use `link.key` instead."
          deprecated: true
        "url":
          type: "string"
          description: "Deprecated. Use `click.url` instead."
          deprecated: true
        "continent":
          type: "string"
          description: "Deprecated. Use `click.continent` instead."
          deprecated: true
        "country":
          type: "string"
          description: "Deprecated. Use `click.country` instead."
          deprecated: true
        "city":
          type: "string"
          description: "Deprecated. Use `click.city` instead."
          deprecated: true
        "device":
          type: "string"
          description: "Deprecated. Use `click.device` instead."
          deprecated: true
        "browser":
          type: "string"
          description: "Deprecated. Use `click.browser` instead."
          deprecated: true
        "os":
          type: "string"
          description: "Deprecated. Use `click.os` instead."
          deprecated: true
        "qr":
          type: "number"
          description: "Deprecated. Use `click.qr` instead."
          deprecated: true
        "ip":
          type: "string"
          description: "Deprecated. Use `click.ip` instead."
          deprecated: true
      required:
        - "event"
        - "eventId"
        - "eventName"
        - "click"
        - "link"
        - "customer"
        - "click_id"
        - "link_id"
        - "domain"
        - "key"
        - "url"
        - "continent"
        - "country"
        - "city"
        - "device"
        - "browser"
        - "os"
        - "qr"
        - "ip"
    "SaleEvent":
      type: "object"
      properties:
        "event":
          type: "string"
          enum:
            - "sale"
        "timestamp":
          type: "string"
        "eventId":
          type: "string"
        "eventName":
          type: "string"
        "link":
          type: "object"
          properties:
            "id":
              type: "string"
              description: "The unique ID of the short link."
            "domain":
              type: "string"
              description: "The domain of the short link. If not provided, the primary domain for the workspace will be used (or `dub.sh` if the workspace has no domains)."
            "key":
              type: "string"
              description: "The short link slug. If not provided, a random 7-character slug will be generated."
            "url":
              type: "string"
            "trackConversion":
              type: "boolean"
            "externalId":
              type: "string"
              nullable: true
              description: "The ID of the link in your database. If set, it can be used to identify the link in future API requests (must be prefixed with 'ext_' when passed as a query parameter). This key is unique across your workspace."
            "tenantId":
              type: "string"
              nullable: true
              description: "The ID of the tenant that created the link inside your system. If set, it can be used to fetch all links for a tenant."
            "archived":
              type: "boolean"
            "expiresAt":
              type: "string"
            "expiredUrl":
              type: "string"
              nullable: true
            "password":
              type: "string"
              nullable: true
              description: "The password required to access the destination URL of the short link."
            "proxy":
              type: "boolean"
            "title":
              type: "string"
              nullable: true
              description: "The title of the short link generated via `api.dub.co/metatags`. Will be used for Custom Social Media Cards if `proxy` is true."
            "description":
              type: "string"
              nullable: true
              description: "The description of the short link generated via `api.dub.co/metatags`. Will be used for Custom Social Media Cards if `proxy` is true."
            "image":
              type: "string"
              nullable: true
              description: "The image of the short link generated via `api.dub.co/metatags`. Will be used for Custom Social Media Cards if `proxy` is true."
            "video":
              type: "string"
              nullable: true
              description: "The custom link preview video (og:video). Will be used for Custom Social Media Cards if `proxy` is true. Learn more: https://d.to/og"
            "rewrite":
              type: "boolean"
            "doIndex":
              type: "boolean"
            "ios":
              type: "string"
              nullable: true
              description: "The iOS destination URL for the short link for iOS device targeting."
            "android":
              type: "string"
              nullable: true
              description: "The Android destination URL for the short link for Android device targeting."
            "geo":
              type: "object"
              nullable: true
              properties:
                "AF":
                  type: "string"
                  format: "uri"
                "AL":
                  type: "string"
                  format: "uri"
                "DZ":
                  type: "string"
                  format: "uri"
                "AS":
                  type: "string"
                  format: "uri"
                "AD":
                  type: "string"
                  format: "uri"
                "AO":
                  type: "string"
                  format: "uri"
                "AI":
                  type: "string"
                  format: "uri"
                "AQ":
                  type: "string"
                  format: "uri"
                "AG":
                  type: "string"
                  format: "uri"
                "AR":
                  type: "string"
                  format: "uri"
                "AM":
                  type: "string"
                  format: "uri"
                "AW":
                  type: "string"
                  format: "uri"
                "AU":
                  type: "string"
                  format: "uri"
                "AT":
                  type: "string"
                  format: "uri"
                "AZ":
                  type: "string"
                  format: "uri"
                "BS":
                  type: "string"
                  format: "uri"
                "BH":
                  type: "string"
                  format: "uri"
                "BD":
                  type: "string"
                  format: "uri"
                "BB":
                  type: "string"
                  format: "uri"
                "BY":
                  type: "string"
                  format: "uri"
                "BE":
                  type: "string"
                  format: "uri"
                "BZ":
                  type: "string"
                  format: "uri"
                "BJ":
                  type: "string"
                  format: "uri"
                "BM":
                  type: "string"
                  format: "uri"
                "BT":
                  type: "string"
                  format: "uri"
                "BO":
                  type: "string"
                  format: "uri"
                "BA":
                  type: "string"
                  format: "uri"
                "BW":
                  type: "string"
                  format: "uri"
                "BV":
                  type: "string"
                  format: "uri"
                "BR":
                  type: "string"
                  format: "uri"
                "IO":
                  type: "string"
                  format: "uri"
                "BN":
                  type: "string"
                  format: "uri"
                "BG":
                  type: "string"
                  format: "uri"
                "BF":
                  type: "string"
                  format: "uri"
                "BI":
                  type: "string"
                  format: "uri"
                "KH":
                  type: "string"
                  format: "uri"
                "CM":
                  type: "string"
                  format: "uri"
                "CA":
                  type: "string"
                  format: "uri"
                "CV":
                  type: "string"
                  format: "uri"
                "KY":
                  type: "string"
                  format: "uri"
                "CF":
                  type: "string"
                  format: "uri"
                "TD":
                  type: "string"
                  format: "uri"
                "CL":
                  type: "string"
                  format: "uri"
                "CN":
                  type: "string"
                  format: "uri"
                "CX":
                  type: "string"
                  format: "uri"
                "CC":
                  type: "string"
                  format: "uri"
                "CO":
                  type: "string"
                  format: "uri"
                "KM":
                  type: "string"
                  format: "uri"
                "CG":
                  type: "string"
                  format: "uri"
                "CD":
                  type: "string"
                  format: "uri"
                "CK":
                  type: "string"
                  format: "uri"
                "CR":
                  type: "string"
                  format: "uri"
                "CI":
                  type: "string"
                  format: "uri"
                "HR":
                  type: "string"
                  format: "uri"
                "CU":
                  type: "string"
                  format: "uri"
                "CY":
                  type: "string"
                  format: "uri"
                "CZ":
                  type: "string"
                  format: "uri"
                "DK":
                  type: "string"
                  format: "uri"
                "DJ":
                  type: "string"
                  format: "uri"
                "DM":
                  type: "string"
                  format: "uri"
                "DO":
                  type: "string"
                  format: "uri"
                "EC":
                  type: "string"
                  format: "uri"
                "EG":
                  type: "string"
                  format: "uri"
                "SV":
                  type: "string"
                  format: "uri"
                "GQ":
                  type: "string"
                  format: "uri"
                "ER":
                  type: "string"
                  format: "uri"
                "EE":
                  type: "string"
                  format: "uri"
                "ET":
                  type: "string"
                  format: "uri"
                "FK":
                  type: "string"
                  format: "uri"
                "FO":
                  type: "string"
                  format: "uri"
                "FJ":
                  type: "string"
                  format: "uri"
                "FI":
                  type: "string"
                  format: "uri"
                "FR":
                  type: "string"
                  format: "uri"
                "GF":
                  type: "string"
                  format: "uri"
                "PF":
                  type: "string"
                  format: "uri"
                "TF":
                  type: "string"
                  format: "uri"
                "GA":
                  type: "string"
                  format: "uri"
                "GM":
                  type: "string"
                  format: "uri"
                "GE":
                  type: "string"
                  format: "uri"
                "DE":
                  type: "string"
                  format: "uri"
                "GH":
                  type: "string"
                  format: "uri"
                "GI":
                  type: "string"
                  format: "uri"
                "GR":
                  type: "string"
                  format: "uri"
                "GL":
                  type: "string"
                  format: "uri"
                "GD":
                  type: "string"
                  format: "uri"
                "GP":
                  type: "string"
                  format: "uri"
                "GU":
                  type: "string"
                  format: "uri"
                "GT":
                  type: "string"
                  format: "uri"
                "GN":
                  type: "string"
                  format: "uri"
                "GW":
                  type: "string"
                  format: "uri"
                "GY":
                  type: "string"
                  format: "uri"
                "HT":
                  type: "string"
                  format: "uri"
                "HM":
                  type: "string"
                  format: "uri"
                "VA":
                  type: "string"
                  format: "uri"
                "HN":
                  type: "string"
                  format: "uri"
                "HK":
                  type: "string"
                  format: "uri"
                "HU":
                  type: "string"
                  format: "uri"
                "IS":
                  type: "string"
                  format: "uri"
                "IN":
                  type: "string"
                  format: "uri"
                "ID":
                  type: "string"
                  format: "uri"
                "IR":
                  type: "string"
                  format: "uri"
                "IQ":
                  type: "string"
                  format: "uri"
                "IE":
                  type: "string"
                  format: "uri"
                "IL":
                  type: "string"
                  format: "uri"
                "IT":
                  type: "string"
                  format: "uri"
                "JM":
                  type: "string"
                  format: "uri"
                "JP":
                  type: "string"
                  format: "uri"
                "JO":
                  type: "string"
                  format: "uri"
                "KZ":
                  type: "string"
                  format: "uri"
                "KE":
                  type: "string"
                  format: "uri"
                "KI":
                  type: "string"
                  format: "uri"
                "KP":
                  type: "string"
                  format: "uri"
                "KR":
                  type: "string"
                  format: "uri"
                "KW":
                  type: "string"
                  format: "uri"
                "KG":
                  type: "string"
                  format: "uri"
                "LA":
                  type: "string"
                  format: "uri"
                "LV":
                  type: "string"
                  format: "uri"
                "LB":
                  type: "string"
                  format: "uri"
                "LS":
                  type: "string"
                  format: "uri"
                "LR":
                  type: "string"
                  format: "uri"
                "LY":
                  type: "string"
                  format: "uri"
                "LI":
                  type: "string"
                  format: "uri"
                "LT":
                  type: "string"
                  format: "uri"
                "LU":
                  type: "string"
                  format: "uri"
                "MO":
                  type: "string"
                  format: "uri"
                "MG":
                  type: "string"
                  format: "uri"
                "MW":
                  type: "string"
                  format: "uri"
                "MY":
                  type: "string"
                  format: "uri"
                "MV":
                  type: "string"
                  format: "uri"
                "ML":
                  type: "string"
                  format: "uri"
                "MT":
                  type: "string"
                  format: "uri"
                "MH":
                  type: "string"
                  format: "uri"
                "MQ":
                  type: "string"
                  format: "uri"
                "MR":
                  type: "string"
                  format: "uri"
                "MU":
                  type: "string"
                  format: "uri"
                "YT":
                  type: "string"
                  format: "uri"
                "MX":
                  type: "string"
                  format: "uri"
                "FM":
                  type: "string"
                  format: "uri"
                "MD":
                  type: "string"
                  format: "uri"
                "MC":
                  type: "string"
                  format: "uri"
                "MN":
                  type: "string"
                  format: "uri"
                "MS":
                  type: "string"
                  format: "uri"
                "MA":
                  type: "string"
                  format: "uri"
                "MZ":
                  type: "string"
                  format: "uri"
                "MM":
                  type: "string"
                  format: "uri"
                "NA":
                  type: "string"
                  format: "uri"
                "NR":
                  type: "string"
                  format: "uri"
                "NP":
                  type: "string"
                  format: "uri"
                "NL":
                  type: "string"
                  format: "uri"
                "NC":
                  type: "string"
                  format: "uri"
                "NZ":
                  type: "string"
                  format: "uri"
                "NI":
                  type: "string"
                  format: "uri"
                "NE":
                  type: "string"
                  format: "uri"
                "NG":
                  type: "string"
                  format: "uri"
                "NU":
                  type: "string"
                  format: "uri"
                "NF":
                  type: "string"
                  format: "uri"
                "MK":
                  type: "string"
                  format: "uri"
                "MP":
                  type: "string"
                  format: "uri"
                "NO":
                  type: "string"
                  format: "uri"
                "OM":
                  type: "string"
                  format: "uri"
                "PK":
                  type: "string"
                  format: "uri"
                "PW":
                  type: "string"
                  format: "uri"
                "PS":
                  type: "string"
                  format: "uri"
                "PA":
                  type: "string"
                  format: "uri"
                "PG":
                  type: "string"
                  format: "uri"
                "PY":
                  type: "string"
                  format: "uri"
                "PE":
                  type: "string"
                  format: "uri"
                "PH":
                  type: "string"
                  format: "uri"
                "PN":
                  type: "string"
                  format: "uri"
                "PL":
                  type: "string"
                  format: "uri"
                "PT":
                  type: "string"
                  format: "uri"
                "PR":
                  type: "string"
                  format: "uri"
                "QA":
                  type: "string"
                  format: "uri"
                "RE":
                  type: "string"
                  format: "uri"
                "RO":
                  type: "string"
                  format: "uri"
                "RU":
                  type: "string"
                  format: "uri"
                "RW":
                  type: "string"
                  format: "uri"
                "SH":
                  type: "string"
                  format: "uri"
                "KN":
                  type: "string"
                  format: "uri"
                "LC":
                  type: "string"
                  format: "uri"
                "PM":
                  type: "string"
                  format: "uri"
                "VC":
                  type: "string"
                  format: "uri"
                "WS":
                  type: "string"
                  format: "uri"
                "SM":
                  type: "string"
                  format: "uri"
                "ST":
                  type: "string"
                  format: "uri"
                "SA":
                  type: "string"
                  format: "uri"
                "SN":
                  type: "string"
                  format: "uri"
                "SC":
                  type: "string"
                  format: "uri"
                "SL":
                  type: "string"
                  format: "uri"
                "SG":
                  type: "string"
                  format: "uri"
                "SK":
                  type: "string"
                  format: "uri"
                "SI":
                  type: "string"
                  format: "uri"
                "SB":
                  type: "string"
                  format: "uri"
                "SO":
                  type: "string"
                  format: "uri"
                "ZA":
                  type: "string"
                  format: "uri"
                "GS":
                  type: "string"
                  format: "uri"
                "ES":
                  type: "string"
                  format: "uri"
                "LK":
                  type: "string"
                  format: "uri"
                "SD":
                  type: "string"
                  format: "uri"
                "SR":
                  type: "string"
                  format: "uri"
                "SJ":
                  type: "string"
                  format: "uri"
                "SZ":
                  type: "string"
                  format: "uri"
                "SE":
                  type: "string"
                  format: "uri"
                "CH":
                  type: "string"
                  format: "uri"
                "SY":
                  type: "string"
                  format: "uri"
                "TW":
                  type: "string"
                  format: "uri"
                "TJ":
                  type: "string"
                  format: "uri"
                "TZ":
                  type: "string"
                  format: "uri"
                "TH":
                  type: "string"
                  format: "uri"
                "TL":
                  type: "string"
                  format: "uri"
                "TG":
                  type: "string"
                  format: "uri"
                "TK":
                  type: "string"
                  format: "uri"
                "TO":
                  type: "string"
                  format: "uri"
                "TT":
                  type: "string"
                  format: "uri"
                "TN":
                  type: "string"
                  format: "uri"
                "TR":
                  type: "string"
                  format: "uri"
                "TM":
                  type: "string"
                  format: "uri"
                "TC":
                  type: "string"
                  format: "uri"
                "TV":
                  type: "string"
                  format: "uri"
                "UG":
                  type: "string"
                  format: "uri"
                "UA":
                  type: "string"
                  format: "uri"
                "AE":
                  type: "string"
                  format: "uri"
                "GB":
                  type: "string"
                  format: "uri"
                "US":
                  type: "string"
                  format: "uri"
                "UM":
                  type: "string"
                  format: "uri"
                "UY":
                  type: "string"
                  format: "uri"
                "UZ":
                  type: "string"
                  format: "uri"
                "VU":
                  type: "string"
                  format: "uri"
                "VE":
                  type: "string"
                  format: "uri"
                "VN":
                  type: "string"
                  format: "uri"
                "VG":
                  type: "string"
                  format: "uri"
                "VI":
                  type: "string"
                  format: "uri"
                "WF":
                  type: "string"
                  format: "uri"
                "EH":
                  type: "string"
                  format: "uri"
                "YE":
                  type: "string"
                  format: "uri"
                "ZM":
                  type: "string"
                  format: "uri"
                "ZW":
                  type: "string"
                  format: "uri"
                "AX":
                  type: "string"
                  format: "uri"
                "BQ":
                  type: "string"
                  format: "uri"
                "CW":
                  type: "string"
                  format: "uri"
                "GG":
                  type: "string"
                  format: "uri"
                "IM":
                  type: "string"
                  format: "uri"
                "JE":
                  type: "string"
                  format: "uri"
                "ME":
                  type: "string"
                  format: "uri"
                "BL":
                  type: "string"
                  format: "uri"
                "MF":
                  type: "string"
                  format: "uri"
                "RS":
                  type: "string"
                  format: "uri"
                "SX":
                  type: "string"
                  format: "uri"
                "SS":
                  type: "string"
                  format: "uri"
                "XK":
                  type: "string"
                  format: "uri"
              additionalProperties: false
              description: "Geo targeting information for the short link in JSON format `{[COUNTRY]: https://example.com }`. Learn more: https://d.to/geo"
            "publicStats":
              type: "boolean"
            "tagId":
              type: "string"
              nullable: true
              description: "The unique ID of the tag assigned to the short link. This field is deprecated – use `tags` instead."
              deprecated: true
            "tags":
              type: "array"
              nullable: true
              items: {"$ref": "#/components/schemas/TagSchema"}
              description: "The tags assigned to the short link."
            "webhookIds":
              type: "array"
              items:
                type: "string"
              description: "The IDs of the webhooks that the short link is associated with."
            "comments":
              type: "string"
              nullable: true
              description: "The comments for the short link."
            "shortLink":
              type: "string"
              format: "uri"
              description: "The full URL of the short link, including the https protocol (e.g. `https://dub.sh/try`)."
            "qrCode":
              type: "string"
              format: "uri"
              description: "The full URL of the QR code for the short link (e.g. `https://api.dub.co/qr?url=https://dub.sh/try`)."
            "utm_source":
              type: "string"
              nullable: true
              description: "The UTM source of the short link."
            "utm_medium":
              type: "string"
              nullable: true
              description: "The UTM medium of the short link."
            "utm_campaign":
              type: "string"
              nullable: true
              description: "The UTM campaign of the short link."
            "utm_term":
              type: "string"
              nullable: true
              description: "The UTM term of the short link."
            "utm_content":
              type: "string"
              nullable: true
              description: "The UTM content of the short link."
            "userId":
              type: "string"
              nullable: true
            "workspaceId":
              type: "string"
              description: "The workspace ID of the short link."
            "clicks":
              type: "number"
              default: 0
              description: "The number of clicks on the short link."
            "lastClicked":
              type: "string"
            "leads":
              type: "number"
              default: 0
              description: "The number of leads the short links has generated."
            "sales":
              type: "number"
              default: 0
              description: "The number of sales the short links has generated."
            "saleAmount":
              type: "number"
              default: 0
              description: "The total dollar amount of sales the short links has generated (in cents)."
            "createdAt":
              type: "string"
            "updatedAt":
              type: "string"
            "projectId":
              type: "string"
              description: "The project ID of the short link. This field is deprecated – use `workspaceId` instead."
              deprecated: true
            "programId":
              type: "string"
              nullable: true
              description: "The ID of the program the short link is associated with."
          required:
            - "id"
            - "domain"
            - "key"
            - "url"
            - "externalId"
            - "tenantId"
            - "expiresAt"
            - "expiredUrl"
            - "password"
            - "title"
            - "description"
            - "image"
            - "video"
            - "ios"
            - "android"
            - "geo"
            - "tagId"
            - "tags"
            - "webhookIds"
            - "comments"
            - "shortLink"
            - "qrCode"
            - "utm_source"
            - "utm_medium"
            - "utm_campaign"
            - "utm_term"
            - "utm_content"
            - "userId"
            - "workspaceId"
            - "clicks"
            - "lastClicked"
            - "leads"
            - "sales"
            - "saleAmount"
            - "createdAt"
            - "updatedAt"
            - "projectId"
            - "programId"
        "click":
          type: "object"
          properties:
            "id":
              type: "string"
            "url":
              type: "string"
            "country":
              type: "string"
            "city":
              type: "string"
            "region":
              type: "string"
            "continent":
              type: "string"
            "device":
              type: "string"
            "browser":
              type: "string"
            "os":
              type: "string"
            "referer":
              type: "string"
            "refererUrl":
              type: "string"
            "qr":
              type: "boolean"
            "ip":
              type: "string"
          required:
            - "id"
            - "url"
            - "country"
            - "city"
            - "region"
            - "continent"
            - "device"
            - "browser"
            - "os"
            - "referer"
            - "refererUrl"
            - "ip"
        "customer":
          type: "object"
          properties:
            "id":
              type: "string"
              description: "The unique identifier of the customer in Dub."
            "externalId":
              type: "string"
              description: "Unique identifier for the customer in the client's app."
            "name":
              type: "string"
              description: "Name of the customer."
            "email":
              type: "string"
              nullable: true
              description: "Email of the customer."
            "avatar":
              type: "string"
              nullable: true
              description: "Avatar URL of the customer."
            "country":
              type: "string"
              nullable: true
              description: "Country of the customer."
            "createdAt":
              type: "string"
              description: "The date the customer was created."
            "link":
              type: "object"
              nullable: true
              properties:
                "id":
                  type: "string"
                  description: "The unique ID of the short link."
                "domain":
                  type: "string"
                  description: "The domain of the short link. If not provided, the primary domain for the workspace will be used (or `dub.sh` if the workspace has no domains)."
                "key":
                  type: "string"
                  description: "The short link slug. If not provided, a random 7-character slug will be generated."
                "shortLink":
                  type: "string"
                  format: "uri"
                  description: "The full URL of the short link, including the https protocol (e.g. `https://dub.sh/try`)."
                "programId":
                  type: "string"
                  nullable: true
                  description: "The ID of the program the short link is associated with."
              required:
                - "id"
                - "domain"
                - "key"
                - "shortLink"
                - "programId"
            "partner":
              type: "object"
              nullable: true
              properties:
                "id":
                  type: "string"
                "name":
                  type: "string"
                "email":
                  type: "string"
                "image":
                  type: "string"
                  nullable: true
              required:
                - "id"
                - "name"
                - "email"
            "discount":
              type: "object"
              nullable: true
              properties:
                "id":
                  type: "string"
                "couponId":
                  type: "string"
                  nullable: true
                "couponTestId":
                  type: "string"
                  nullable: true
                "amount":
                  type: "number"
                "type":
                  type: "string"
                  enum:
                    - "percentage"
                    - "flat"
                "duration":
                  type: "number"
                  nullable: true
                "interval":
                  type: "string"
                  nullable: true
                  enum:
                    - "month"
                    - "year"
                    - null
              required:
                - "id"
                - "couponId"
                - "couponTestId"
                - "amount"
                - "type"
                - "duration"
                - "interval"
          required:
            - "id"
            - "externalId"
            - "name"
            - "createdAt"
        "sale":
          type: "object"
          properties:
            "amount":
              type: "integer"
              minimum: 0
              description: "The amount of the sale. Should be passed in cents."
            "invoiceId":
              type: "string"
              nullable: true
              default:
              description: "The invoice ID of the sale."
            "paymentProcessor":
              type: "string"
              enum:
                - "stripe"
                - "shopify"
                - "paddle"
              description: "The payment processor via which the sale was made."
          required:
            - "amount"
            - "invoiceId"
            - "paymentProcessor"
        "saleAmount":
          type: "number"
          description: "Deprecated. Use `sale.amount` instead."
          deprecated: true
        "invoice_id":
          type: "string"
          description: "Deprecated. Use `sale.invoiceId` instead."
          deprecated: true
        "payment_processor":
          type: "string"
          description: "Deprecated. Use `sale.paymentProcessor` instead."
        "click_id":
          type: "string"
          description: "Deprecated. Use `click.id` instead."
          deprecated: true
        "link_id":
          type: "string"
          description: "Deprecated. Use `link.id` instead."
          deprecated: true
        "domain":
          type: "string"
          description: "Deprecated. Use `link.domain` instead."
          deprecated: true
        "key":
          type: "string"
          description: "Deprecated. Use `link.key` instead."
          deprecated: true
        "url":
          type: "string"
          description: "Deprecated. Use `click.url` instead."
          deprecated: true
        "continent":
          type: "string"
          description: "Deprecated. Use `click.continent` instead."
          deprecated: true
        "country":
          type: "string"
          description: "Deprecated. Use `click.country` instead."
          deprecated: true
        "city":
          type: "string"
          description: "Deprecated. Use `click.city` instead."
          deprecated: true
        "device":
          type: "string"
          description: "Deprecated. Use `click.device` instead."
          deprecated: true
        "browser":
          type: "string"
          description: "Deprecated. Use `click.browser` instead."
          deprecated: true
        "os":
          type: "string"
          description: "Deprecated. Use `click.os` instead."
          deprecated: true
        "qr":
          type: "number"
          description: "Deprecated. Use `click.qr` instead."
          deprecated: true
        "ip":
          type: "string"
          description: "Deprecated. Use `click.ip` instead."
          deprecated: true
      required:
        - "event"
        - "eventId"
        - "eventName"
        - "link"
        - "click"
        - "customer"
        - "sale"
        - "saleAmount"
        - "invoice_id"
        - "payment_processor"
        - "click_id"
        - "link_id"
        - "domain"
        - "key"
        - "url"
        - "continent"
        - "country"
        - "city"
        - "device"
        - "browser"
        - "os"
        - "qr"
        - "ip"
    "LinkWebhookEvent":
      type: "object"
      properties:
        "id":
          type: "string"
        "event":
          anyOf:
            - type: "string"
              enum:
                - "link.created"
            - type: "string"
              enum:
                - "link.updated"
            - type: "string"
              enum:
                - "link.deleted"
        "createdAt":
          type: "string"
        "data":
          type: "object"
          properties:
            "id":
              type: "string"
              description: "The unique ID of the short link."
            "domain":
              type: "string"
              description: "The domain of the short link. If not provided, the primary domain for the workspace will be used (or `dub.sh` if the workspace has no domains)."
            "key":
              type: "string"
              description: "The short link slug. If not provided, a random 7-character slug will be generated."
            "url":
              type: "string"
            "trackConversion":
              type: "boolean"
            "externalId":
              type: "string"
              nullable: true
              description: "The ID of the link in your database. If set, it can be used to identify the link in future API requests (must be prefixed with 'ext_' when passed as a query parameter). This key is unique across your workspace."
            "tenantId":
              type: "string"
              nullable: true
              description: "The ID of the tenant that created the link inside your system. If set, it can be used to fetch all links for a tenant."
            "archived":
              type: "boolean"
            "expiresAt":
              type: "string"
            "expiredUrl":
              type: "string"
              nullable: true
            "password":
              type: "string"
              nullable: true
              description: "The password required to access the destination URL of the short link."
            "proxy":
              type: "boolean"
            "title":
              type: "string"
              nullable: true
              description: "The title of the short link generated via `api.dub.co/metatags`. Will be used for Custom Social Media Cards if `proxy` is true."
            "description":
              type: "string"
              nullable: true
              description: "The description of the short link generated via `api.dub.co/metatags`. Will be used for Custom Social Media Cards if `proxy` is true."
            "image":
              type: "string"
              nullable: true
              description: "The image of the short link generated via `api.dub.co/metatags`. Will be used for Custom Social Media Cards if `proxy` is true."
            "video":
              type: "string"
              nullable: true
              description: "The custom link preview video (og:video). Will be used for Custom Social Media Cards if `proxy` is true. Learn more: https://d.to/og"
            "rewrite":
              type: "boolean"
            "doIndex":
              type: "boolean"
            "ios":
              type: "string"
              nullable: true
              description: "The iOS destination URL for the short link for iOS device targeting."
            "android":
              type: "string"
              nullable: true
              description: "The Android destination URL for the short link for Android device targeting."
            "geo":
              type: "object"
              nullable: true
              properties:
                "AF":
                  type: "string"
                  format: "uri"
                "AL":
                  type: "string"
                  format: "uri"
                "DZ":
                  type: "string"
                  format: "uri"
                "AS":
                  type: "string"
                  format: "uri"
                "AD":
                  type: "string"
                  format: "uri"
                "AO":
                  type: "string"
                  format: "uri"
                "AI":
                  type: "string"
                  format: "uri"
                "AQ":
                  type: "string"
                  format: "uri"
                "AG":
                  type: "string"
                  format: "uri"
                "AR":
                  type: "string"
                  format: "uri"
                "AM":
                  type: "string"
                  format: "uri"
                "AW":
                  type: "string"
                  format: "uri"
                "AU":
                  type: "string"
                  format: "uri"
                "AT":
                  type: "string"
                  format: "uri"
                "AZ":
                  type: "string"
                  format: "uri"
                "BS":
                  type: "string"
                  format: "uri"
                "BH":
                  type: "string"
                  format: "uri"
                "BD":
                  type: "string"
                  format: "uri"
                "BB":
                  type: "string"
                  format: "uri"
                "BY":
                  type: "string"
                  format: "uri"
                "BE":
                  type: "string"
                  format: "uri"
                "BZ":
                  type: "string"
                  format: "uri"
                "BJ":
                  type: "string"
                  format: "uri"
                "BM":
                  type: "string"
                  format: "uri"
                "BT":
                  type: "string"
                  format: "uri"
                "BO":
                  type: "string"
                  format: "uri"
                "BA":
                  type: "string"
                  format: "uri"
                "BW":
                  type: "string"
                  format: "uri"
                "BV":
                  type: "string"
                  format: "uri"
                "BR":
                  type: "string"
                  format: "uri"
                "IO":
                  type: "string"
                  format: "uri"
                "BN":
                  type: "string"
                  format: "uri"
                "BG":
                  type: "string"
                  format: "uri"
                "BF":
                  type: "string"
                  format: "uri"
                "BI":
                  type: "string"
                  format: "uri"
                "KH":
                  type: "string"
                  format: "uri"
                "CM":
                  type: "string"
                  format: "uri"
                "CA":
                  type: "string"
                  format: "uri"
                "CV":
                  type: "string"
                  format: "uri"
                "KY":
                  type: "string"
                  format: "uri"
                "CF":
                  type: "string"
                  format: "uri"
                "TD":
                  type: "string"
                  format: "uri"
                "CL":
                  type: "string"
                  format: "uri"
                "CN":
                  type: "string"
                  format: "uri"
                "CX":
                  type: "string"
                  format: "uri"
                "CC":
                  type: "string"
                  format: "uri"
                "CO":
                  type: "string"
                  format: "uri"
                "KM":
                  type: "string"
                  format: "uri"
                "CG":
                  type: "string"
                  format: "uri"
                "CD":
                  type: "string"
                  format: "uri"
                "CK":
                  type: "string"
                  format: "uri"
                "CR":
                  type: "string"
                  format: "uri"
                "CI":
                  type: "string"
                  format: "uri"
                "HR":
                  type: "string"
                  format: "uri"
                "CU":
                  type: "string"
                  format: "uri"
                "CY":
                  type: "string"
                  format: "uri"
                "CZ":
                  type: "string"
                  format: "uri"
                "DK":
                  type: "string"
                  format: "uri"
                "DJ":
                  type: "string"
                  format: "uri"
                "DM":
                  type: "string"
                  format: "uri"
                "DO":
                  type: "string"
                  format: "uri"
                "EC":
                  type: "string"
                  format: "uri"
                "EG":
                  type: "string"
                  format: "uri"
                "SV":
                  type: "string"
                  format: "uri"
                "GQ":
                  type: "string"
                  format: "uri"
                "ER":
                  type: "string"
                  format: "uri"
                "EE":
                  type: "string"
                  format: "uri"
                "ET":
                  type: "string"
                  format: "uri"
                "FK":
                  type: "string"
                  format: "uri"
                "FO":
                  type: "string"
                  format: "uri"
                "FJ":
                  type: "string"
                  format: "uri"
                "FI":
                  type: "string"
                  format: "uri"
                "FR":
                  type: "string"
                  format: "uri"
                "GF":
                  type: "string"
                  format: "uri"
                "PF":
                  type: "string"
                  format: "uri"
                "TF":
                  type: "string"
                  format: "uri"
                "GA":
                  type: "string"
                  format: "uri"
                "GM":
                  type: "string"
                  format: "uri"
                "GE":
                  type: "string"
                  format: "uri"
                "DE":
                  type: "string"
                  format: "uri"
                "GH":
                  type: "string"
                  format: "uri"
                "GI":
                  type: "string"
                  format: "uri"
                "GR":
                  type: "string"
                  format: "uri"
                "GL":
                  type: "string"
                  format: "uri"
                "GD":
                  type: "string"
                  format: "uri"
                "GP":
                  type: "string"
                  format: "uri"
                "GU":
                  type: "string"
                  format: "uri"
                "GT":
                  type: "string"
                  format: "uri"
                "GN":
                  type: "string"
                  format: "uri"
                "GW":
                  type: "string"
                  format: "uri"
                "GY":
                  type: "string"
                  format: "uri"
                "HT":
                  type: "string"
                  format: "uri"
                "HM":
                  type: "string"
                  format: "uri"
                "VA":
                  type: "string"
                  format: "uri"
                "HN":
                  type: "string"
                  format: "uri"
                "HK":
                  type: "string"
                  format: "uri"
                "HU":
                  type: "string"
                  format: "uri"
                "IS":
                  type: "string"
                  format: "uri"
                "IN":
                  type: "string"
                  format: "uri"
                "ID":
                  type: "string"
                  format: "uri"
                "IR":
                  type: "string"
                  format: "uri"
                "IQ":
                  type: "string"
                  format: "uri"
                "IE":
                  type: "string"
                  format: "uri"
                "IL":
                  type: "string"
                  format: "uri"
                "IT":
                  type: "string"
                  format: "uri"
                "JM":
                  type: "string"
                  format: "uri"
                "JP":
                  type: "string"
                  format: "uri"
                "JO":
                  type: "string"
                  format: "uri"
                "KZ":
                  type: "string"
                  format: "uri"
                "KE":
                  type: "string"
                  format: "uri"
                "KI":
                  type: "string"
                  format: "uri"
                "KP":
                  type: "string"
                  format: "uri"
                "KR":
                  type: "string"
                  format: "uri"
                "KW":
                  type: "string"
                  format: "uri"
                "KG":
                  type: "string"
                  format: "uri"
                "LA":
                  type: "string"
                  format: "uri"
                "LV":
                  type: "string"
                  format: "uri"
                "LB":
                  type: "string"
                  format: "uri"
                "LS":
                  type: "string"
                  format: "uri"
                "LR":
                  type: "string"
                  format: "uri"
                "LY":
                  type: "string"
                  format: "uri"
                "LI":
                  type: "string"
                  format: "uri"
                "LT":
                  type: "string"
                  format: "uri"
                "LU":
                  type: "string"
                  format: "uri"
                "MO":
                  type: "string"
                  format: "uri"
                "MG":
                  type: "string"
                  format: "uri"
                "MW":
                  type: "string"
                  format: "uri"
                "MY":
                  type: "string"
                  format: "uri"
                "MV":
                  type: "string"
                  format: "uri"
                "ML":
                  type: "string"
                  format: "uri"
                "MT":
                  type: "string"
                  format: "uri"
                "MH":
                  type: "string"
                  format: "uri"
                "MQ":
                  type: "string"
                  format: "uri"
                "MR":
                  type: "string"
                  format: "uri"
                "MU":
                  type: "string"
                  format: "uri"
                "YT":
                  type: "string"
                  format: "uri"
                "MX":
                  type: "string"
                  format: "uri"
                "FM":
                  type: "string"
                  format: "uri"
                "MD":
                  type: "string"
                  format: "uri"
                "MC":
                  type: "string"
                  format: "uri"
                "MN":
                  type: "string"
                  format: "uri"
                "MS":
                  type: "string"
                  format: "uri"
                "MA":
                  type: "string"
                  format: "uri"
                "MZ":
                  type: "string"
                  format: "uri"
                "MM":
                  type: "string"
                  format: "uri"
                "NA":
                  type: "string"
                  format: "uri"
                "NR":
                  type: "string"
                  format: "uri"
                "NP":
                  type: "string"
                  format: "uri"
                "NL":
                  type: "string"
                  format: "uri"
                "NC":
                  type: "string"
                  format: "uri"
                "NZ":
                  type: "string"
                  format: "uri"
                "NI":
                  type: "string"
                  format: "uri"
                "NE":
                  type: "string"
                  format: "uri"
                "NG":
                  type: "string"
                  format: "uri"
                "NU":
                  type: "string"
                  format: "uri"
                "NF":
                  type: "string"
                  format: "uri"
                "MK":
                  type: "string"
                  format: "uri"
                "MP":
                  type: "string"
                  format: "uri"
                "NO":
                  type: "string"
                  format: "uri"
                "OM":
                  type: "string"
                  format: "uri"
                "PK":
                  type: "string"
                  format: "uri"
                "PW":
                  type: "string"
                  format: "uri"
                "PS":
                  type: "string"
                  format: "uri"
                "PA":
                  type: "string"
                  format: "uri"
                "PG":
                  type: "string"
                  format: "uri"
                "PY":
                  type: "string"
                  format: "uri"
                "PE":
                  type: "string"
                  format: "uri"
                "PH":
                  type: "string"
                  format: "uri"
                "PN":
                  type: "string"
                  format: "uri"
                "PL":
                  type: "string"
                  format: "uri"
                "PT":
                  type: "string"
                  format: "uri"
                "PR":
                  type: "string"
                  format: "uri"
                "QA":
                  type: "string"
                  format: "uri"
                "RE":
                  type: "string"
                  format: "uri"
                "RO":
                  type: "string"
                  format: "uri"
                "RU":
                  type: "string"
                  format: "uri"
                "RW":
                  type: "string"
                  format: "uri"
                "SH":
                  type: "string"
                  format: "uri"
                "KN":
                  type: "string"
                  format: "uri"
                "LC":
                  type: "string"
                  format: "uri"
                "PM":
                  type: "string"
                  format: "uri"
                "VC":
                  type: "string"
                  format: "uri"
                "WS":
                  type: "string"
                  format: "uri"
                "SM":
                  type: "string"
                  format: "uri"
                "ST":
                  type: "string"
                  format: "uri"
                "SA":
                  type: "string"
                  format: "uri"
                "SN":
                  type: "string"
                  format: "uri"
                "SC":
                  type: "string"
                  format: "uri"
                "SL":
                  type: "string"
                  format: "uri"
                "SG":
                  type: "string"
                  format: "uri"
                "SK":
                  type: "string"
                  format: "uri"
                "SI":
                  type: "string"
                  format: "uri"
                "SB":
                  type: "string"
                  format: "uri"
                "SO":
                  type: "string"
                  format: "uri"
                "ZA":
                  type: "string"
                  format: "uri"
                "GS":
                  type: "string"
                  format: "uri"
                "ES":
                  type: "string"
                  format: "uri"
                "LK":
                  type: "string"
                  format: "uri"
                "SD":
                  type: "string"
                  format: "uri"
                "SR":
                  type: "string"
                  format: "uri"
                "SJ":
                  type: "string"
                  format: "uri"
                "SZ":
                  type: "string"
                  format: "uri"
                "SE":
                  type: "string"
                  format: "uri"
                "CH":
                  type: "string"
                  format: "uri"
                "SY":
                  type: "string"
                  format: "uri"
                "TW":
                  type: "string"
                  format: "uri"
                "TJ":
                  type: "string"
                  format: "uri"
                "TZ":
                  type: "string"
                  format: "uri"
                "TH":
                  type: "string"
                  format: "uri"
                "TL":
                  type: "string"
                  format: "uri"
                "TG":
                  type: "string"
                  format: "uri"
                "TK":
                  type: "string"
                  format: "uri"
                "TO":
                  type: "string"
                  format: "uri"
                "TT":
                  type: "string"
                  format: "uri"
                "TN":
                  type: "string"
                  format: "uri"
                "TR":
                  type: "string"
                  format: "uri"
                "TM":
                  type: "string"
                  format: "uri"
                "TC":
                  type: "string"
                  format: "uri"
                "TV":
                  type: "string"
                  format: "uri"
                "UG":
                  type: "string"
                  format: "uri"
                "UA":
                  type: "string"
                  format: "uri"
                "AE":
                  type: "string"
                  format: "uri"
                "GB":
                  type: "string"
                  format: "uri"
                "US":
                  type: "string"
                  format: "uri"
                "UM":
                  type: "string"
                  format: "uri"
                "UY":
                  type: "string"
                  format: "uri"
                "UZ":
                  type: "string"
                  format: "uri"
                "VU":
                  type: "string"
                  format: "uri"
                "VE":
                  type: "string"
                  format: "uri"
                "VN":
                  type: "string"
                  format: "uri"
                "VG":
                  type: "string"
                  format: "uri"
                "VI":
                  type: "string"
                  format: "uri"
                "WF":
                  type: "string"
                  format: "uri"
                "EH":
                  type: "string"
                  format: "uri"
                "YE":
                  type: "string"
                  format: "uri"
                "ZM":
                  type: "string"
                  format: "uri"
                "ZW":
                  type: "string"
                  format: "uri"
                "AX":
                  type: "string"
                  format: "uri"
                "BQ":
                  type: "string"
                  format: "uri"
                "CW":
                  type: "string"
                  format: "uri"
                "GG":
                  type: "string"
                  format: "uri"
                "IM":
                  type: "string"
                  format: "uri"
                "JE":
                  type: "string"
                  format: "uri"
                "ME":
                  type: "string"
                  format: "uri"
                "BL":
                  type: "string"
                  format: "uri"
                "MF":
                  type: "string"
                  format: "uri"
                "RS":
                  type: "string"
                  format: "uri"
                "SX":
                  type: "string"
                  format: "uri"
                "SS":
                  type: "string"
                  format: "uri"
                "XK":
                  type: "string"
                  format: "uri"
              additionalProperties: false
              description: "Geo targeting information for the short link in JSON format `{[COUNTRY]: https://example.com }`. Learn more: https://d.to/geo"
            "publicStats":
              type: "boolean"
            "tagId":
              type: "string"
              nullable: true
              description: "The unique ID of the tag assigned to the short link. This field is deprecated – use `tags` instead."
              deprecated: true
            "tags":
              type: "array"
              nullable: true
              items: {"$ref": "#/components/schemas/TagSchema"}
              description: "The tags assigned to the short link."
            "webhookIds":
              type: "array"
              items:
                type: "string"
              description: "The IDs of the webhooks that the short link is associated with."
            "comments":
              type: "string"
              nullable: true
              description: "The comments for the short link."
            "shortLink":
              type: "string"
              format: "uri"
              description: "The full URL of the short link, including the https protocol (e.g. `https://dub.sh/try`)."
            "qrCode":
              type: "string"
              format: "uri"
              description: "The full URL of the QR code for the short link (e.g. `https://api.dub.co/qr?url=https://dub.sh/try`)."
            "utm_source":
              type: "string"
              nullable: true
              description: "The UTM source of the short link."
            "utm_medium":
              type: "string"
              nullable: true
              description: "The UTM medium of the short link."
            "utm_campaign":
              type: "string"
              nullable: true
              description: "The UTM campaign of the short link."
            "utm_term":
              type: "string"
              nullable: true
              description: "The UTM term of the short link."
            "utm_content":
              type: "string"
              nullable: true
              description: "The UTM content of the short link."
            "userId":
              type: "string"
              nullable: true
            "workspaceId":
              type: "string"
              description: "The workspace ID of the short link."
            "clicks":
              type: "number"
              default: 0
              description: "The number of clicks on the short link."
            "lastClicked":
              type: "string"
            "leads":
              type: "number"
              default: 0
              description: "The number of leads the short links has generated."
            "sales":
              type: "number"
              default: 0
              description: "The number of sales the short links has generated."
            "saleAmount":
              type: "number"
              default: 0
              description: "The total dollar amount of sales the short links has generated (in cents)."
            "createdAt":
              type: "string"
            "updatedAt":
              type: "string"
            "projectId":
              type: "string"
              description: "The project ID of the short link. This field is deprecated – use `workspaceId` instead."
              deprecated: true
            "programId":
              type: "string"
              nullable: true
              description: "The ID of the program the short link is associated with."
          required:
            - "id"
            - "domain"
            - "key"
            - "url"
            - "externalId"
            - "tenantId"
            - "expiresAt"
            - "expiredUrl"
            - "password"
            - "title"
            - "description"
            - "image"
            - "video"
            - "ios"
            - "android"
            - "geo"
            - "tagId"
            - "tags"
            - "webhookIds"
            - "comments"
            - "shortLink"
            - "qrCode"
            - "utm_source"
            - "utm_medium"
            - "utm_campaign"
            - "utm_term"
            - "utm_content"
            - "userId"
            - "workspaceId"
            - "clicks"
            - "lastClicked"
            - "leads"
            - "sales"
            - "saleAmount"
            - "createdAt"
            - "updatedAt"
            - "projectId"
            - "programId"
      required:
        - "id"
        - "event"
        - "createdAt"
        - "data"
      description: "Triggered when a link is created, updated, or deleted."
    "LinkClickedEvent":
      type: "object"
      properties:
        "id":
          type: "string"
        "event":
          type: "string"
          enum:
            - "link.clicked"
        "createdAt":
          type: "string"
        "data":
          type: "object"
          properties:
            "click":
              type: "object"
              properties:
                "id":
                  type: "string"
                "url":
                  type: "string"
                "country":
                  type: "string"
                "city":
                  type: "string"
                "region":
                  type: "string"
                "continent":
                  type: "string"
                "device":
                  type: "string"
                "browser":
                  type: "string"
                "os":
                  type: "string"
                "referer":
                  type: "string"
                "refererUrl":
                  type: "string"
                "qr":
                  type: "boolean"
                "ip":
                  type: "string"
              required:
                - "id"
                - "url"
                - "country"
                - "city"
                - "region"
                - "continent"
                - "device"
                - "browser"
                - "os"
                - "referer"
                - "refererUrl"
                - "ip"
            "link":
              type: "object"
              properties:
                "id":
                  type: "string"
                  description: "The unique ID of the short link."
                "domain":
                  type: "string"
                  description: "The domain of the short link. If not provided, the primary domain for the workspace will be used (or `dub.sh` if the workspace has no domains)."
                "key":
                  type: "string"
                  description: "The short link slug. If not provided, a random 7-character slug will be generated."
                "url":
                  type: "string"
                "trackConversion":
                  type: "boolean"
                "externalId":
                  type: "string"
                  nullable: true
                  description: "The ID of the link in your database. If set, it can be used to identify the link in future API requests (must be prefixed with 'ext_' when passed as a query parameter). This key is unique across your workspace."
                "tenantId":
                  type: "string"
                  nullable: true
                  description: "The ID of the tenant that created the link inside your system. If set, it can be used to fetch all links for a tenant."
                "archived":
                  type: "boolean"
                "expiresAt":
                  type: "string"
                "expiredUrl":
                  type: "string"
                  nullable: true
                "password":
                  type: "string"
                  nullable: true
                  description: "The password required to access the destination URL of the short link."
                "proxy":
                  type: "boolean"
                "title":
                  type: "string"
                  nullable: true
                  description: "The title of the short link generated via `api.dub.co/metatags`. Will be used for Custom Social Media Cards if `proxy` is true."
                "description":
                  type: "string"
                  nullable: true
                  description: "The description of the short link generated via `api.dub.co/metatags`. Will be used for Custom Social Media Cards if `proxy` is true."
                "image":
                  type: "string"
                  nullable: true
                  description: "The image of the short link generated via `api.dub.co/metatags`. Will be used for Custom Social Media Cards if `proxy` is true."
                "video":
                  type: "string"
                  nullable: true
                  description: "The custom link preview video (og:video). Will be used for Custom Social Media Cards if `proxy` is true. Learn more: https://d.to/og"
                "rewrite":
                  type: "boolean"
                "doIndex":
                  type: "boolean"
                "ios":
                  type: "string"
                  nullable: true
                  description: "The iOS destination URL for the short link for iOS device targeting."
                "android":
                  type: "string"
                  nullable: true
                  description: "The Android destination URL for the short link for Android device targeting."
                "geo":
                  type: "object"
                  nullable: true
                  properties:
                    "AF":
                      type: "string"
                      format: "uri"
                    "AL":
                      type: "string"
                      format: "uri"
                    "DZ":
                      type: "string"
                      format: "uri"
                    "AS":
                      type: "string"
                      format: "uri"
                    "AD":
                      type: "string"
                      format: "uri"
                    "AO":
                      type: "string"
                      format: "uri"
                    "AI":
                      type: "string"
                      format: "uri"
                    "AQ":
                      type: "string"
                      format: "uri"
                    "AG":
                      type: "string"
                      format: "uri"
                    "AR":
                      type: "string"
                      format: "uri"
                    "AM":
                      type: "string"
                      format: "uri"
                    "AW":
                      type: "string"
                      format: "uri"
                    "AU":
                      type: "string"
                      format: "uri"
                    "AT":
                      type: "string"
                      format: "uri"
                    "AZ":
                      type: "string"
                      format: "uri"
                    "BS":
                      type: "string"
                      format: "uri"
                    "BH":
                      type: "string"
                      format: "uri"
                    "BD":
                      type: "string"
                      format: "uri"
                    "BB":
                      type: "string"
                      format: "uri"
                    "BY":
                      type: "string"
                      format: "uri"
                    "BE":
                      type: "string"
                      format: "uri"
                    "BZ":
                      type: "string"
                      format: "uri"
                    "BJ":
                      type: "string"
                      format: "uri"
                    "BM":
                      type: "string"
                      format: "uri"
                    "BT":
                      type: "string"
                      format: "uri"
                    "BO":
                      type: "string"
                      format: "uri"
                    "BA":
                      type: "string"
                      format: "uri"
                    "BW":
                      type: "string"
                      format: "uri"
                    "BV":
                      type: "string"
                      format: "uri"
                    "BR":
                      type: "string"
                      format: "uri"
                    "IO":
                      type: "string"
                      format: "uri"
                    "BN":
                      type: "string"
                      format: "uri"
                    "BG":
                      type: "string"
                      format: "uri"
                    "BF":
                      type: "string"
                      format: "uri"
                    "BI":
                      type: "string"
                      format: "uri"
                    "KH":
                      type: "string"
                      format: "uri"
                    "CM":
                      type: "string"
                      format: "uri"
                    "CA":
                      type: "string"
                      format: "uri"
                    "CV":
                      type: "string"
                      format: "uri"
                    "KY":
                      type: "string"
                      format: "uri"
                    "CF":
                      type: "string"
                      format: "uri"
                    "TD":
                      type: "string"
                      format: "uri"
                    "CL":
                      type: "string"
                      format: "uri"
                    "CN":
                      type: "string"
                      format: "uri"
                    "CX":
                      type: "string"
                      format: "uri"
                    "CC":
                      type: "string"
                      format: "uri"
                    "CO":
                      type: "string"
                      format: "uri"
                    "KM":
                      type: "string"
                      format: "uri"
                    "CG":
                      type: "string"
                      format: "uri"
                    "CD":
                      type: "string"
                      format: "uri"
                    "CK":
                      type: "string"
                      format: "uri"
                    "CR":
                      type: "string"
                      format: "uri"
                    "CI":
                      type: "string"
                      format: "uri"
                    "HR":
                      type: "string"
                      format: "uri"
                    "CU":
                      type: "string"
                      format: "uri"
                    "CY":
                      type: "string"
                      format: "uri"
                    "CZ":
                      type: "string"
                      format: "uri"
                    "DK":
                      type: "string"
                      format: "uri"
                    "DJ":
                      type: "string"
                      format: "uri"
                    "DM":
                      type: "string"
                      format: "uri"
                    "DO":
                      type: "string"
                      format: "uri"
                    "EC":
                      type: "string"
                      format: "uri"
                    "EG":
                      type: "string"
                      format: "uri"
                    "SV":
                      type: "string"
                      format: "uri"
                    "GQ":
                      type: "string"
                      format: "uri"
                    "ER":
                      type: "string"
                      format: "uri"
                    "EE":
                      type: "string"
                      format: "uri"
                    "ET":
                      type: "string"
                      format: "uri"
                    "FK":
                      type: "string"
                      format: "uri"
                    "FO":
                      type: "string"
                      format: "uri"
                    "FJ":
                      type: "string"
                      format: "uri"
                    "FI":
                      type: "string"
                      format: "uri"
                    "FR":
                      type: "string"
                      format: "uri"
                    "GF":
                      type: "string"
                      format: "uri"
                    "PF":
                      type: "string"
                      format: "uri"
                    "TF":
                      type: "string"
                      format: "uri"
                    "GA":
                      type: "string"
                      format: "uri"
                    "GM":
                      type: "string"
                      format: "uri"
                    "GE":
                      type: "string"
                      format: "uri"
                    "DE":
                      type: "string"
                      format: "uri"
                    "GH":
                      type: "string"
                      format: "uri"
                    "GI":
                      type: "string"
                      format: "uri"
                    "GR":
                      type: "string"
                      format: "uri"
                    "GL":
                      type: "string"
                      format: "uri"
                    "GD":
                      type: "string"
                      format: "uri"
                    "GP":
                      type: "string"
                      format: "uri"
                    "GU":
                      type: "string"
                      format: "uri"
                    "GT":
                      type: "string"
                      format: "uri"
                    "GN":
                      type: "string"
                      format: "uri"
                    "GW":
                      type: "string"
                      format: "uri"
                    "GY":
                      type: "string"
                      format: "uri"
                    "HT":
                      type: "string"
                      format: "uri"
                    "HM":
                      type: "string"
                      format: "uri"
                    "VA":
                      type: "string"
                      format: "uri"
                    "HN":
                      type: "string"
                      format: "uri"
                    "HK":
                      type: "string"
                      format: "uri"
                    "HU":
                      type: "string"
                      format: "uri"
                    "IS":
                      type: "string"
                      format: "uri"
                    "IN":
                      type: "string"
                      format: "uri"
                    "ID":
                      type: "string"
                      format: "uri"
                    "IR":
                      type: "string"
                      format: "uri"
                    "IQ":
                      type: "string"
                      format: "uri"
                    "IE":
                      type: "string"
                      format: "uri"
                    "IL":
                      type: "string"
                      format: "uri"
                    "IT":
                      type: "string"
                      format: "uri"
                    "JM":
                      type: "string"
                      format: "uri"
                    "JP":
                      type: "string"
                      format: "uri"
                    "JO":
                      type: "string"
                      format: "uri"
                    "KZ":
                      type: "string"
                      format: "uri"
                    "KE":
                      type: "string"
                      format: "uri"
                    "KI":
                      type: "string"
                      format: "uri"
                    "KP":
                      type: "string"
                      format: "uri"
                    "KR":
                      type: "string"
                      format: "uri"
                    "KW":
                      type: "string"
                      format: "uri"
                    "KG":
                      type: "string"
                      format: "uri"
                    "LA":
                      type: "string"
                      format: "uri"
                    "LV":
                      type: "string"
                      format: "uri"
                    "LB":
                      type: "string"
                      format: "uri"
                    "LS":
                      type: "string"
                      format: "uri"
                    "LR":
                      type: "string"
                      format: "uri"
                    "LY":
                      type: "string"
                      format: "uri"
                    "LI":
                      type: "string"
                      format: "uri"
                    "LT":
                      type: "string"
                      format: "uri"
                    "LU":
                      type: "string"
                      format: "uri"
                    "MO":
                      type: "string"
                      format: "uri"
                    "MG":
                      type: "string"
                      format: "uri"
                    "MW":
                      type: "string"
                      format: "uri"
                    "MY":
                      type: "string"
                      format: "uri"
                    "MV":
                      type: "string"
                      format: "uri"
                    "ML":
                      type: "string"
                      format: "uri"
                    "MT":
                      type: "string"
                      format: "uri"
                    "MH":
                      type: "string"
                      format: "uri"
                    "MQ":
                      type: "string"
                      format: "uri"
                    "MR":
                      type: "string"
                      format: "uri"
                    "MU":
                      type: "string"
                      format: "uri"
                    "YT":
                      type: "string"
                      format: "uri"
                    "MX":
                      type: "string"
                      format: "uri"
                    "FM":
                      type: "string"
                      format: "uri"
                    "MD":
                      type: "string"
                      format: "uri"
                    "MC":
                      type: "string"
                      format: "uri"
                    "MN":
                      type: "string"
                      format: "uri"
                    "MS":
                      type: "string"
                      format: "uri"
                    "MA":
                      type: "string"
                      format: "uri"
                    "MZ":
                      type: "string"
                      format: "uri"
                    "MM":
                      type: "string"
                      format: "uri"
                    "NA":
                      type: "string"
                      format: "uri"
                    "NR":
                      type: "string"
                      format: "uri"
                    "NP":
                      type: "string"
                      format: "uri"
                    "NL":
                      type: "string"
                      format: "uri"
                    "NC":
                      type: "string"
                      format: "uri"
                    "NZ":
                      type: "string"
                      format: "uri"
                    "NI":
                      type: "string"
                      format: "uri"
                    "NE":
                      type: "string"
                      format: "uri"
                    "NG":
                      type: "string"
                      format: "uri"
                    "NU":
                      type: "string"
                      format: "uri"
                    "NF":
                      type: "string"
                      format: "uri"
                    "MK":
                      type: "string"
                      format: "uri"
                    "MP":
                      type: "string"
                      format: "uri"
                    "NO":
                      type: "string"
                      format: "uri"
                    "OM":
                      type: "string"
                      format: "uri"
                    "PK":
                      type: "string"
                      format: "uri"
                    "PW":
                      type: "string"
                      format: "uri"
                    "PS":
                      type: "string"
                      format: "uri"
                    "PA":
                      type: "string"
                      format: "uri"
                    "PG":
                      type: "string"
                      format: "uri"
                    "PY":
                      type: "string"
                      format: "uri"
                    "PE":
                      type: "string"
                      format: "uri"
                    "PH":
                      type: "string"
                      format: "uri"
                    "PN":
                      type: "string"
                      format: "uri"
                    "PL":
                      type: "string"
                      format: "uri"
                    "PT":
                      type: "string"
                      format: "uri"
                    "PR":
                      type: "string"
                      format: "uri"
                    "QA":
                      type: "string"
                      format: "uri"
                    "RE":
                      type: "string"
                      format: "uri"
                    "RO":
                      type: "string"
                      format: "uri"
                    "RU":
                      type: "string"
                      format: "uri"
                    "RW":
                      type: "string"
                      format: "uri"
                    "SH":
                      type: "string"
                      format: "uri"
                    "KN":
                      type: "string"
                      format: "uri"
                    "LC":
                      type: "string"
                      format: "uri"
                    "PM":
                      type: "string"
                      format: "uri"
                    "VC":
                      type: "string"
                      format: "uri"
                    "WS":
                      type: "string"
                      format: "uri"
                    "SM":
                      type: "string"
                      format: "uri"
                    "ST":
                      type: "string"
                      format: "uri"
                    "SA":
                      type: "string"
                      format: "uri"
                    "SN":
                      type: "string"
                      format: "uri"
                    "SC":
                      type: "string"
                      format: "uri"
                    "SL":
                      type: "string"
                      format: "uri"
                    "SG":
                      type: "string"
                      format: "uri"
                    "SK":
                      type: "string"
                      format: "uri"
                    "SI":
                      type: "string"
                      format: "uri"
                    "SB":
                      type: "string"
                      format: "uri"
                    "SO":
                      type: "string"
                      format: "uri"
                    "ZA":
                      type: "string"
                      format: "uri"
                    "GS":
                      type: "string"
                      format: "uri"
                    "ES":
                      type: "string"
                      format: "uri"
                    "LK":
                      type: "string"
                      format: "uri"
                    "SD":
                      type: "string"
                      format: "uri"
                    "SR":
                      type: "string"
                      format: "uri"
                    "SJ":
                      type: "string"
                      format: "uri"
                    "SZ":
                      type: "string"
                      format: "uri"
                    "SE":
                      type: "string"
                      format: "uri"
                    "CH":
                      type: "string"
                      format: "uri"
                    "SY":
                      type: "string"
                      format: "uri"
                    "TW":
                      type: "string"
                      format: "uri"
                    "TJ":
                      type: "string"
                      format: "uri"
                    "TZ":
                      type: "string"
                      format: "uri"
                    "TH":
                      type: "string"
                      format: "uri"
                    "TL":
                      type: "string"
                      format: "uri"
                    "TG":
                      type: "string"
                      format: "uri"
                    "TK":
                      type: "string"
                      format: "uri"
                    "TO":
                      type: "string"
                      format: "uri"
                    "TT":
                      type: "string"
                      format: "uri"
                    "TN":
                      type: "string"
                      format: "uri"
                    "TR":
                      type: "string"
                      format: "uri"
                    "TM":
                      type: "string"
                      format: "uri"
                    "TC":
                      type: "string"
                      format: "uri"
                    "TV":
                      type: "string"
                      format: "uri"
                    "UG":
                      type: "string"
                      format: "uri"
                    "UA":
                      type: "string"
                      format: "uri"
                    "AE":
                      type: "string"
                      format: "uri"
                    "GB":
                      type: "string"
                      format: "uri"
                    "US":
                      type: "string"
                      format: "uri"
                    "UM":
                      type: "string"
                      format: "uri"
                    "UY":
                      type: "string"
                      format: "uri"
                    "UZ":
                      type: "string"
                      format: "uri"
                    "VU":
                      type: "string"
                      format: "uri"
                    "VE":
                      type: "string"
                      format: "uri"
                    "VN":
                      type: "string"
                      format: "uri"
                    "VG":
                      type: "string"
                      format: "uri"
                    "VI":
                      type: "string"
                      format: "uri"
                    "WF":
                      type: "string"
                      format: "uri"
                    "EH":
                      type: "string"
                      format: "uri"
                    "YE":
                      type: "string"
                      format: "uri"
                    "ZM":
                      type: "string"
                      format: "uri"
                    "ZW":
                      type: "string"
                      format: "uri"
                    "AX":
                      type: "string"
                      format: "uri"
                    "BQ":
                      type: "string"
                      format: "uri"
                    "CW":
                      type: "string"
                      format: "uri"
                    "GG":
                      type: "string"
                      format: "uri"
                    "IM":
                      type: "string"
                      format: "uri"
                    "JE":
                      type: "string"
                      format: "uri"
                    "ME":
                      type: "string"
                      format: "uri"
                    "BL":
                      type: "string"
                      format: "uri"
                    "MF":
                      type: "string"
                      format: "uri"
                    "RS":
                      type: "string"
                      format: "uri"
                    "SX":
                      type: "string"
                      format: "uri"
                    "SS":
                      type: "string"
                      format: "uri"
                    "XK":
                      type: "string"
                      format: "uri"
                  additionalProperties: false
                  description: "Geo targeting information for the short link in JSON format `{[COUNTRY]: https://example.com }`. Learn more: https://d.to/geo"
                "publicStats":
                  type: "boolean"
                "tagId":
                  type: "string"
                  nullable: true
                  description: "The unique ID of the tag assigned to the short link. This field is deprecated – use `tags` instead."
                  deprecated: true
                "tags":
                  type: "array"
                  nullable: true
                  items: {"$ref": "#/components/schemas/TagSchema"}
                  description: "The tags assigned to the short link."
                "webhookIds":
                  type: "array"
                  items:
                    type: "string"
                  description: "The IDs of the webhooks that the short link is associated with."
                "comments":
                  type: "string"
                  nullable: true
                  description: "The comments for the short link."
                "shortLink":
                  type: "string"
                  format: "uri"
                  description: "The full URL of the short link, including the https protocol (e.g. `https://dub.sh/try`)."
                "qrCode":
                  type: "string"
                  format: "uri"
                  description: "The full URL of the QR code for the short link (e.g. `https://api.dub.co/qr?url=https://dub.sh/try`)."
                "utm_source":
                  type: "string"
                  nullable: true
                  description: "The UTM source of the short link."
                "utm_medium":
                  type: "string"
                  nullable: true
                  description: "The UTM medium of the short link."
                "utm_campaign":
                  type: "string"
                  nullable: true
                  description: "The UTM campaign of the short link."
                "utm_term":
                  type: "string"
                  nullable: true
                  description: "The UTM term of the short link."
                "utm_content":
                  type: "string"
                  nullable: true
                  description: "The UTM content of the short link."
                "userId":
                  type: "string"
                  nullable: true
                "workspaceId":
                  type: "string"
                  description: "The workspace ID of the short link."
                "clicks":
                  type: "number"
                  default: 0
                  description: "The number of clicks on the short link."
                "lastClicked":
                  type: "string"
                "leads":
                  type: "number"
                  default: 0
                  description: "The number of leads the short links has generated."
                "sales":
                  type: "number"
                  default: 0
                  description: "The number of sales the short links has generated."
                "saleAmount":
                  type: "number"
                  default: 0
                  description: "The total dollar amount of sales the short links has generated (in cents)."
                "createdAt":
                  type: "string"
                "updatedAt":
                  type: "string"
                "projectId":
                  type: "string"
                  description: "The project ID of the short link. This field is deprecated – use `workspaceId` instead."
                  deprecated: true
                "programId":
                  type: "string"
                  nullable: true
                  description: "The ID of the program the short link is associated with."
              required:
                - "id"
                - "domain"
                - "key"
                - "url"
                - "externalId"
                - "tenantId"
                - "expiresAt"
                - "expiredUrl"
                - "password"
                - "title"
                - "description"
                - "image"
                - "video"
                - "ios"
                - "android"
                - "geo"
                - "tagId"
                - "tags"
                - "webhookIds"
                - "comments"
                - "shortLink"
                - "qrCode"
                - "utm_source"
                - "utm_medium"
                - "utm_campaign"
                - "utm_term"
                - "utm_content"
                - "userId"
                - "workspaceId"
                - "clicks"
                - "lastClicked"
                - "leads"
                - "sales"
                - "saleAmount"
                - "createdAt"
                - "updatedAt"
                - "projectId"
                - "programId"
          required:
            - "click"
            - "link"
      required:
        - "id"
        - "event"
        - "createdAt"
        - "data"
      description: "Triggered when a link is clicked."
    "LeadCreatedEvent":
      type: "object"
      properties:
        "id":
          type: "string"
        "event":
          type: "string"
          enum:
            - "lead.created"
        "createdAt":
          type: "string"
        "data":
          type: "object"
          properties:
            "eventName":
              type: "string"
            "customer":
              type: "object"
              properties:
                "id":
                  type: "string"
                  description: "The unique identifier of the customer in Dub."
                "externalId":
                  type: "string"
                  description: "Unique identifier for the customer in the client's app."
                "name":
                  type: "string"
                  description: "Name of the customer."
                "email":
                  type: "string"
                  nullable: true
                  description: "Email of the customer."
                "avatar":
                  type: "string"
                  nullable: true
                  description: "Avatar URL of the customer."
                "country":
                  type: "string"
                  nullable: true
                  description: "Country of the customer."
                "createdAt":
                  type: "string"
                  description: "The date the customer was created."
                "link":
                  type: "object"
                  nullable: true
                  properties:
                    "id":
                      type: "string"
                      description: "The unique ID of the short link."
                    "domain":
                      type: "string"
                      description: "The domain of the short link. If not provided, the primary domain for the workspace will be used (or `dub.sh` if the workspace has no domains)."
                    "key":
                      type: "string"
                      description: "The short link slug. If not provided, a random 7-character slug will be generated."
                    "shortLink":
                      type: "string"
                      format: "uri"
                      description: "The full URL of the short link, including the https protocol (e.g. `https://dub.sh/try`)."
                    "programId":
                      type: "string"
                      nullable: true
                      description: "The ID of the program the short link is associated with."
                  required:
                    - "id"
                    - "domain"
                    - "key"
                    - "shortLink"
                    - "programId"
                "partner":
                  type: "object"
                  nullable: true
                  properties:
                    "id":
                      type: "string"
                    "name":
                      type: "string"
                    "email":
                      type: "string"
                    "image":
                      type: "string"
                      nullable: true
                  required:
                    - "id"
                    - "name"
                    - "email"
                "discount":
                  type: "object"
                  nullable: true
                  properties:
                    "id":
                      type: "string"
                    "couponId":
                      type: "string"
                      nullable: true
                    "couponTestId":
                      type: "string"
                      nullable: true
                    "amount":
                      type: "number"
                    "type":
                      type: "string"
                      enum:
                        - "percentage"
                        - "flat"
                    "duration":
                      type: "number"
                      nullable: true
                    "interval":
                      type: "string"
                      nullable: true
                      enum:
                        - "month"
                        - "year"
                        - null
                  required:
                    - "id"
                    - "couponId"
                    - "couponTestId"
                    - "amount"
                    - "type"
                    - "duration"
                    - "interval"
              required:
                - "id"
                - "externalId"
                - "name"
                - "createdAt"
            "click":
              type: "object"
              properties:
                "id":
                  type: "string"
                "url":
                  type: "string"
                "country":
                  type: "string"
                "city":
                  type: "string"
                "region":
                  type: "string"
                "continent":
                  type: "string"
                "device":
                  type: "string"
                "browser":
                  type: "string"
                "os":
                  type: "string"
                "referer":
                  type: "string"
                "refererUrl":
                  type: "string"
                "qr":
                  type: "boolean"
                "ip":
                  type: "string"
              required:
                - "id"
                - "url"
                - "country"
                - "city"
                - "region"
                - "continent"
                - "device"
                - "browser"
                - "os"
                - "referer"
                - "refererUrl"
                - "ip"
            "link":
              type: "object"
              properties:
                "id":
                  type: "string"
                  description: "The unique ID of the short link."
                "domain":
                  type: "string"
                  description: "The domain of the short link. If not provided, the primary domain for the workspace will be used (or `dub.sh` if the workspace has no domains)."
                "key":
                  type: "string"
                  description: "The short link slug. If not provided, a random 7-character slug will be generated."
                "url":
                  type: "string"
                "trackConversion":
                  type: "boolean"
                "externalId":
                  type: "string"
                  nullable: true
                  description: "The ID of the link in your database. If set, it can be used to identify the link in future API requests (must be prefixed with 'ext_' when passed as a query parameter). This key is unique across your workspace."
                "tenantId":
                  type: "string"
                  nullable: true
                  description: "The ID of the tenant that created the link inside your system. If set, it can be used to fetch all links for a tenant."
                "archived":
                  type: "boolean"
                "expiresAt":
                  type: "string"
                "expiredUrl":
                  type: "string"
                  nullable: true
                "password":
                  type: "string"
                  nullable: true
                  description: "The password required to access the destination URL of the short link."
                "proxy":
                  type: "boolean"
                "title":
                  type: "string"
                  nullable: true
                  description: "The title of the short link generated via `api.dub.co/metatags`. Will be used for Custom Social Media Cards if `proxy` is true."
                "description":
                  type: "string"
                  nullable: true
                  description: "The description of the short link generated via `api.dub.co/metatags`. Will be used for Custom Social Media Cards if `proxy` is true."
                "image":
                  type: "string"
                  nullable: true
                  description: "The image of the short link generated via `api.dub.co/metatags`. Will be used for Custom Social Media Cards if `proxy` is true."
                "video":
                  type: "string"
                  nullable: true
                  description: "The custom link preview video (og:video). Will be used for Custom Social Media Cards if `proxy` is true. Learn more: https://d.to/og"
                "rewrite":
                  type: "boolean"
                "doIndex":
                  type: "boolean"
                "ios":
                  type: "string"
                  nullable: true
                  description: "The iOS destination URL for the short link for iOS device targeting."
                "android":
                  type: "string"
                  nullable: true
                  description: "The Android destination URL for the short link for Android device targeting."
                "geo":
                  type: "object"
                  nullable: true
                  properties:
                    "AF":
                      type: "string"
                      format: "uri"
                    "AL":
                      type: "string"
                      format: "uri"
                    "DZ":
                      type: "string"
                      format: "uri"
                    "AS":
                      type: "string"
                      format: "uri"
                    "AD":
                      type: "string"
                      format: "uri"
                    "AO":
                      type: "string"
                      format: "uri"
                    "AI":
                      type: "string"
                      format: "uri"
                    "AQ":
                      type: "string"
                      format: "uri"
                    "AG":
                      type: "string"
                      format: "uri"
                    "AR":
                      type: "string"
                      format: "uri"
                    "AM":
                      type: "string"
                      format: "uri"
                    "AW":
                      type: "string"
                      format: "uri"
                    "AU":
                      type: "string"
                      format: "uri"
                    "AT":
                      type: "string"
                      format: "uri"
                    "AZ":
                      type: "string"
                      format: "uri"
                    "BS":
                      type: "string"
                      format: "uri"
                    "BH":
                      type: "string"
                      format: "uri"
                    "BD":
                      type: "string"
                      format: "uri"
                    "BB":
                      type: "string"
                      format: "uri"
                    "BY":
                      type: "string"
                      format: "uri"
                    "BE":
                      type: "string"
                      format: "uri"
                    "BZ":
                      type: "string"
                      format: "uri"
                    "BJ":
                      type: "string"
                      format: "uri"
                    "BM":
                      type: "string"
                      format: "uri"
                    "BT":
                      type: "string"
                      format: "uri"
                    "BO":
                      type: "string"
                      format: "uri"
                    "BA":
                      type: "string"
                      format: "uri"
                    "BW":
                      type: "string"
                      format: "uri"
                    "BV":
                      type: "string"
                      format: "uri"
                    "BR":
                      type: "string"
                      format: "uri"
                    "IO":
                      type: "string"
                      format: "uri"
                    "BN":
                      type: "string"
                      format: "uri"
                    "BG":
                      type: "string"
                      format: "uri"
                    "BF":
                      type: "string"
                      format: "uri"
                    "BI":
                      type: "string"
                      format: "uri"
                    "KH":
                      type: "string"
                      format: "uri"
                    "CM":
                      type: "string"
                      format: "uri"
                    "CA":
                      type: "string"
                      format: "uri"
                    "CV":
                      type: "string"
                      format: "uri"
                    "KY":
                      type: "string"
                      format: "uri"
                    "CF":
                      type: "string"
                      format: "uri"
                    "TD":
                      type: "string"
                      format: "uri"
                    "CL":
                      type: "string"
                      format: "uri"
                    "CN":
                      type: "string"
                      format: "uri"
                    "CX":
                      type: "string"
                      format: "uri"
                    "CC":
                      type: "string"
                      format: "uri"
                    "CO":
                      type: "string"
                      format: "uri"
                    "KM":
                      type: "string"
                      format: "uri"
                    "CG":
                      type: "string"
                      format: "uri"
                    "CD":
                      type: "string"
                      format: "uri"
                    "CK":
                      type: "string"
                      format: "uri"
                    "CR":
                      type: "string"
                      format: "uri"
                    "CI":
                      type: "string"
                      format: "uri"
                    "HR":
                      type: "string"
                      format: "uri"
                    "CU":
                      type: "string"
                      format: "uri"
                    "CY":
                      type: "string"
                      format: "uri"
                    "CZ":
                      type: "string"
                      format: "uri"
                    "DK":
                      type: "string"
                      format: "uri"
                    "DJ":
                      type: "string"
                      format: "uri"
                    "DM":
                      type: "string"
                      format: "uri"
                    "DO":
                      type: "string"
                      format: "uri"
                    "EC":
                      type: "string"
                      format: "uri"
                    "EG":
                      type: "string"
                      format: "uri"
                    "SV":
                      type: "string"
                      format: "uri"
                    "GQ":
                      type: "string"
                      format: "uri"
                    "ER":
                      type: "string"
                      format: "uri"
                    "EE":
                      type: "string"
                      format: "uri"
                    "ET":
                      type: "string"
                      format: "uri"
                    "FK":
                      type: "string"
                      format: "uri"
                    "FO":
                      type: "string"
                      format: "uri"
                    "FJ":
                      type: "string"
                      format: "uri"
                    "FI":
                      type: "string"
                      format: "uri"
                    "FR":
                      type: "string"
                      format: "uri"
                    "GF":
                      type: "string"
                      format: "uri"
                    "PF":
                      type: "string"
                      format: "uri"
                    "TF":
                      type: "string"
                      format: "uri"
                    "GA":
                      type: "string"
                      format: "uri"
                    "GM":
                      type: "string"
                      format: "uri"
                    "GE":
                      type: "string"
                      format: "uri"
                    "DE":
                      type: "string"
                      format: "uri"
                    "GH":
                      type: "string"
                      format: "uri"
                    "GI":
                      type: "string"
                      format: "uri"
                    "GR":
                      type: "string"
                      format: "uri"
                    "GL":
                      type: "string"
                      format: "uri"
                    "GD":
                      type: "string"
                      format: "uri"
                    "GP":
                      type: "string"
                      format: "uri"
                    "GU":
                      type: "string"
                      format: "uri"
                    "GT":
                      type: "string"
                      format: "uri"
                    "GN":
                      type: "string"
                      format: "uri"
                    "GW":
                      type: "string"
                      format: "uri"
                    "GY":
                      type: "string"
                      format: "uri"
                    "HT":
                      type: "string"
                      format: "uri"
                    "HM":
                      type: "string"
                      format: "uri"
                    "VA":
                      type: "string"
                      format: "uri"
                    "HN":
                      type: "string"
                      format: "uri"
                    "HK":
                      type: "string"
                      format: "uri"
                    "HU":
                      type: "string"
                      format: "uri"
                    "IS":
                      type: "string"
                      format: "uri"
                    "IN":
                      type: "string"
                      format: "uri"
                    "ID":
                      type: "string"
                      format: "uri"
                    "IR":
                      type: "string"
                      format: "uri"
                    "IQ":
                      type: "string"
                      format: "uri"
                    "IE":
                      type: "string"
                      format: "uri"
                    "IL":
                      type: "string"
                      format: "uri"
                    "IT":
                      type: "string"
                      format: "uri"
                    "JM":
                      type: "string"
                      format: "uri"
                    "JP":
                      type: "string"
                      format: "uri"
                    "JO":
                      type: "string"
                      format: "uri"
                    "KZ":
                      type: "string"
                      format: "uri"
                    "KE":
                      type: "string"
                      format: "uri"
                    "KI":
                      type: "string"
                      format: "uri"
                    "KP":
                      type: "string"
                      format: "uri"
                    "KR":
                      type: "string"
                      format: "uri"
                    "KW":
                      type: "string"
                      format: "uri"
                    "KG":
                      type: "string"
                      format: "uri"
                    "LA":
                      type: "string"
                      format: "uri"
                    "LV":
                      type: "string"
                      format: "uri"
                    "LB":
                      type: "string"
                      format: "uri"
                    "LS":
                      type: "string"
                      format: "uri"
                    "LR":
                      type: "string"
                      format: "uri"
                    "LY":
                      type: "string"
                      format: "uri"
                    "LI":
                      type: "string"
                      format: "uri"
                    "LT":
                      type: "string"
                      format: "uri"
                    "LU":
                      type: "string"
                      format: "uri"
                    "MO":
                      type: "string"
                      format: "uri"
                    "MG":
                      type: "string"
                      format: "uri"
                    "MW":
                      type: "string"
                      format: "uri"
                    "MY":
                      type: "string"
                      format: "uri"
                    "MV":
                      type: "string"
                      format: "uri"
                    "ML":
                      type: "string"
                      format: "uri"
                    "MT":
                      type: "string"
                      format: "uri"
                    "MH":
                      type: "string"
                      format: "uri"
                    "MQ":
                      type: "string"
                      format: "uri"
                    "MR":
                      type: "string"
                      format: "uri"
                    "MU":
                      type: "string"
                      format: "uri"
                    "YT":
                      type: "string"
                      format: "uri"
                    "MX":
                      type: "string"
                      format: "uri"
                    "FM":
                      type: "string"
                      format: "uri"
                    "MD":
                      type: "string"
                      format: "uri"
                    "MC":
                      type: "string"
                      format: "uri"
                    "MN":
                      type: "string"
                      format: "uri"
                    "MS":
                      type: "string"
                      format: "uri"
                    "MA":
                      type: "string"
                      format: "uri"
                    "MZ":
                      type: "string"
                      format: "uri"
                    "MM":
                      type: "string"
                      format: "uri"
                    "NA":
                      type: "string"
                      format: "uri"
                    "NR":
                      type: "string"
                      format: "uri"
                    "NP":
                      type: "string"
                      format: "uri"
                    "NL":
                      type: "string"
                      format: "uri"
                    "NC":
                      type: "string"
                      format: "uri"
                    "NZ":
                      type: "string"
                      format: "uri"
                    "NI":
                      type: "string"
                      format: "uri"
                    "NE":
                      type: "string"
                      format: "uri"
                    "NG":
                      type: "string"
                      format: "uri"
                    "NU":
                      type: "string"
                      format: "uri"
                    "NF":
                      type: "string"
                      format: "uri"
                    "MK":
                      type: "string"
                      format: "uri"
                    "MP":
                      type: "string"
                      format: "uri"
                    "NO":
                      type: "string"
                      format: "uri"
                    "OM":
                      type: "string"
                      format: "uri"
                    "PK":
                      type: "string"
                      format: "uri"
                    "PW":
                      type: "string"
                      format: "uri"
                    "PS":
                      type: "string"
                      format: "uri"
                    "PA":
                      type: "string"
                      format: "uri"
                    "PG":
                      type: "string"
                      format: "uri"
                    "PY":
                      type: "string"
                      format: "uri"
                    "PE":
                      type: "string"
                      format: "uri"
                    "PH":
                      type: "string"
                      format: "uri"
                    "PN":
                      type: "string"
                      format: "uri"
                    "PL":
                      type: "string"
                      format: "uri"
                    "PT":
                      type: "string"
                      format: "uri"
                    "PR":
                      type: "string"
                      format: "uri"
                    "QA":
                      type: "string"
                      format: "uri"
                    "RE":
                      type: "string"
                      format: "uri"
                    "RO":
                      type: "string"
                      format: "uri"
                    "RU":
                      type: "string"
                      format: "uri"
                    "RW":
                      type: "string"
                      format: "uri"
                    "SH":
                      type: "string"
                      format: "uri"
                    "KN":
                      type: "string"
                      format: "uri"
                    "LC":
                      type: "string"
                      format: "uri"
                    "PM":
                      type: "string"
                      format: "uri"
                    "VC":
                      type: "string"
                      format: "uri"
                    "WS":
                      type: "string"
                      format: "uri"
                    "SM":
                      type: "string"
                      format: "uri"
                    "ST":
                      type: "string"
                      format: "uri"
                    "SA":
                      type: "string"
                      format: "uri"
                    "SN":
                      type: "string"
                      format: "uri"
                    "SC":
                      type: "string"
                      format: "uri"
                    "SL":
                      type: "string"
                      format: "uri"
                    "SG":
                      type: "string"
                      format: "uri"
                    "SK":
                      type: "string"
                      format: "uri"
                    "SI":
                      type: "string"
                      format: "uri"
                    "SB":
                      type: "string"
                      format: "uri"
                    "SO":
                      type: "string"
                      format: "uri"
                    "ZA":
                      type: "string"
                      format: "uri"
                    "GS":
                      type: "string"
                      format: "uri"
                    "ES":
                      type: "string"
                      format: "uri"
                    "LK":
                      type: "string"
                      format: "uri"
                    "SD":
                      type: "string"
                      format: "uri"
                    "SR":
                      type: "string"
                      format: "uri"
                    "SJ":
                      type: "string"
                      format: "uri"
                    "SZ":
                      type: "string"
                      format: "uri"
                    "SE":
                      type: "string"
                      format: "uri"
                    "CH":
                      type: "string"
                      format: "uri"
                    "SY":
                      type: "string"
                      format: "uri"
                    "TW":
                      type: "string"
                      format: "uri"
                    "TJ":
                      type: "string"
                      format: "uri"
                    "TZ":
                      type: "string"
                      format: "uri"
                    "TH":
                      type: "string"
                      format: "uri"
                    "TL":
                      type: "string"
                      format: "uri"
                    "TG":
                      type: "string"
                      format: "uri"
                    "TK":
                      type: "string"
                      format: "uri"
                    "TO":
                      type: "string"
                      format: "uri"
                    "TT":
                      type: "string"
                      format: "uri"
                    "TN":
                      type: "string"
                      format: "uri"
                    "TR":
                      type: "string"
                      format: "uri"
                    "TM":
                      type: "string"
                      format: "uri"
                    "TC":
                      type: "string"
                      format: "uri"
                    "TV":
                      type: "string"
                      format: "uri"
                    "UG":
                      type: "string"
                      format: "uri"
                    "UA":
                      type: "string"
                      format: "uri"
                    "AE":
                      type: "string"
                      format: "uri"
                    "GB":
                      type: "string"
                      format: "uri"
                    "US":
                      type: "string"
                      format: "uri"
                    "UM":
                      type: "string"
                      format: "uri"
                    "UY":
                      type: "string"
                      format: "uri"
                    "UZ":
                      type: "string"
                      format: "uri"
                    "VU":
                      type: "string"
                      format: "uri"
                    "VE":
                      type: "string"
                      format: "uri"
                    "VN":
                      type: "string"
                      format: "uri"
                    "VG":
                      type: "string"
                      format: "uri"
                    "VI":
                      type: "string"
                      format: "uri"
                    "WF":
                      type: "string"
                      format: "uri"
                    "EH":
                      type: "string"
                      format: "uri"
                    "YE":
                      type: "string"
                      format: "uri"
                    "ZM":
                      type: "string"
                      format: "uri"
                    "ZW":
                      type: "string"
                      format: "uri"
                    "AX":
                      type: "string"
                      format: "uri"
                    "BQ":
                      type: "string"
                      format: "uri"
                    "CW":
                      type: "string"
                      format: "uri"
                    "GG":
                      type: "string"
                      format: "uri"
                    "IM":
                      type: "string"
                      format: "uri"
                    "JE":
                      type: "string"
                      format: "uri"
                    "ME":
                      type: "string"
                      format: "uri"
                    "BL":
                      type: "string"
                      format: "uri"
                    "MF":
                      type: "string"
                      format: "uri"
                    "RS":
                      type: "string"
                      format: "uri"
                    "SX":
                      type: "string"
                      format: "uri"
                    "SS":
                      type: "string"
                      format: "uri"
                    "XK":
                      type: "string"
                      format: "uri"
                  additionalProperties: false
                  description: "Geo targeting information for the short link in JSON format `{[COUNTRY]: https://example.com }`. Learn more: https://d.to/geo"
                "publicStats":
                  type: "boolean"
                "tagId":
                  type: "string"
                  nullable: true
                  description: "The unique ID of the tag assigned to the short link. This field is deprecated – use `tags` instead."
                  deprecated: true
                "tags":
                  type: "array"
                  nullable: true
                  items: {"$ref": "#/components/schemas/TagSchema"}
                  description: "The tags assigned to the short link."
                "webhookIds":
                  type: "array"
                  items:
                    type: "string"
                  description: "The IDs of the webhooks that the short link is associated with."
                "comments":
                  type: "string"
                  nullable: true
                  description: "The comments for the short link."
                "shortLink":
                  type: "string"
                  format: "uri"
                  description: "The full URL of the short link, including the https protocol (e.g. `https://dub.sh/try`)."
                "qrCode":
                  type: "string"
                  format: "uri"
                  description: "The full URL of the QR code for the short link (e.g. `https://api.dub.co/qr?url=https://dub.sh/try`)."
                "utm_source":
                  type: "string"
                  nullable: true
                  description: "The UTM source of the short link."
                "utm_medium":
                  type: "string"
                  nullable: true
                  description: "The UTM medium of the short link."
                "utm_campaign":
                  type: "string"
                  nullable: true
                  description: "The UTM campaign of the short link."
                "utm_term":
                  type: "string"
                  nullable: true
                  description: "The UTM term of the short link."
                "utm_content":
                  type: "string"
                  nullable: true
                  description: "The UTM content of the short link."
                "userId":
                  type: "string"
                  nullable: true
                "workspaceId":
                  type: "string"
                  description: "The workspace ID of the short link."
                "clicks":
                  type: "number"
                  default: 0
                  description: "The number of clicks on the short link."
                "lastClicked":
                  type: "string"
                "leads":
                  type: "number"
                  default: 0
                  description: "The number of leads the short links has generated."
                "sales":
                  type: "number"
                  default: 0
                  description: "The number of sales the short links has generated."
                "saleAmount":
                  type: "number"
                  default: 0
                  description: "The total dollar amount of sales the short links has generated (in cents)."
                "createdAt":
                  type: "string"
                "updatedAt":
                  type: "string"
                "projectId":
                  type: "string"
                  description: "The project ID of the short link. This field is deprecated – use `workspaceId` instead."
                  deprecated: true
                "programId":
                  type: "string"
                  nullable: true
                  description: "The ID of the program the short link is associated with."
              required:
                - "id"
                - "domain"
                - "key"
                - "url"
                - "externalId"
                - "tenantId"
                - "expiresAt"
                - "expiredUrl"
                - "password"
                - "title"
                - "description"
                - "image"
                - "video"
                - "ios"
                - "android"
                - "geo"
                - "tagId"
                - "tags"
                - "webhookIds"
                - "comments"
                - "shortLink"
                - "qrCode"
                - "utm_source"
                - "utm_medium"
                - "utm_campaign"
                - "utm_term"
                - "utm_content"
                - "userId"
                - "workspaceId"
                - "clicks"
                - "lastClicked"
                - "leads"
                - "sales"
                - "saleAmount"
                - "createdAt"
                - "updatedAt"
                - "projectId"
                - "programId"
          required:
            - "eventName"
            - "customer"
            - "click"
            - "link"
      required:
        - "id"
        - "event"
        - "createdAt"
        - "data"
      description: "Triggered when a lead is created."
    "SaleCreatedEvent":
      type: "object"
      properties:
        "id":
          type: "string"
        "event":
          type: "string"
          enum:
            - "sale.created"
        "createdAt":
          type: "string"
        "data":
          type: "object"
          properties:
            "eventName":
              type: "string"
            "customer":
              type: "object"
              properties:
                "id":
                  type: "string"
                  description: "The unique identifier of the customer in Dub."
                "externalId":
                  type: "string"
                  description: "Unique identifier for the customer in the client's app."
                "name":
                  type: "string"
                  description: "Name of the customer."
                "email":
                  type: "string"
                  nullable: true
                  description: "Email of the customer."
                "avatar":
                  type: "string"
                  nullable: true
                  description: "Avatar URL of the customer."
                "country":
                  type: "string"
                  nullable: true
                  description: "Country of the customer."
                "createdAt":
                  type: "string"
                  description: "The date the customer was created."
                "link":
                  type: "object"
                  nullable: true
                  properties:
                    "id":
                      type: "string"
                      description: "The unique ID of the short link."
                    "domain":
                      type: "string"
                      description: "The domain of the short link. If not provided, the primary domain for the workspace will be used (or `dub.sh` if the workspace has no domains)."
                    "key":
                      type: "string"
                      description: "The short link slug. If not provided, a random 7-character slug will be generated."
                    "shortLink":
                      type: "string"
                      format: "uri"
                      description: "The full URL of the short link, including the https protocol (e.g. `https://dub.sh/try`)."
                    "programId":
                      type: "string"
                      nullable: true
                      description: "The ID of the program the short link is associated with."
                  required:
                    - "id"
                    - "domain"
                    - "key"
                    - "shortLink"
                    - "programId"
                "partner":
                  type: "object"
                  nullable: true
                  properties:
                    "id":
                      type: "string"
                    "name":
                      type: "string"
                    "email":
                      type: "string"
                    "image":
                      type: "string"
                      nullable: true
                  required:
                    - "id"
                    - "name"
                    - "email"
                "discount":
                  type: "object"
                  nullable: true
                  properties:
                    "id":
                      type: "string"
                    "couponId":
                      type: "string"
                      nullable: true
                    "couponTestId":
                      type: "string"
                      nullable: true
                    "amount":
                      type: "number"
                    "type":
                      type: "string"
                      enum:
                        - "percentage"
                        - "flat"
                    "duration":
                      type: "number"
                      nullable: true
                    "interval":
                      type: "string"
                      nullable: true
                      enum:
                        - "month"
                        - "year"
                        - null
                  required:
                    - "id"
                    - "couponId"
                    - "couponTestId"
                    - "amount"
                    - "type"
                    - "duration"
                    - "interval"
              required:
                - "id"
                - "externalId"
                - "name"
                - "createdAt"
            "click":
              type: "object"
              properties:
                "id":
                  type: "string"
                "url":
                  type: "string"
                "country":
                  type: "string"
                "city":
                  type: "string"
                "region":
                  type: "string"
                "continent":
                  type: "string"
                "device":
                  type: "string"
                "browser":
                  type: "string"
                "os":
                  type: "string"
                "referer":
                  type: "string"
                "refererUrl":
                  type: "string"
                "qr":
                  type: "boolean"
                "ip":
                  type: "string"
              required:
                - "id"
                - "url"
                - "country"
                - "city"
                - "region"
                - "continent"
                - "device"
                - "browser"
                - "os"
                - "referer"
                - "refererUrl"
                - "ip"
            "link":
              type: "object"
              properties:
                "id":
                  type: "string"
                  description: "The unique ID of the short link."
                "domain":
                  type: "string"
                  description: "The domain of the short link. If not provided, the primary domain for the workspace will be used (or `dub.sh` if the workspace has no domains)."
                "key":
                  type: "string"
                  description: "The short link slug. If not provided, a random 7-character slug will be generated."
                "url":
                  type: "string"
                "trackConversion":
                  type: "boolean"
                "externalId":
                  type: "string"
                  nullable: true
                  description: "The ID of the link in your database. If set, it can be used to identify the link in future API requests (must be prefixed with 'ext_' when passed as a query parameter). This key is unique across your workspace."
                "tenantId":
                  type: "string"
                  nullable: true
                  description: "The ID of the tenant that created the link inside your system. If set, it can be used to fetch all links for a tenant."
                "archived":
                  type: "boolean"
                "expiresAt":
                  type: "string"
                "expiredUrl":
                  type: "string"
                  nullable: true
                "password":
                  type: "string"
                  nullable: true
                  description: "The password required to access the destination URL of the short link."
                "proxy":
                  type: "boolean"
                "title":
                  type: "string"
                  nullable: true
                  description: "The title of the short link generated via `api.dub.co/metatags`. Will be used for Custom Social Media Cards if `proxy` is true."
                "description":
                  type: "string"
                  nullable: true
                  description: "The description of the short link generated via `api.dub.co/metatags`. Will be used for Custom Social Media Cards if `proxy` is true."
                "image":
                  type: "string"
                  nullable: true
                  description: "The image of the short link generated via `api.dub.co/metatags`. Will be used for Custom Social Media Cards if `proxy` is true."
                "video":
                  type: "string"
                  nullable: true
                  description: "The custom link preview video (og:video). Will be used for Custom Social Media Cards if `proxy` is true. Learn more: https://d.to/og"
                "rewrite":
                  type: "boolean"
                "doIndex":
                  type: "boolean"
                "ios":
                  type: "string"
                  nullable: true
                  description: "The iOS destination URL for the short link for iOS device targeting."
                "android":
                  type: "string"
                  nullable: true
                  description: "The Android destination URL for the short link for Android device targeting."
                "geo":
                  type: "object"
                  nullable: true
                  properties:
                    "AF":
                      type: "string"
                      format: "uri"
                    "AL":
                      type: "string"
                      format: "uri"
                    "DZ":
                      type: "string"
                      format: "uri"
                    "AS":
                      type: "string"
                      format: "uri"
                    "AD":
                      type: "string"
                      format: "uri"
                    "AO":
                      type: "string"
                      format: "uri"
                    "AI":
                      type: "string"
                      format: "uri"
                    "AQ":
                      type: "string"
                      format: "uri"
                    "AG":
                      type: "string"
                      format: "uri"
                    "AR":
                      type: "string"
                      format: "uri"
                    "AM":
                      type: "string"
                      format: "uri"
                    "AW":
                      type: "string"
                      format: "uri"
                    "AU":
                      type: "string"
                      format: "uri"
                    "AT":
                      type: "string"
                      format: "uri"
                    "AZ":
                      type: "string"
                      format: "uri"
                    "BS":
                      type: "string"
                      format: "uri"
                    "BH":
                      type: "string"
                      format: "uri"
                    "BD":
                      type: "string"
                      format: "uri"
                    "BB":
                      type: "string"
                      format: "uri"
                    "BY":
                      type: "string"
                      format: "uri"
                    "BE":
                      type: "string"
                      format: "uri"
                    "BZ":
                      type: "string"
                      format: "uri"
                    "BJ":
                      type: "string"
                      format: "uri"
                    "BM":
                      type: "string"
                      format: "uri"
                    "BT":
                      type: "string"
                      format: "uri"
                    "BO":
                      type: "string"
                      format: "uri"
                    "BA":
                      type: "string"
                      format: "uri"
                    "BW":
                      type: "string"
                      format: "uri"
                    "BV":
                      type: "string"
                      format: "uri"
                    "BR":
                      type: "string"
                      format: "uri"
                    "IO":
                      type: "string"
                      format: "uri"
                    "BN":
                      type: "string"
                      format: "uri"
                    "BG":
                      type: "string"
                      format: "uri"
                    "BF":
                      type: "string"
                      format: "uri"
                    "BI":
                      type: "string"
                      format: "uri"
                    "KH":
                      type: "string"
                      format: "uri"
                    "CM":
                      type: "string"
                      format: "uri"
                    "CA":
                      type: "string"
                      format: "uri"
                    "CV":
                      type: "string"
                      format: "uri"
                    "KY":
                      type: "string"
                      format: "uri"
                    "CF":
                      type: "string"
                      format: "uri"
                    "TD":
                      type: "string"
                      format: "uri"
                    "CL":
                      type: "string"
                      format: "uri"
                    "CN":
                      type: "string"
                      format: "uri"
                    "CX":
                      type: "string"
                      format: "uri"
                    "CC":
                      type: "string"
                      format: "uri"
                    "CO":
                      type: "string"
                      format: "uri"
                    "KM":
                      type: "string"
                      format: "uri"
                    "CG":
                      type: "string"
                      format: "uri"
                    "CD":
                      type: "string"
                      format: "uri"
                    "CK":
                      type: "string"
                      format: "uri"
                    "CR":
                      type: "string"
                      format: "uri"
                    "CI":
                      type: "string"
                      format: "uri"
                    "HR":
                      type: "string"
                      format: "uri"
                    "CU":
                      type: "string"
                      format: "uri"
                    "CY":
                      type: "string"
                      format: "uri"
                    "CZ":
                      type: "string"
                      format: "uri"
                    "DK":
                      type: "string"
                      format: "uri"
                    "DJ":
                      type: "string"
                      format: "uri"
                    "DM":
                      type: "string"
                      format: "uri"
                    "DO":
                      type: "string"
                      format: "uri"
                    "EC":
                      type: "string"
                      format: "uri"
                    "EG":
                      type: "string"
                      format: "uri"
                    "SV":
                      type: "string"
                      format: "uri"
                    "GQ":
                      type: "string"
                      format: "uri"
                    "ER":
                      type: "string"
                      format: "uri"
                    "EE":
                      type: "string"
                      format: "uri"
                    "ET":
                      type: "string"
                      format: "uri"
                    "FK":
                      type: "string"
                      format: "uri"
                    "FO":
                      type: "string"
                      format: "uri"
                    "FJ":
                      type: "string"
                      format: "uri"
                    "FI":
                      type: "string"
                      format: "uri"
                    "FR":
                      type: "string"
                      format: "uri"
                    "GF":
                      type: "string"
                      format: "uri"
                    "PF":
                      type: "string"
                      format: "uri"
                    "TF":
                      type: "string"
                      format: "uri"
                    "GA":
                      type: "string"
                      format: "uri"
                    "GM":
                      type: "string"
                      format: "uri"
                    "GE":
                      type: "string"
                      format: "uri"
                    "DE":
                      type: "string"
                      format: "uri"
                    "GH":
                      type: "string"
                      format: "uri"
                    "GI":
                      type: "string"
                      format: "uri"
                    "GR":
                      type: "string"
                      format: "uri"
                    "GL":
                      type: "string"
                      format: "uri"
                    "GD":
                      type: "string"
                      format: "uri"
                    "GP":
                      type: "string"
                      format: "uri"
                    "GU":
                      type: "string"
                      format: "uri"
                    "GT":
                      type: "string"
                      format: "uri"
                    "GN":
                      type: "string"
                      format: "uri"
                    "GW":
                      type: "string"
                      format: "uri"
                    "GY":
                      type: "string"
                      format: "uri"
                    "HT":
                      type: "string"
                      format: "uri"
                    "HM":
                      type: "string"
                      format: "uri"
                    "VA":
                      type: "string"
                      format: "uri"
                    "HN":
                      type: "string"
                      format: "uri"
                    "HK":
                      type: "string"
                      format: "uri"
                    "HU":
                      type: "string"
                      format: "uri"
                    "IS":
                      type: "string"
                      format: "uri"
                    "IN":
                      type: "string"
                      format: "uri"
                    "ID":
                      type: "string"
                      format: "uri"
                    "IR":
                      type: "string"
                      format: "uri"
                    "IQ":
                      type: "string"
                      format: "uri"
                    "IE":
                      type: "string"
                      format: "uri"
                    "IL":
                      type: "string"
                      format: "uri"
                    "IT":
                      type: "string"
                      format: "uri"
                    "JM":
                      type: "string"
                      format: "uri"
                    "JP":
                      type: "string"
                      format: "uri"
                    "JO":
                      type: "string"
                      format: "uri"
                    "KZ":
                      type: "string"
                      format: "uri"
                    "KE":
                      type: "string"
                      format: "uri"
                    "KI":
                      type: "string"
                      format: "uri"
                    "KP":
                      type: "string"
                      format: "uri"
                    "KR":
                      type: "string"
                      format: "uri"
                    "KW":
                      type: "string"
                      format: "uri"
                    "KG":
                      type: "string"
                      format: "uri"
                    "LA":
                      type: "string"
                      format: "uri"
                    "LV":
                      type: "string"
                      format: "uri"
                    "LB":
                      type: "string"
                      format: "uri"
                    "LS":
                      type: "string"
                      format: "uri"
                    "LR":
                      type: "string"
                      format: "uri"
                    "LY":
                      type: "string"
                      format: "uri"
                    "LI":
                      type: "string"
                      format: "uri"
                    "LT":
                      type: "string"
                      format: "uri"
                    "LU":
                      type: "string"
                      format: "uri"
                    "MO":
                      type: "string"
                      format: "uri"
                    "MG":
                      type: "string"
                      format: "uri"
                    "MW":
                      type: "string"
                      format: "uri"
                    "MY":
                      type: "string"
                      format: "uri"
                    "MV":
                      type: "string"
                      format: "uri"
                    "ML":
                      type: "string"
                      format: "uri"
                    "MT":
                      type: "string"
                      format: "uri"
                    "MH":
                      type: "string"
                      format: "uri"
                    "MQ":
                      type: "string"
                      format: "uri"
                    "MR":
                      type: "string"
                      format: "uri"
                    "MU":
                      type: "string"
                      format: "uri"
                    "YT":
                      type: "string"
                      format: "uri"
                    "MX":
                      type: "string"
                      format: "uri"
                    "FM":
                      type: "string"
                      format: "uri"
                    "MD":
                      type: "string"
                      format: "uri"
                    "MC":
                      type: "string"
                      format: "uri"
                    "MN":
                      type: "string"
                      format: "uri"
                    "MS":
                      type: "string"
                      format: "uri"
                    "MA":
                      type: "string"
                      format: "uri"
                    "MZ":
                      type: "string"
                      format: "uri"
                    "MM":
                      type: "string"
                      format: "uri"
                    "NA":
                      type: "string"
                      format: "uri"
                    "NR":
                      type: "string"
                      format: "uri"
                    "NP":
                      type: "string"
                      format: "uri"
                    "NL":
                      type: "string"
                      format: "uri"
                    "NC":
                      type: "string"
                      format: "uri"
                    "NZ":
                      type: "string"
                      format: "uri"
                    "NI":
                      type: "string"
                      format: "uri"
                    "NE":
                      type: "string"
                      format: "uri"
                    "NG":
                      type: "string"
                      format: "uri"
                    "NU":
                      type: "string"
                      format: "uri"
                    "NF":
                      type: "string"
                      format: "uri"
                    "MK":
                      type: "string"
                      format: "uri"
                    "MP":
                      type: "string"
                      format: "uri"
                    "NO":
                      type: "string"
                      format: "uri"
                    "OM":
                      type: "string"
                      format: "uri"
                    "PK":
                      type: "string"
                      format: "uri"
                    "PW":
                      type: "string"
                      format: "uri"
                    "PS":
                      type: "string"
                      format: "uri"
                    "PA":
                      type: "string"
                      format: "uri"
                    "PG":
                      type: "string"
                      format: "uri"
                    "PY":
                      type: "string"
                      format: "uri"
                    "PE":
                      type: "string"
                      format: "uri"
                    "PH":
                      type: "string"
                      format: "uri"
                    "PN":
                      type: "string"
                      format: "uri"
                    "PL":
                      type: "string"
                      format: "uri"
                    "PT":
                      type: "string"
                      format: "uri"
                    "PR":
                      type: "string"
                      format: "uri"
                    "QA":
                      type: "string"
                      format: "uri"
                    "RE":
                      type: "string"
                      format: "uri"
                    "RO":
                      type: "string"
                      format: "uri"
                    "RU":
                      type: "string"
                      format: "uri"
                    "RW":
                      type: "string"
                      format: "uri"
                    "SH":
                      type: "string"
                      format: "uri"
                    "KN":
                      type: "string"
                      format: "uri"
                    "LC":
                      type: "string"
                      format: "uri"
                    "PM":
                      type: "string"
                      format: "uri"
                    "VC":
                      type: "string"
                      format: "uri"
                    "WS":
                      type: "string"
                      format: "uri"
                    "SM":
                      type: "string"
                      format: "uri"
                    "ST":
                      type: "string"
                      format: "uri"
                    "SA":
                      type: "string"
                      format: "uri"
                    "SN":
                      type: "string"
                      format: "uri"
                    "SC":
                      type: "string"
                      format: "uri"
                    "SL":
                      type: "string"
                      format: "uri"
                    "SG":
                      type: "string"
                      format: "uri"
                    "SK":
                      type: "string"
                      format: "uri"
                    "SI":
                      type: "string"
                      format: "uri"
                    "SB":
                      type: "string"
                      format: "uri"
                    "SO":
                      type: "string"
                      format: "uri"
                    "ZA":
                      type: "string"
                      format: "uri"
                    "GS":
                      type: "string"
                      format: "uri"
                    "ES":
                      type: "string"
                      format: "uri"
                    "LK":
                      type: "string"
                      format: "uri"
                    "SD":
                      type: "string"
                      format: "uri"
                    "SR":
                      type: "string"
                      format: "uri"
                    "SJ":
                      type: "string"
                      format: "uri"
                    "SZ":
                      type: "string"
                      format: "uri"
                    "SE":
                      type: "string"
                      format: "uri"
                    "CH":
                      type: "string"
                      format: "uri"
                    "SY":
                      type: "string"
                      format: "uri"
                    "TW":
                      type: "string"
                      format: "uri"
                    "TJ":
                      type: "string"
                      format: "uri"
                    "TZ":
                      type: "string"
                      format: "uri"
                    "TH":
                      type: "string"
                      format: "uri"
                    "TL":
                      type: "string"
                      format: "uri"
                    "TG":
                      type: "string"
                      format: "uri"
                    "TK":
                      type: "string"
                      format: "uri"
                    "TO":
                      type: "string"
                      format: "uri"
                    "TT":
                      type: "string"
                      format: "uri"
                    "TN":
                      type: "string"
                      format: "uri"
                    "TR":
                      type: "string"
                      format: "uri"
                    "TM":
                      type: "string"
                      format: "uri"
                    "TC":
                      type: "string"
                      format: "uri"
                    "TV":
                      type: "string"
                      format: "uri"
                    "UG":
                      type: "string"
                      format: "uri"
                    "UA":
                      type: "string"
                      format: "uri"
                    "AE":
                      type: "string"
                      format: "uri"
                    "GB":
                      type: "string"
                      format: "uri"
                    "US":
                      type: "string"
                      format: "uri"
                    "UM":
                      type: "string"
                      format: "uri"
                    "UY":
                      type: "string"
                      format: "uri"
                    "UZ":
                      type: "string"
                      format: "uri"
                    "VU":
                      type: "string"
                      format: "uri"
                    "VE":
                      type: "string"
                      format: "uri"
                    "VN":
                      type: "string"
                      format: "uri"
                    "VG":
                      type: "string"
                      format: "uri"
                    "VI":
                      type: "string"
                      format: "uri"
                    "WF":
                      type: "string"
                      format: "uri"
                    "EH":
                      type: "string"
                      format: "uri"
                    "YE":
                      type: "string"
                      format: "uri"
                    "ZM":
                      type: "string"
                      format: "uri"
                    "ZW":
                      type: "string"
                      format: "uri"
                    "AX":
                      type: "string"
                      format: "uri"
                    "BQ":
                      type: "string"
                      format: "uri"
                    "CW":
                      type: "string"
                      format: "uri"
                    "GG":
                      type: "string"
                      format: "uri"
                    "IM":
                      type: "string"
                      format: "uri"
                    "JE":
                      type: "string"
                      format: "uri"
                    "ME":
                      type: "string"
                      format: "uri"
                    "BL":
                      type: "string"
                      format: "uri"
                    "MF":
                      type: "string"
                      format: "uri"
                    "RS":
                      type: "string"
                      format: "uri"
                    "SX":
                      type: "string"
                      format: "uri"
                    "SS":
                      type: "string"
                      format: "uri"
                    "XK":
                      type: "string"
                      format: "uri"
                  additionalProperties: false
                  description: "Geo targeting information for the short link in JSON format `{[COUNTRY]: https://example.com }`. Learn more: https://d.to/geo"
                "publicStats":
                  type: "boolean"
                "tagId":
                  type: "string"
                  nullable: true
                  description: "The unique ID of the tag assigned to the short link. This field is deprecated – use `tags` instead."
                  deprecated: true
                "tags":
                  type: "array"
                  nullable: true
                  items: {"$ref": "#/components/schemas/TagSchema"}
                  description: "The tags assigned to the short link."
                "webhookIds":
                  type: "array"
                  items:
                    type: "string"
                  description: "The IDs of the webhooks that the short link is associated with."
                "comments":
                  type: "string"
                  nullable: true
                  description: "The comments for the short link."
                "shortLink":
                  type: "string"
                  format: "uri"
                  description: "The full URL of the short link, including the https protocol (e.g. `https://dub.sh/try`)."
                "qrCode":
                  type: "string"
                  format: "uri"
                  description: "The full URL of the QR code for the short link (e.g. `https://api.dub.co/qr?url=https://dub.sh/try`)."
                "utm_source":
                  type: "string"
                  nullable: true
                  description: "The UTM source of the short link."
                "utm_medium":
                  type: "string"
                  nullable: true
                  description: "The UTM medium of the short link."
                "utm_campaign":
                  type: "string"
                  nullable: true
                  description: "The UTM campaign of the short link."
                "utm_term":
                  type: "string"
                  nullable: true
                  description: "The UTM term of the short link."
                "utm_content":
                  type: "string"
                  nullable: true
                  description: "The UTM content of the short link."
                "userId":
                  type: "string"
                  nullable: true
                "workspaceId":
                  type: "string"
                  description: "The workspace ID of the short link."
                "clicks":
                  type: "number"
                  default: 0
                  description: "The number of clicks on the short link."
                "lastClicked":
                  type: "string"
                "leads":
                  type: "number"
                  default: 0
                  description: "The number of leads the short links has generated."
                "sales":
                  type: "number"
                  default: 0
                  description: "The number of sales the short links has generated."
                "saleAmount":
                  type: "number"
                  default: 0
                  description: "The total dollar amount of sales the short links has generated (in cents)."
                "createdAt":
                  type: "string"
                "updatedAt":
                  type: "string"
                "projectId":
                  type: "string"
                  description: "The project ID of the short link. This field is deprecated – use `workspaceId` instead."
                  deprecated: true
                "programId":
                  type: "string"
                  nullable: true
                  description: "The ID of the program the short link is associated with."
              required:
                - "id"
                - "domain"
                - "key"
                - "url"
                - "externalId"
                - "tenantId"
                - "expiresAt"
                - "expiredUrl"
                - "password"
                - "title"
                - "description"
                - "image"
                - "video"
                - "ios"
                - "android"
                - "geo"
                - "tagId"
                - "tags"
                - "webhookIds"
                - "comments"
                - "shortLink"
                - "qrCode"
                - "utm_source"
                - "utm_medium"
                - "utm_campaign"
                - "utm_term"
                - "utm_content"
                - "userId"
                - "workspaceId"
                - "clicks"
                - "lastClicked"
                - "leads"
                - "sales"
                - "saleAmount"
                - "createdAt"
                - "updatedAt"
                - "projectId"
                - "programId"
            "sale":
              type: "object"
              properties:
                "amount":
                  type: "number"
                "currency":
                  type: "string"
                "paymentProcessor":
                  type: "string"
                "invoiceId":
                  type: "string"
                  nullable: true
              required:
                - "amount"
                - "currency"
                - "paymentProcessor"
                - "invoiceId"
          required:
            - "eventName"
            - "customer"
            - "click"
            - "link"
            - "sale"
      required:
        - "id"
        - "event"
        - "createdAt"
        - "data"
      description: "Triggered when a sale is created."
  responses:
    "400":
      description: "The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing)."
      content:
        "application/json":
          schema:
            x-speakeasy-name-override: "BadRequest"
            type: "object"
            properties:
              "error":
                type: "object"
                properties:
                  "code":
                    type: "string"
                    enum:
                      - "bad_request"
                    description: "A short code indicating the error code returned."
                    example: "bad_request"
                  "message":
                    x-speakeasy-error-message: true
                    type: "string"
                    description: "A human readable explanation of what went wrong."
                    example: "The requested resource was not found."
                  "doc_url":
                    type: "string"
                    description: "A link to our documentation with more details about this error code"
                    example: "https://dub.co/docs/api-reference/errors#bad-request"
                required:
                  - "code"
                  - "message"
            required:
              - "error"
    "401":
      description: "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\". That is, the client must authenticate itself to get the requested response."
      content:
        "application/json":
          schema:
            x-speakeasy-name-override: "Unauthorized"
            type: "object"
            properties:
              "error":
                type: "object"
                properties:
                  "code":
                    type: "string"
                    enum:
                      - "unauthorized"
                    description: "A short code indicating the error code returned."
                    example: "unauthorized"
                  "message":
                    x-speakeasy-error-message: true
                    type: "string"
                    description: "A human readable explanation of what went wrong."
                    example: "The requested resource was not found."
                  "doc_url":
                    type: "string"
                    description: "A link to our documentation with more details about this error code"
                    example: "https://dub.co/docs/api-reference/errors#unauthorized"
                required:
                  - "code"
                  - "message"
            required:
              - "error"
    "403":
      description: "The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource. Unlike 401 Unauthorized, the client's identity is known to the server."
      content:
        "application/json":
          schema:
            x-speakeasy-name-override: "Forbidden"
            type: "object"
            properties:
              "error":
                type: "object"
                properties:
                  "code":
                    type: "string"
                    enum:
                      - "forbidden"
                    description: "A short code indicating the error code returned."
                    example: "forbidden"
                  "message":
                    x-speakeasy-error-message: true
                    type: "string"
                    description: "A human readable explanation of what went wrong."
                    example: "The requested resource was not found."
                  "doc_url":
                    type: "string"
                    description: "A link to our documentation with more details about this error code"
                    example: "https://dub.co/docs/api-reference/errors#forbidden"
                required:
                  - "code"
                  - "message"
            required:
              - "error"
    "404":
      description: "The server cannot find the requested resource."
      content:
        "application/json":
          schema:
            x-speakeasy-name-override: "NotFound"
            type: "object"
            properties:
              "error":
                type: "object"
                properties:
                  "code":
                    type: "string"
                    enum:
                      - "not_found"
                    description: "A short code indicating the error code returned."
                    example: "not_found"
                  "message":
                    x-speakeasy-error-message: true
                    type: "string"
                    description: "A human readable explanation of what went wrong."
                    example: "The requested resource was not found."
                  "doc_url":
                    type: "string"
                    description: "A link to our documentation with more details about this error code"
                    example: "https://dub.co/docs/api-reference/errors#not-found"
                required:
                  - "code"
                  - "message"
            required:
              - "error"
    "409":
      description: "This response is sent when a request conflicts with the current state of the server."
      content:
        "application/json":
          schema:
            x-speakeasy-name-override: "Conflict"
            type: "object"
            properties:
              "error":
                type: "object"
                properties:
                  "code":
                    type: "string"
                    enum:
                      - "conflict"
                    description: "A short code indicating the error code returned."
                    example: "conflict"
                  "message":
                    x-speakeasy-error-message: true
                    type: "string"
                    description: "A human readable explanation of what went wrong."
                    example: "The requested resource was not found."
                  "doc_url":
                    type: "string"
                    description: "A link to our documentation with more details about this error code"
                    example: "https://dub.co/docs/api-reference/errors#conflict"
                required:
                  - "code"
                  - "message"
            required:
              - "error"
    "410":
      description: "This response is sent when the requested content has been permanently deleted from server, with no forwarding address."
      content:
        "application/json":
          schema:
            x-speakeasy-name-override: "InviteExpired"
            type: "object"
            properties:
              "error":
                type: "object"
                properties:
                  "code":
                    type: "string"
                    enum:
                      - "invite_expired"
                    description: "A short code indicating the error code returned."
                    example: "invite_expired"
                  "message":
                    x-speakeasy-error-message: true
                    type: "string"
                    description: "A human readable explanation of what went wrong."
                    example: "The requested resource was not found."
                  "doc_url":
                    type: "string"
                    description: "A link to our documentation with more details about this error code"
                    example: "https://dub.co/docs/api-reference/errors#invite-expired"
                required:
                  - "code"
                  - "message"
            required:
              - "error"
    "422":
      description: "The request was well-formed but was unable to be followed due to semantic errors."
      content:
        "application/json":
          schema:
            x-speakeasy-name-override: "UnprocessableEntity"
            type: "object"
            properties:
              "error":
                type: "object"
                properties:
                  "code":
                    type: "string"
                    enum:
                      - "unprocessable_entity"
                    description: "A short code indicating the error code returned."
                    example: "unprocessable_entity"
                  "message":
                    x-speakeasy-error-message: true
                    type: "string"
                    description: "A human readable explanation of what went wrong."
                    example: "The requested resource was not found."
                  "doc_url":
                    type: "string"
                    description: "A link to our documentation with more details about this error code"
                    example: "https://dub.co/docs/api-reference/errors#unprocessable-entity"
                required:
                  - "code"
                  - "message"
            required:
              - "error"
    "429":
      description: "The user has sent too many requests in a given amount of time (\"rate limiting\")"
      content:
        "application/json":
          schema:
            x-speakeasy-name-override: "RateLimitExceeded"
            type: "object"
            properties:
              "error":
                type: "object"
                properties:
                  "code":
                    type: "string"
                    enum:
                      - "rate_limit_exceeded"
                    description: "A short code indicating the error code returned."
                    example: "rate_limit_exceeded"
                  "message":
                    x-speakeasy-error-message: true
                    type: "string"
                    description: "A human readable explanation of what went wrong."
                    example: "The requested resource was not found."
                  "doc_url":
                    type: "string"
                    description: "A link to our documentation with more details about this error code"
                    example: "https://dub.co/docs/api-reference/errors#rate-limit_exceeded"
                required:
                  - "code"
                  - "message"
            required:
              - "error"
    "500":
      description: "The server has encountered a situation it does not know how to handle."
      content:
        "application/json":
          schema:
            x-speakeasy-name-override: "InternalServerError"
            type: "object"
            properties:
              "error":
                type: "object"
                properties:
                  "code":
                    type: "string"
                    enum:
                      - "internal_server_error"
                    description: "A short code indicating the error code returned."
                    example: "internal_server_error"
                  "message":
                    x-speakeasy-error-message: true
                    type: "string"
                    description: "A human readable explanation of what went wrong."
                    example: "The requested resource was not found."
                  "doc_url":
                    type: "string"
                    description: "A link to our documentation with more details about this error code"
                    example: "https://dub.co/docs/api-reference/errors#internal-server_error"
                required:
                  - "code"
                  - "message"
            required:
              - "error"
